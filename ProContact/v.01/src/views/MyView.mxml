<?xml version="1.0" encoding="utf-8"?>
<components:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="spark.components.*" title="Connect to ProContact"  creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import connection.SOAP;
			import connection.SOAPEvent;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var soap : SOAP = SOAP.getInstance();
			private var sharedObject :SharedObject = SharedObject.getLocal("loginData");

			
			protected function serverConnect(event:MouseEvent):void
			{
				okButton.enabled = false;
				stateMessage.text = "Connect to server..."
				invalidateDisplayList();
				
				
				var wsdl : String = "http://" + server.text + "/vdom.wsdl";
				
				soap.addEventListener( "loadWsdlComplete", soap_initCompleteHandler );
				soap.addEventListener( FaultEvent.FAULT, soapError );
				soap.init( wsdl );
				
				function soap_initCompleteHandler( event : Event ) : void
				{
					sharedObject.data.server = server.text;
					sharedObject.flush();
					
					soap.removeEventListener( "loadWsdlComplete", soap_initCompleteHandler );
					soap.addEventListener( SOAPEvent.LOGIN_OK, soap_loginOKHandler );
					
					soap.login( login.text, password.text );
					
					stateMessage.text = "Login to server..."
					invalidateDisplayList();
				}
				
				function soap_loginOKHandler( event : SOAPEvent ) : void
				{
					soap.removeEventListener( SOAPEvent.LOGIN_OK, soap_loginOKHandler );
					
					sharedObject.data.login = login.text;
					sharedObject.data.password = password.text;
					
					sharedObject.flush();

					listApplications();
				}
				
			}
			
			public function soapError( event : FaultEvent ) : void
			{
				var _result : String ;
				if ( "faultstring" in event.fault )
					stateMessage.text =  event.fault["faultstring"] ;
				else
					stateMessage.text =  event.fault.faultString ;
				
				okButton.enabled = true;
			}
			private function listApplications(  ) : void
			{
				stateMessage.text = "Login to ProContact..."
				invalidateDisplayList();
				
				if( user.text == "" || userPassword.text == "")
				{
					stateMessage.text = "Input user and user password"
					okButton.enabled = true;
					
					return;
				}
				
				soap.remote_call.addEventListener( ResultEvent.RESULT, listAppResultHandler );
				soap.remote_call.addEventListener( FaultEvent.FAULT, soapError );
				
				
				var xml_param : String	= "<Arguments><CallType>server_action</CallType></Arguments>";
				var appID : String = "526ae088-8004-469c-9d8e-cea715f8f63b";
				var pageID : String = "79e13aa6-4498-4b1c-be99-47373df2cae2";
				var actionName : String = "login";
				var data : String = '{"login" : "'+user.text+'", "password" : "'+ userPassword.text+'"}';
//				var data : String = '{"login" : "root", "password" : "root"}';
				
				
				soap.remote_call( appID, pageID,  "login", xml_param, data );
				
				function listAppResultHandler( event : ResultEvent ) : void
				{
					 
						
					soap.remote_call.removeEventListener( ResultEvent.RESULT, listAppResultHandler );
					soap.remote_call.removeEventListener( FaultEvent.FAULT, soapError );
					var result : String =  event.result as String;
					
					result = result.replace(/<Key>[0-9]+_[0-9]<\/Key>/, ""); 
					
					var curUser : Object = JSON.parse(result);
					if ( curUser[0] == 'error')
					{
						stateMessage.text = curUser[1] as String;
						okButton.enabled = true;
						
						invalidateDisplayList();
					}
					else
					{
						sharedObject.data.user = user.text;
						sharedObject.data.userPassword = userPassword.text;
						
						sharedObject.flush();
						
						navigator.pushView(VDOMAplication, {'server' : server.text } );
					}
					
					
				}
			}
		
			protected function getSharedObjectData(name : String) : String
			{
			 	return	sharedObject.data[ name ] ? sharedObject.data[name] : ""
			}
				
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				server.text =  	getSharedObjectData( "server" ); 
				login.text = 	getSharedObjectData( "login" );
				password.text = getSharedObjectData( "password" );
				user.text = 	getSharedObjectData( "user" );
				userPassword.text = getSharedObjectData( "userPassword" );
			}
			
		]]>
	</fx:Script>
	
	
	<components:layout>
		<s:VerticalLayout horizontalAlign="center" paddingTop="11"/>
		
	</components:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<components:navigationContent />
	<s:Label text="Server address"/>
	<s:TextInput id="server" text="192.168.0.193" change="{stateMessage.text=''}"/>
	<s:Label text="login"/>
	<s:TextInput id="login" text="root" change="{stateMessage.text=''}"/>
	<s:Label text="Password" />
	<s:TextInput  id="password" text="root" change="{stateMessage.text=''}"/>
	<s:Label text="User"/>
	<s:TextInput id="user" text="root" change="{stateMessage.text=''}"/>
	<s:Label text="User password" />
	<s:TextInput  id="userPassword" text="root" change="{stateMessage.text=''}"/>
	
	<s:Button id="okButton" label="Ok" click="serverConnect(event)"/>
	<s:Label id="stateMessage"  color="green" width="100%" height="100%"/>
	
</components:View>
