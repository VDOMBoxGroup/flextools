<?xml version="1.0" encoding="utf-8"?>
<!--
	ListItem component for Resource Browser, VDOM2 Box component
	Developed by Vadim A. Usoltsev, Tomsk, Russia, 2008
-->
<mx:HBox
	xmlns:mx="http://www.adobe.com/2006/mxml"
	width="174" height="50" 
	horizontalAlign="left" borderStyle="solid"
	verticalAlign="middle" 
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	paddingTop="3" paddingLeft="3" paddingRight="3" paddingBottom="3"
	backgroundColor="#FFF6EA" cornerRadius="3"
	verticalGap="1" horizontalGap="3" xmlns:resourceBrowser="resourceBrowser.*">
	
	<resourceBrowser:SmoothImage id="__image" height="42" width="42"
		verticalAlign="middle" horizontalAlign="center" maintainAspectRatio="true"
		scaleContent="true"	/>
	<mx:VBox width="122" horizontalGap="0" verticalGap="1" horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalAlign="middle">
		<mx:HBox width="100%" horizontalAlign="left" horizontalGap="3" >
			<mx:Label id="__type" text="JPG:" textAlign="left" fontWeight="bold" />
			<mx:Label id="__res" text="" textAlign="left" />	
		</mx:HBox>
		<mx:Label id="__name" text="img" textAlign="left" width="122" />	
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.controls.Text;
		
			import mx.controls.Image;
			
			private var loader:Loader = new Loader();
			
			private var __id:String;
			private var __selected:Boolean = false;
			private var __objType:String = "";
			
			public var imageWidth:int = 0;
			public var imageHeight:int = 0;

			public function set resource(source:Object):void {
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, imageLoadComplete);
				loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				loader.loadBytes(source.data);
			}
			
			private function imageLoadComplete(event:Event):void {
				loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, imageLoadComplete);
				__image.source = loader.content				
				imageWidth = loader.width;
				imageHeight = loader.height;
				__res.text = imageWidth.toString() + "x" + imageHeight.toString();				
			}
			
			private function ioErrorHandler(ioEvent:IOErrorEvent):void {
				[Embed(source="/assets/resourceBrowserIcons/resourceType/blank.png")]
				var blank_Icon:Class;
				
				__image.source = blank_Icon; 
			}

			public function set objName(text:String):void { __name.text = text; }
			
			public function get objName():String { return __name.text; }

			public function set objID(objID:String):void { __id = objID; }
			
			public function set objType(objType:String):void {
				__type.text = objType.toUpperCase() + ":";
				__objType = objType;
			}
			
			public function get objType():String {
				return __objType;
			}

			public function get objID():String { return __id; }	
			
			public function set selected(value:Boolean):void {
				if (value == true) {
					__selected = true;
					this.setStyle('backgroundColor', "#D8D8D8");
				} else { 
					__selected = false;
					this.setStyle('backgroundColor', "#FFF6EA");
				}
			}
			
			public function set imageSource(source:Object):void {
				__image.source = source;
			}

			public function get imageSource():Object {
				return __image.source;
			}
						
			public function get selected():Boolean {
				return __selected;
			}
			
		]]>
	</mx:Script>
</mx:HBox>