<?xml version="1.0" encoding="utf-8"?>
<components:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:components="spark.components.*" 
				 title="Update contacts"  
				 creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import events.ContactsProxyEvent;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import model.ContactsProxy;
			
			
			private var sharedObject :SharedObject = SharedObject.getLocal("loginData");

			private var contactsProxy : ContactsProxy = ContactsProxy.getInstance();
			
			protected function getSharedObjectData(name : String) : String
			{
			 	return	sharedObject.data[ name ] ? sharedObject.data[name] : ""
			}
			
			protected function setSharedObjectData(name : String, value : String) : String
			{
				return	sharedObject.data[ name ] =value;
			}
				
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				server.text =  	getSharedObjectData( "server" ); 
				login.text = 	getSharedObjectData( "login" );
				password.text = getSharedObjectData( "password" );
				user.text = 	getSharedObjectData( "user" );
				userPassword.text = getSharedObjectData( "userPassword" );
				
				contactsProxy.addEventListener( Event.COMPLETE,  contactsProxyComplete, false, 0, true ) ;
				contactsProxy.addEventListener( ContactsProxyEvent.FAULT,  contactsProxyFault, false, 0, true );
				contactsProxy.addEventListener( ContactsProxyEvent.INFORMATION,  contactsProxyInformation, false, 0, true );
			}
			
			private function contactsProxyComplete( event : Event ):void
			{
				contactsProxy.removeEventListener( Event.COMPLETE,  contactsProxyComplete) ;
				contactsProxy.removeEventListener( ContactsProxyEvent.FAULT,  contactsProxyFault);
				contactsProxy.removeEventListener( ContactsProxyEvent.INFORMATION,  contactsProxyInformation);
				
				trace("contactsProxyComplete");
				stateMessage.text = "Ok"
				navigator.pushView( Contacts);
			}
			
			
			private function contactsProxyFault( event : ContactsProxyEvent ):void
			{
				stateMessage.text = event.message;
				stateMessage.setStyle("color", "red");
			}
			
			private function contactsProxyInformation( event : ContactsProxyEvent ):void
			{
				stateMessage.text = event.message;
				stateMessage.setStyle("color", "green");
			}
			
			
			
			private function serverConnect():void
			{
				
				  	setSharedObjectData( "server" , server.text); 
					setSharedObjectData( "login" , login.text);
					setSharedObjectData( "password", password.text );
					setSharedObjectData( "user", user.text );
					setSharedObjectData( "userPassword", userPassword.text );
				
				
				contactsProxy.updateContacts( server.text, login.text, password.text,
					user.text, userPassword.text );
			}
			
		]]>
	</fx:Script>
	
	
	<components:layout>
		<s:VerticalLayout horizontalAlign="center" paddingTop="11"/>
		
	</components:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<components:navigationContent>
		
	</components:navigationContent>
	
			
		
	<s:VGroup height="50" maxHeight="50"
			  includeInLayout="true">
		<s:Rect height="100%" width="100%">
			<s:fill>
				<s:SolidColor color="red"/>
			</s:fill>
		</s:Rect>
		<s:Label id="stateMessage"  color="green" width="100%"  text="123"/>
		<s:Label text="Server address"/>
		<s:TextInput id="server" text="" change="{stateMessage.text=''}"/>
		<s:Label text="login"/>
		<s:TextInput id="login" text="" change="{stateMessage.text=''}"/>
		<s:Label text="Password" />
		<s:TextInput  id="password" text="" change="{stateMessage.text=''}" displayAsPassword="true" />
		<s:Label text="User"/>
		<s:TextInput id="user" text="" change="{stateMessage.text=''}"/>
		<s:Label text="User password" />
		<s:TextInput  id="userPassword" text="" change="{stateMessage.text=''}" displayAsPassword="true"/>
		
		<s:Button id="okButton" label="Ok" click="serverConnect()"/>
		
	</s:VGroup>
		
	
</components:View>
