<?xml version="1.0" encoding="utf-8"?>

<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" width="400" height="300"
	title="Pages Settings"
	creationComplete="creationComplete()"
	showCloseButton="true"
	verticalScrollPolicy="off" horizontalScrollPolicy="off" 
	borderAlpha="0.98" cornerRadius="1" 
	visible="true" shadowDirection="right"
	borderColor="#373739" titleStyleName="resourceBrowserTitle"
	borderThicknessLeft="1" borderThicknessRight="1"
>
	<mx:Style>
		.resourceBrowserTitle {
			color:#FFFFFF;
			fontWeight:bold;
		}
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.CheckBox;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			public var curPage : Object;
			public var pageLn	: String; 
			public var productName	: String; 
			
			private var sqlProxy : SQLProxy = new SQLProxy();
			
			private function creationComplete():void 
			{
				addEventListener(CloseEvent.CLOSE, closeHandler); 
				PopUpManager.centerPopUp(this);
				
				addEventListener(KeyboardEvent.KEY_UP, keyboardHandler);
				this.pageDescription.addEventListener(KeyboardEvent.KEY_UP, keyboardHandler);
				this.pageDescription.addEventListener(KeyboardEvent.KEY_DOWN, keyboardDownHandler);
				
				pageLabel.setFocus() ;
				
				vilidate();
			}
			
			private function vilidate():void
			{
				pageName.text = "";
				pageLabel.htmlText = "";
				//pageLabel.text = "";
				chboxUseToc.selected = false;

				if(productName != "" && curPage.@name != "" && pageLn != "")
					var resoult : Object = sqlProxy.getPage(productName, pageLn, curPage.@name );
				
				if(resoult)
				{	
					pageVersion.text = resoult[0]["version"];
					pageDescription.text = resoult[0]["description"];
					pageLabel.htmlText = resoult[0]["title"];
					//pageLabel.text = resoult[0]["title"];
					pageName.text = resoult[0]["name"];
					chboxUseToc.selected = Boolean(resoult[0]["useToc"]);
				}
			}
			
			private function keyboardDownHandler(msEvt:KeyboardEvent):void
			{
				switch(msEvt.charCode)
				{
					case Keyboard.ENTER:
					{
						if (!msEvt.ctrlKey) {
							msEvt.preventDefault();
						}
						break;
					}	
					default:
					{
						break;
					}
				}
			}
			
			private function keyboardHandler(msEvt:KeyboardEvent):void
			{
				switch(msEvt.charCode)
				{
					case Keyboard.ESCAPE:
					{
						dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
						break;
					}
					case Keyboard.ENTER:
					{
						if (!msEvt.ctrlKey) {
							if (this.getFocus() == this.btnCancel)
							{
								cancelPressed();
								return;
							}
							
							if (this.getFocus() == this.btnUndo)
							{
								undoClickHandler();
								return;
							}
							
							msEvt.preventDefault();
							okHandler();
						}
						break;
					}	
					default:
					{
						break;
					}
				}
			}
			
			private function closeHandler(cEvent:CloseEvent):void 
			{
				PopUpManager.removePopUp(this);
			}
			
			private function cancelPressed():void 
			{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function okHandler():void 
			{
				var pageOldContent	: String;
				var pageNewContent	: String;
				var curPageFromDB	: Object;
				var pageNewH1		: String;
				var contentXML		: XML;
					
				pageNewH1 = "<h1>"+ pageLabel.text +"</h1>";
				
				curPageFromDB = sqlProxy.getPage(productName, pageLn, curPage.@name);
				
				if (!curPageFromDB) {
					return;
				}
				
				pageOldContent = curPageFromDB[0]["content"];
					
				if (!pageOldContent || pageOldContent.toLowerCase().indexOf("<html>") == -1) {
					pageOldContent = HTML_WYSIWYG.getNewPageContent("");
				}
				
				contentXML = new XML(Utils.convertSpaces(pageOldContent));
				
				if (contentXML.body) {
					if (contentXML.body.h1 && contentXML.body.h1.length() > 0) {
						contentXML.body.h1 = pageLabel.text;
					} else {
						contentXML.body.prependChild(XML(pageNewH1));
					}
					
					pageNewContent = Utils.restoreSpaces(contentXML.toXMLString());
				} else {
					pageNewContent = pageOldContent;
				}
				
				var result :Object = sqlProxy.changePageProperties(productName, pageLn, curPage.@name,
																	pageName.text, pageLabel.text, 
																	pageDescription.text, pageNewContent, chboxUseToc.selected);
			
				if(result)
				{
					curPage.@name = pageName.text;
					curPage.@title = pageLabel.text;
				}
													 
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function undoClickHandler():void
			{
				vilidate();
			}
			
		]]>
		
	</mx:Script>
	<mx:HBox width="100%" height="100%">
		<mx:VBox label="Products" width="100%" height="100%" paddingBottom="10" paddingLeft="10" paddingRight="10">
			<mx:Label text="Product:"  fontSize="20"/>
			<mx:Canvas width="100%" height="100%" >
				
				<mx:Label  x="17" y="13" text="Label:" />
				<mx:TextInput id="pageLabel" x="65" y="11" text="" width="211"/>
				
				<mx:Label x="17" y="42" text="Name:"/>
				<mx:TextInput id="pageName" x="65" y="40" width="211" editable="false"
							  text=""/>
				
				<mx:CheckBox id="chboxUseToc" x="18" y="173" label="Use table of content"/>
					
				<mx:Label x="17" y="203" text="Version:"/>
				<mx:Label id="pageVersion" x="77" y="203" text="12"  width="41"/>
				
				<mx:Label x="17" y="78" text="Description:"/>
				<mx:TextArea id="pageDescription" x="18" y="96" width="258" height="69"/>
			</mx:Canvas>
		</mx:VBox>
		
	<mx:VBox horizontalAlign="center"   backgroundColor="#373739"
			height="100%" paddingTop="2" paddingBottom="2" paddingLeft="10" paddingRight="10" color="#FFFFFF" >
    		 
    		  <mx:Button id="btnOK" label="Ok"  click="{okHandler()}"
    		  	color="#FFFFFF"  width="100%"  borderColor="#999999"
				fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1" themeColor="#656565" textRollOverColor="#FFFFFF"/>
			
			<mx:Button  id="btnUndo" label="Undo"  click="{undoClickHandler()}"
				color="#FFFFFF"  width="100%" borderColor="#999999"
				fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1"  themeColor="#656565" textRollOverColor="#FFFFFF"/>
			
			<mx:Button  id="btnCancel" label="Cancel" 
				click="{cancelPressed()}" color="#FFFFFF" width="100%" borderColor="#999999"
				fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1" themeColor="#656565" textRollOverColor="#FFFFFF"/>
	</mx:VBox>
	</mx:HBox>
</mx:TitleWindow>
