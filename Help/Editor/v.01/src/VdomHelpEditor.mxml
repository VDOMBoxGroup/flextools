<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication
	
	showStatusBar="false"
	showGripper="false"
	showTitleBar="false"
	
	xmlns:vdomTitleBar="vdom.core.vdomTitleBar.*"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	minWidth="650" minHeight="300"
	layout="absolute" 
	 viewSourceURL="srcview/index.html"  creationComplete="{creationCompleteHandler()}"
	backgroundColor="0x373739"   width="700" height="600" titleBarColors="[ 0x666666, 0x222222 ]" title="VDOM Help Aplication" 
	titleTextStyleName="tbStyle" titleIcon="@Embed('../assets/bookmarks.png')" xmlns:local="*">
	<mx:Style>
		.tbStyle {
			color : #FFFFFF;
		}
	</mx:Style>
	<mx:Script>
	<![CDATA[
		import mx.events.ListEvent;
		import mx.events.CloseEvent;
		import mx.managers.PopUpManager;
		import mx.collections.XMLListCollection;
	
		private var sqlProxy : SQLProxy = new SQLProxy(); 
		private function creationCompleteHandler():void
		{
			sqlProxy.creatDB();
			
			showAllProducts();
//			tree.dataProvider = XML("<page title = 'page 0' name = 'page_0' isBranch='true' />");
		}
		
		private function treeChangeHandler(lstEvt:ListEvent):void
		{
//			showSelectedPage(tree.selectedItem.@name);
//			trace("Tree Change");
			sqlProxy.setToc(tree.dataProvider.toXMLString(), cmboxProduct.selectedItem.name);
			
			
			if(!tree.selectedItem)
			{
				tree.selectedItem = XML(lstEvt.itemRenderer.data.toXMLString());
				tree.validateNow();
			}
//			tree.selectedItem = XML(lstEvt.itemRenderer.data);
			trace(": "+lstEvt.itemRenderer.data.@name +" : "+ tree.selectedItem.@name);
				
			var resoult : Object = sqlProxy.getPage(cmboxProduct.selectedItem.name, "en_US", tree.selectedItem.@name);
			if(resoult)
			{
				htmlSource.text = resoult[0]["content"];
			}
		}
		
		private function showAllProducts():void
		{
			cmboxProduct.dataProvider =  sqlProxy.getAllProducts();
//			listOfProducts.selectedIndex = 0;
			changeProduct();
			
		}
		
		private function showSelectedPage(pageName:String):void
		{
			
			var fileName:String = pageName	;
			var newFile:File = File.applicationStorageDirectory.resolvePath(fileName);
			var fullPath : String = newFile.url;
			var f : File = File.applicationStorageDirectory; 
			html.location = fullPath; 
		}
		
		
		private var arrayOfPages:Array = new Array();
		private function pageChangedHandler(event:Event):void
		{
			var fullPath:String = html.location;
			var fileName : String = fullPath.substr( 13 ); 
			var phraseRE:RegExp = /\\/gim;
			fileName = fileName.replace(phraseRE,"/"); 

			
			
			if(!tree.selectedItem)
				return;
			var selectedItem:String = tree.selectedItem.@name;
			
			if(selectedItem == fileName)
				return;
			
			if(arrayOfPages[fileName])
			{
				selectNecessaryItem(fileName);
			}else
			{
				navigateToURL(new URLRequest(fullPath));
				showSelectedPage(selectedItem);
			}
		}
		
		private function selectNecessaryItem(fileName:String):void
		{
			var currentElement:XML = tree.dataProvider.source..page.(@name == fileName)[0]; // tree.dataProvider.source..page.(@name == fileName)[0];
			
			openTree(currentElement);
			tree.selectedItem = currentElement;
			tree.validateNow();
			
//			tree.selectedItem = currentElement;
			
//			var index:int =  tree.getItemIndex(tree.selectedItem);
//			tree.scrollToIndex(index);
			
//			findDistanition(fileName);
		}
		
		private function openTree(item:Object):void
		{
			var parentItem:Object = XML(item).parent();
			if (parentItem)
			{
//				distan.text = item.@title +' \\ '+  distan.text;
				openTree(parentItem);
				tree.expandItem(parentItem, true, false);
				tree.validateNow();
			}
		}
		
		private function minMaximize():void
		{
			if (stage.nativeWindow.displayState == NativeWindowDisplayState.MAXIMIZED)
				restore();
			else
				maximize();
		}
		
		
		private var toc : XML = new XML();
		private var count : int = 0; 
		private function addItem():void
		{
			if(tree.selectedItem)
				var name : String = tree.selectedItem.@name;
			else trace("NO SELECTED PAGE");
				
			toc = tree.dataProvider[0];
			
			var pageName : String = "page_" + count++;
			
			while(sqlProxy.checkPageName(pageName))
			{
				pageName = "page_" + count++;
				trace("Page in data base: " + pageName);
			}
			
			sqlProxy.addPage(cmboxProduct.selectedItem.name, "en_US", pageName, 0, 
								"Write Title", "write Description", "it is  "+ pageName);
			
			toc.appendChild(XML("<page title = 'page " + count+ "' name = 'page_" + count+ "' isBranch='true' />"));
			tree.dataProvider = null;
			
			tree.validateNow();
			tree.dataProvider = toc;

			tree.validateNow();
			if(tree.selectedItem)
				selectNecessaryItem(name);
			
			sqlProxy.setToc(tree.dataProvider.toXMLString(), cmboxProduct.selectedItem.name);
			
//			tree.expandItem(toc, true);
//			tree.selectedIndex = selectedIndex;
			
		}
		
		private function removeItem():void
		{
			var selectedIndex : Number = tree.selectedIndex; 
			if( selectedIndex > 0)
			{
				delete toc..page.(@name == tree.selectedItem.@name)[0];
//				toc = XML(tree.dataProvider);
				
					tree.dataProvider = null;
					tree.validateNow();
					tree.dataProvider = toc;
					
					tree.validateNow();
					tree.expandItem(toc, true);
					
					tree.selectedIndex = selectedIndex;
					if (!tree.selectedIndex)
						tree.selectedIndex = selectedIndex - 1;

			}
			/*
			if(tree.selectedItem)
			{
				if( toc.getItemIndex(tree.selectedItem) == -1)
				{
					delete tree.dataProvider.source..page.(@name == tree.selectedItem.@name)[0];
					toc = XML(tree.dataProvider);
				}
				else
				{
					toc.removeItemAt(toc.getItemIndex(tree.selectedItem));

					tree.dataProvider = null;
					tree.validateNow();
					tree.dataProvider = toc;
				}
			}
			*/	
		}
		
		private function productEdit():void
			{
				var rbWnd:Products = Products(PopUpManager.createPopUp(this, Products, true));
				rbWnd.addEventListener(CloseEvent.CLOSE, closeProductsHandler);
			}
		private function closeProductsHandler(evt:CloseEvent):void
		{
			showAllProducts();
		}
		
		private function changeProduct():void
		{
			if(!cmboxProduct.selectedItem)
				return;
				
			var resoult : Object = sqlProxy.getToc(cmboxProduct.selectedItem.name)  ;
			tree.dataProvider =  resoult as XML;
			
			toc = tree.dataProvider[0];
			
			tree.validateNow();
			tree.expandItem(toc, true);
			tree.selectedIndex = 0;
		}
		
	
	]]>
</mx:Script>
	
<mx:VBox width="100%" height="100%"   x="0">
	<mx:Canvas width="100%" >
		<mx:Image source="@Embed('../assets/header.png')" width="100%" maintainAspectRatio="false" scaleContent="true" 
			mouseDown="{nativeWindow.startMove();}" doubleClick="{minMaximize()}" doubleClickEnabled="true"/>
		<mx:HBox paddingLeft="5" paddingTop="5" paddingRight="5" 
				color="#FFFFFF" width="100%"  >
			<mx:Image source="@Embed('../assets/bookmarks.png')" />
			<mx:Label text="VDOM Help Aplication" />
			<mx:HBox width="100%"  horizontalAlign="right" paddingTop="2">
				<mx:Image source="@Embed('../assets/minimize.png')" right="0" click="{minimize()}"/>
				<mx:Image source="@Embed('../assets/restore.png')" right="0" click="{minMaximize()}"/>
				<mx:Image source="@Embed('../assets/close.png')" right="0" click="{close()}"/>
			</mx:HBox>
		</mx:HBox>
	</mx:Canvas>
	
	<mx:HRule width="100%" strokeColor="0x1a1a1a" shadowColor="0x737373"/>
	<mx:HRule width="100%" strokeColor="0x1a1a1a" shadowColor="0x4b4c4c"/>
	<mx:HDividedBox y="60" width="100%" height="100%" horizontalGap="1">
		<mx:VBox height="100%" minWidth="220" horizontalScrollPolicy="off">
			<mx:HBox paddingLeft="3" paddingRight="3" color="#FFFFFF">
				<mx:ComboBox  id="cmboxProduct" width="100%" labelField="title" dataProvider="{{label:'VDOM Editor'}}"
					 	fillColors="#333333" iconColor="0xCCCCCC" change="{changeProduct()}"
		    		 textSelectedColor="#FFFFFF"  cornerRadius="1" 
		    		  borderColor="#999999" themeColor="#656565" 
		    		  textRollOverColor="#000000" selectionColor="#0000FF" />
				<mx:Button label="Edit" click="{productEdit()}"
					color="#FFFFFF" 	fillColors="#333333" 
		    		 textSelectedColor="#FFFFFF" cornerRadius="1"
		    		  borderColor="#999999" themeColor="#656565" 
		    		  textRollOverColor="#FFFFFF"/>
			</mx:HBox>
			<mx:Tree id="tree" width="100%" height="100%" color="#000000"  showRoot="true"
				labelField="@title"  dragEnabled="true" dropEnabled="true"  
				change="{treeChangeHandler(event)}"  dragMoveEnabled="true" 	
				folderOpenIcon="@Embed('../assets/open_folder.png')" 
				folderClosedIcon="@Embed('../assets/close_folder.png')"
				openDuration="0" 
				defaultLeafIcon="@Embed('../assets/page.png')" /> 

			<mx:HBox paddingLeft="3">
				<mx:Button  label="Add Item" click="{addItem()}"
				color="#FFFFFF" 	fillColors="#333333" 
	    		 textSelectedColor="#FFFFFF" cornerRadius="1"
	    		  borderColor="#999999" themeColor="#656565" 
	    		  textRollOverColor="#FFFFFF"/>
				<mx:Button label="Remove Item" click="{removeItem()}" 
				color="#FFFFFF" 	fillColors="#333333" 
	    		 textSelectedColor="#FFFFFF" cornerRadius="1"
	    		  borderColor="#999999" themeColor="#656565" 
	    		  textRollOverColor="#FFFFFF"/>				
			</mx:HBox>
		</mx:VBox>
		<mx:TabNavigator width="100%" height="100%">
			<mx:Canvas width="100%" height="100%"  label="Edit">
				<mx:VBox width="100%" height="100%" verticalGap="0" verticalAlign="0"  >
					<mx:HBox width="100%" color="#000000" backgroundColor="#E4E4E4"  >
						<mx:VBox width="100%"  
							paddingTop="3" paddingLeft="3" paddingBottom="3">
							<mx:HBox  >
								<mx:Label text="Title: title"/>
								<mx:Label text=" v.5"  />
								<mx:Label text="(name)"/>
							</mx:HBox>
							<mx:HBox>
								<mx:Label text="Description: descrioption"/>
							</mx:HBox>
						</mx:VBox>	
						<mx:Button label="..."  bottom="0" />
				</mx:HBox>
					<mx:TextArea id="htmlSource" width="100%" height="100%" /> 
				</mx:VBox>
			</mx:Canvas >
			<mx:Canvas width="100%" height="100%" label="Preview">
				
			<mx:HTML id="html"  width="100%" height="100%" htmlText="{htmlSource.text}"
				locationChange="{pageChangedHandler(event)}"/>
			</mx:Canvas>
		</mx:TabNavigator>
	</mx:HDividedBox>
	<mx:HBox horizontalAlign="right" width="100%">
		<mx:VBox verticalGap="1" verticalAlign="0">
			<mx:Label text="VDOM Help Application" color="0xFFFFFF" textAlign="right" width="100%"/>
			<mx:Label text="Copyright© 2009 - V.D.O.M. Box Internationl - All rights reserved "  color="0xFFFFFF"/>
		</mx:VBox>
		<mx:Image source="@Embed('../assets/label.png')"/>
	</mx:HBox>
</mx:VBox>		
</mx:WindowedApplication>
