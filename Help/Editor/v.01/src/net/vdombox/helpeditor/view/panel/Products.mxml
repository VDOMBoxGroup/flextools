<?xml version="1.0" encoding="utf-8"?>

<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" width="400"
	title="Products"
	creationComplete="creationComplete()"
	showCloseButton="true"
	verticalScrollPolicy="off" horizontalScrollPolicy="off" 
	borderAlpha="0.98" cornerRadius="1" 
	visible="true" shadowDirection="right"
	borderColor="#373739" titleStyleName="resourceBrowserTitle"
	borderThicknessLeft="1" borderThicknessRight="1"
 height="233">
	<mx:Style>
		.resourceBrowserTitle {
			color:#FFFFFF;
			fontWeight:bold;
		}
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import net.vdombox.helpeditor.controller.ProjectsUpdater;
			import net.vdombox.helpeditor.model.proxy.SQLProxy;
			import net.vdombox.helpeditor.model.AlertMessages;
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.CheckBox;
			import mx.controls.PopUpButton;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import net.vdombox.helpeditor.controller.SpinnerPopUpManager;
			
			private var sqlProxy				: SQLProxy = new SQLProxy();
			
			private var projectsUpdater			: ProjectsUpdater = new ProjectsUpdater();
			
			private function creationComplete():void 
			{
				addEventListener(CloseEvent.CLOSE, closeHandler); 
				PopUpManager.centerPopUp(this);
				
				showAllProducts();
			}
			
			private function showAllProducts():void
			{
				listOfProducts.dataProvider =  sqlProxy.getAllProducts();
				listOfProducts.selectedIndex = 0;
			}
			
			private function validateListOfProducts(evt:Event):void
			{
				showAllProducts();
			}
			
			private function closeHandler(cEvent:CloseEvent):void 
			{
				PopUpManager.removePopUp(this);
			}
			
			private function cancelPressed():void 
			{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function okHandler():void 
			{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function editClickHandler():void
			{
				var rbWnd:EditProduct = EditProduct(PopUpManager.createPopUp(this, EditProduct, true));
				rbWnd.addEventListener(CloseEvent.CLOSE, validateListOfProducts);
				
				rbWnd.curentProduct =  listOfProducts.selectedItem;
				
			}
						
			private function addClickHandler():void
			{
				var rbWnd:AddProduct = AddProduct(PopUpManager.createPopUp(this, AddProduct, true));
				rbWnd.addEventListener(CloseEvent.CLOSE, validateListOfProducts);
			}
			
			private function addProductFromXMLClickHandler():void
			{
				projectsUpdater.addEventListener(ProjectsUpdater.UPDATE_COMPLETED, proudctListUpdateHandler);
				projectsUpdater.addEventListener(ProjectsUpdater.UPDATE_CANCELED, proudctListUpdateHandler);
				projectsUpdater.addEventListener(ProjectsUpdater.UPDATE_NOT_REQUIRED, proudctListUpdateHandler);
				
				projectsUpdater.addProductFromXML();				
			}
			
			private function proudctListUpdateHandler(aEvent:Event):void
			{
				projectsUpdater.removeEventListener(ProjectsUpdater.UPDATE_COMPLETED, proudctListUpdateHandler);
				projectsUpdater.removeEventListener(ProjectsUpdater.UPDATE_CANCELED, proudctListUpdateHandler);
				projectsUpdater.removeEventListener(ProjectsUpdater.UPDATE_NOT_REQUIRED, proudctListUpdateHandler);
				
				switch(aEvent.type)
				{
					case ProjectsUpdater.UPDATE_COMPLETED:
					{
						validateListOfProducts(null);
						break;
					}
					case ProjectsUpdater.UPDATE_NOT_REQUIRED:
					{
						Alert.show( AlertMessages.MSG_INCORRECT_PRODUCT_VERSION, AlertMessages.MSG_TYPE_ERROR);
						break;
					}
					default:
					{
						break;
					}
				}
				
			}
				
			
			private function deleteClickHandler():void
			{
				if( listOfProducts.selectedItem)
					Alert.show(AlertMessages.MSG_ASK_DELETE_PRODUCT, AlertMessages.MSG_TYPE_DELETE, 3, this, alertClickHandler);
			}
			
			private function alertClickHandler(event:CloseEvent):void
			{
				if (event.detail==Alert.YES)
		        {
		        	sqlProxy.deleteProduct(listOfProducts.selectedItem.name, listOfProducts.selectedItem.language);
		        	showAllProducts();
		        }else
		        {
//		        	hide();
		        }
			}
			
		]]>
		
	</mx:Script>
	<mx:HBox width="100%" height="100%">
		<mx:VBox label="Products" width="100%" height="100%" paddingBottom="10" paddingLeft="10" paddingRight="10">
			<mx:Label text="List of Products:"  fontSize="20"/>
			<mx:List  id="listOfProducts" width="100%" height="100%"  labelField="title"/>
		</mx:VBox>
	<mx:VBox horizontalAlign="center"   backgroundColor="#373739"
			height="100%" paddingTop="2" paddingBottom="2" paddingLeft="10" paddingRight="10" color="#FFFFFF" >
			
			<mx:Button  label="OK" 
				click="{cancelPressed()}" color="#FFFFFF" width="100%" borderColor="#999999"
				fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1" themeColor="#656565" textRollOverColor="#FFFFFF"/>
				
    		 <mx:Button  label="New"  click="{addClickHandler()}"
    		  	color="#FFFFFF"  width="100%"  borderColor="#999999"
				fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1" themeColor="#656565" textRollOverColor="#FFFFFF"/>
			
			<mx:Button label="Add" click="{addProductFromXMLClickHandler()}"
			    color="#FFFFFF"  width="100%"  borderColor="#999999"
		 	    fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1" themeColor="#656565" textRollOverColor="#FFFFFF"/>
		
			<mx:Button  label="Edit"  click="{editClickHandler()}"
				enabled="{ Boolean(listOfProducts.dataProvider.source.length)}"
				color="#FFFFFF"  width="100%" borderColor="#999999"
				fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1"  themeColor="#656565" textRollOverColor="#FFFFFF"/>
			
			<mx:Button  label="Delete"  click="{deleteClickHandler()}" 
				enabled="{Boolean(listOfProducts.dataProvider.source.length)}"
				color="#FFFFFF"  width="100%" borderColor="#999999"
				fillColors="#333333"  textSelectedColor="#FFFFFF" cornerRadius="1"  themeColor="#656565" textRollOverColor="#FFFFFF"/>
			
	</mx:VBox>
	</mx:HBox>
</mx:TitleWindow>
