<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				layout="absolute" 
				width="600" height="500"
				title="Templates"
				showCloseButton="true"
				verticalScrollPolicy="off" horizontalScrollPolicy="off" 
				borderAlpha="0.98" cornerRadius="1" 
				visible="true" shadowDirection="right"
				backgroundColor="#373739"
				borderColor="#373739" titleStyleName="resourceBrowserTitle"
				borderThicknessLeft="1" borderThicknessRight="1"
				creationComplete="creationCompleteHandler(event)"
				keyDown="window_keyDownHandler(event)" 
				xmlns:components="net.vdombox.helpeditor.view.components.*">
	
	<mx:Metadata>
	</mx:Metadata>
	
	<mx:Style>
		.resourceBrowserTitle 
		{
			color:#FFFFFF;
			fontWeight:bold;
		}
	</mx:Style>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.TextInput;
			import mx.core.UITextField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ListEventReason;
			import mx.managers.PopUpManager;
			import mx.utils.UIDUtil;
			
			import net.vdombox.helpeditor.model.AlertMessages;
			import net.vdombox.helpeditor.model.vo.TemplateVO;
			import net.vdombox.helpeditor.view.components.TemplateContentEditor;
			
			[Bindable]
			public var allowInsert : Boolean = false;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				addEventListener(CloseEvent.CLOSE, closeHandler);
				
				PopUpManager.centerPopUp(this);
			}
			
			private function closeHandler(cEvent:CloseEvent):void 
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function window_keyDownHandler(event:KeyboardEvent):void
			{
				if (event.target is UITextField)
					return;
				
				if (event.charCode == Keyboard.ESCAPE)
					dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			private function closeWindow () : void
			{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			protected function btnApply_clickHandler(event:MouseEvent):void
			{
				templatesGroup.saveTemplate(templatesGroup.selectedTemplate);
			}
			
			protected function btnOK_clickHandler(event:MouseEvent):void
			{
				templatesGroup.saveTemplates();
				
				closeWindow();
			}
			
			
			protected function btnInsert_clickHandler(event:MouseEvent):void
			{
				if (!templatesGroup.selectedTemplate)
				{
					closeWindow();
					return;
				}
					
				templatesGroup.saveTemplate(templatesGroup.selectedTemplate);
				
				dispatchEvent(new Event("insertClick"));
				
				closeWindow();
			}
			
			public function get selectedTemplateName () : String
			{
				if (!templatesGroup.selectedTemplate)
					return "";
				
				return templatesGroup.selectedTemplate.name;
			}
			
		]]>
	</mx:Script>
	
	<mx:HBox width="100%" height="100%"
			 left="10" right="10" top="10" bottom="10" >
		
		<components:TemplatesGroup  id="templatesGroup"
									width="100%" height="100%"/>
		
	</mx:HBox>
	
	<mx:ControlBar horizontalAlign="right">
		
		<components:BlackButton id="btnInsert"
				   label="Insert"
				   click="btnInsert_clickHandler(event)"
				   visible="{allowInsert}"/>
		
		<components:BlackButton id="btnApply"
				   label="Apply"
				   click="btnApply_clickHandler(event)"/>
		
		<components:BlackButton id="btnOK"
				   label="OK"
				   click="btnOK_clickHandler(event)"/>
		
		<components:BlackButton id="btnCancel"
				   label="Cancel"
				   click="closeWindow()"/>
		
	</mx:ControlBar>
	
</mx:TitleWindow>
