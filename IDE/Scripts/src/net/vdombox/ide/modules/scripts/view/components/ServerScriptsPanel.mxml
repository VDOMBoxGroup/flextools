<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 creationComplete="creationCompleteHandler()">

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;

			import net.vdombox.ide.common.events.PopUpWindowEvent;
			import net.vdombox.ide.common.model._vo.ServerActionVO;
			import net.vdombox.ide.common.view.components.VDOMImage;
			import net.vdombox.ide.common.view.components.button.AlertButton;
			import net.vdombox.ide.common.view.components.windows.Alert;
			import net.vdombox.ide.modules.scripts.events.ListItemRendererEvent;
			import net.vdombox.ide.modules.scripts.events.ServerScriptsPanelEvent;

			[Bindable]
			private var _scripts : ArrayCollection;

			public function get selectedScript() : ServerActionVO
			{
				return actionList.selectedItem as ServerActionVO;
			}

			public function set selectedScript( value : ServerActionVO ) : void
			{
				actionList.selectedItem = value;
			}

			public function get scripts() : Array
			{
				return _scripts ? _scripts.source : null;
			}

			public function set scripts( value : Array ) : void
			{
				var oldSelectedItem : ServerActionVO;
				var oldSelectedIndex : int;
				var isSelectedItemChanged : Boolean = true;

				if ( actionList )
				{
					oldSelectedIndex = actionList.selectedIndex;
					oldSelectedItem = actionList.selectedItem as ServerActionVO;
				}

				if ( value && value.length > 0 )
				{
					createServerAction.visible = true;
					var newSelectedIndex : int = 0;

					if ( oldSelectedItem )
					{
						var i : uint;
						for ( i = 0; i < value.length; i++ )
						{
							if ( ServerActionVO( value[ i ] ).objectID == oldSelectedItem.objectID || ServerActionVO( value[ i ] ).name == oldSelectedItem.name )
							{
								newSelectedIndex = i;
								isSelectedItemChanged = false;

								break;
							}
						}
					}
					else
					{
						isSelectedItemChanged = false;
					}

					_scripts = new ArrayCollection( value );

					_scripts.sort = new Sort();

					var sortField : SortField = new SortField( "name" );
					sortField.caseInsensitive = true;

					_scripts.sort.fields = [ sortField ];
					_scripts.refresh();

					if ( newSelectedIndex != -1 )
						actionList.validateNow();

					actionList.selectedIndex = -1;
				}
				else
				{
					createServerAction.visible = false;
					_scripts = null;

					if ( actionList.selectedIndex != -1 )
						actionList.selectedIndex = -1;

					if ( oldSelectedIndex == -1 )
						isSelectedItemChanged = false;
				}

			}

			public function set titleAndName( value : String ) : void
			{
				title = resourceManager.getString( 'Scripts_General', 'server_scripts_panel_title' ) + " " + value;
			}

			protected function actionList_changeHandler( event : ListItemRendererEvent ) : void
			{
				dispatchEvent( new ServerScriptsPanelEvent( ServerScriptsPanelEvent.SELECTED_SERVER_ACTION_CHANGED ) )
			}

			protected function creationCompleteHandler() : void
			{
				actionList.addEventListener( ListItemRendererEvent.ITEM_CHENGED, actionList_changeHandler, true, 0, true );
				actionList.addEventListener( KeyboardEvent.KEY_DOWN, itemrenderer1_keyDownHandler, false, 0, true );
				actionList.addEventListener( ListItemRendererEvent.DELETE_PRESS, itemrenderer1_DeleteHandler, true, 0, true );
			}

			private function itemrenderer1_keyDownHandler( event : KeyboardEvent ) : void
			{
				if ( event.keyCode == Keyboard.DELETE )
					Alert.Show( resourceManager.getString( 'Scripts_General', 'delete_server_action' ), resourceManager.getString( 'Scripts_General', 'delete_Renderer' ), AlertButton.OK_No, this.parentApplication, removeactionRequest );
			}

			private function removeactionRequest( event : PopUpWindowEvent ) : void
			{
				if ( event.detail == Alert.YES )
				{
					var deleteEvent : ServerScriptsPanelEvent = new ServerScriptsPanelEvent( ServerScriptsPanelEvent.DELETE_ACTION );
					deleteEvent.object = selectedScript;
					dispatchEvent( deleteEvent );
				}
			}

			private function itemrenderer1_DeleteHandler( event : ListItemRendererEvent ) : void
			{
				var deleteEvent : ServerScriptsPanelEvent = new ServerScriptsPanelEvent( ServerScriptsPanelEvent.DELETE_ACTION );
				deleteEvent.object = event.target.data;
				dispatchEvent( deleteEvent );
			}
		]]>
	</fx:Script>

	<s:Rect width="100%"
			height="100%">
		<s:fill>
			<s:BitmapFill source="{VDOMImage.Fon_Texture}"
						  smooth="true"
						  fillMode="repeat"/>
		</s:fill>
	</s:Rect>

	<mx:Image id="icon"
			  source="@Embed('assets/ServerScripts_white.png')"
			  height="16"
			  width="16"
			  left="10"
			  top="-23"
			  smoothBitmapContent="true"/>

	<mx:Image id="createServerAction"
			  source="{VDOMImage.Plus}"
			  height="20"
			  width="20"
			  right="10"
			  top="-23"
			  smoothBitmapContent="true"
			  click="dispatchEvent( new ServerScriptsPanelEvent( ServerScriptsPanelEvent.CREATE_ACTION ) )"
			  visible="false"/>

	<s:List id="actionList"
			dataProvider="{ _scripts }"
			height="100%"
			labelField="name"
			width="100%"
			contentBackgroundAlpha="0"
			borderVisible="false"
			itemRenderer="net.vdombox.ide.modules.scripts.view.components.ListItemRenderer"
			doubleClickEnabled="true"/>
</s:Panel>
