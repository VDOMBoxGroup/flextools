<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 creationComplete="sparkskin1_creationCompleteHandler(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("net.vdombox.ide.modules.scripts.view.components.PreferencesWindow")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;

			import net.vdombox.ide.common.model._vo.ColorSchemeVO;

			protected function autocompleteAutoShow_creationCompleteHandler( event : FlexEvent ) : void
			{
				autocompleteAutoShow.selected = hostComponent.autoShowAutocomplete
			}

			protected function sparkskin1_creationCompleteHandler( event : FlexEvent ) : void
			{
				// Set colorScheme
				var selectedItemName : String = hostComponent.selectedColorSheme.name;

				for each ( var colorShaeme : ColorSchemeVO in colorSchemes.dataProvider )
				{
					if ( colorShaeme.name == selectedItemName )
					{
						colorSchemes.selectedItem = colorShaeme;
						break;
					}
				}

				//Set FontSize

				var selectedFontSize : int = hostComponent.selectedFontSize;

				for each ( var size : int in fontSize.dataProvider )
				{
					if ( size == selectedFontSize )
					{
						fontSize.selectedItem = size;
						break;
					}
				}

				// Set selectKeyByAutoComplte

				if ( hostComponent.selectKeyByAutoComplte == "tab" )
					rbtnTab.selected = true;
				else
					rbtnEnter.selected = true;
			}
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="disabledAndInactive"/>
		<s:State name="normalAndInactive"/>
		<s:State name="disabled"/>
		<s:State name="normal"/>
	</s:states>


	<s:Rect width="100%"
			height="100%"
			radiusX="10"
			radiusY="10">
		<s:fill>
			<s:SolidColor color="#424242"/>
		</s:fill>
	</s:Rect>

	<s:VGroup width="100%"
			  height="100%"
			  top="9"
			  bottom="9"
			  left="9"
			  right="9"
			  gap="0"
			  paddingBottom="10">

		<s:Group width="100%"
				 height="42">
			<s:TitleBar id="titleBar"
						minHeight="32"
						width="100%"
						skinClass="net.vdombox.ide.common.view.skins.PopupWindowTitleBarSkin"/>
		</s:Group>

		<s:HGroup width="100%"
				  paddingLeft="10"
				  paddingRight="10"
				  verticalAlign="middle">

			<s:Label text="Font size"
					 color="#EEEEEE"/>

			<mx:Spacer width="100%"/>

			<s:DropDownList id="fontSize"
							skinClass="spark.skins.spark.DropDownListSkin"
							dataProvider="{ hostComponent.fontSizeList }"/>

		</s:HGroup>

		<s:HGroup width="100%"
				  paddingLeft="10"
				  paddingRight="10"
				  verticalAlign="middle">

			<s:Label text="Color scheme"
					 color="#EEEEEE"/>

			<mx:Spacer width="100%"/>

			<s:DropDownList id="colorSchemes"
							skinClass="spark.skins.spark.DropDownListSkin"
							labelField="name"
							dataProvider="{ hostComponent.colorShemesList }"/>

		</s:HGroup>

		<s:VGroup width="100%"
				  paddingLeft="10"
				  paddingRight="10"
				  verticalAlign="middle">

			<s:CheckBox id="autocompleteAutoShow"
						label="Shows an autocomplete only by pressing Ctrl+Space"
						color="#EEEEEE"
						skinClass="spark.skins.spark.CheckBoxSkin"
						selected="{ hostComponent.autoShowAutocomplete }"
						creationComplete="autocompleteAutoShow_creationCompleteHandler(event)"/>

			<s:CheckBox id="showIndentLinesBox"
						label="Shows an indent lines"
						color="#EEEEEE"
						skinClass="spark.skins.spark.CheckBoxSkin"
						selected="{ hostComponent.showIndentLines }"/>

		</s:VGroup>

		<s:VGroup width="100%"
				  verticalAlign="middle"
				  paddingTop="15">

			<s:Label text="Use for select autocomplete:"
					 color="#FFFFFF"
					 paddingLeft="10"/>

			<s:VGroup width="100%"
					  paddingLeft="10"
					  paddingRight="10"
					  verticalAlign="middle">

				<s:RadioButton id="rbtnEnter"
							   label="Enter"
							   color="#FFFFFF"
							   change="{ hostComponent.setEnterKey() }"/>

				<s:RadioButton id="rbtnTab"
							   label="Tab"
							   color="#FFFFFF"
							   change="{ hostComponent.setTabKey() }"/>

			</s:VGroup>

		</s:VGroup>


		<mx:Spacer height="100%"/>

		<s:HGroup width="100%"
				  paddingLeft="10"
				  paddingRight="10"
				  verticalAlign="middle"
				  horizontalAlign="right"
				  gap="10">

			<s:Button id="ok"
					  label="OK"
					  click="{ hostComponent.ok_close_window() }"/>

			<s:Button id="cancel"
					  label="Cancel"
					  click="{ hostComponent.no_close_window() }"/>

		</s:HGroup>

	</s:VGroup>

</s:SparkSkin>
