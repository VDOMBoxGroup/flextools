<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 creationComplete="creationComplete()"
		 title="{ resourceManager.getString( 'Tree_General', 'levels_panel_title' ) }">

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;

			import net.vdombox.ide.common.view.components.VDOMImage;
			import net.vdombox.ide.modules.tree.events.LevelsFilterPanelEvent;
			import net.vdombox.ide.modules.tree.model.vo.TreeLevelVO;

			import spark.events.IndexChangeEvent;

			[Bindable]
			private var levels : ArrayList;

			[Bindable]
			private var selectAll : Boolean;

			[Bindable]
			private var _currentStructuretLevel : TreeLevelVO;

			public function set dataProvider( value : Array ) : void
			{
				levels = value && value.length > 0 ? new ArrayList( value ) : null;

				if ( levels && levels.length > 0 )
					currentStructureLevel = levels.getItemAt( 0 ) as TreeLevelVO;
				else
					currentStructureLevel = null;
			}

			public function get currentStructureLevel() : TreeLevelVO
			{
				return _currentStructuretLevel;
			}

			public function set currentStructureLevel( value : TreeLevelVO ) : void
			{
				_currentStructuretLevel = value;
			}

			private function switchAll() : void
			{
				for each ( var structureLevelVO : TreeLevelVO in levels.source )
				{
					structureLevelVO.visible = selectAll;
				}

				selectAll = !selectAll;
			}

			private function changeHandler( event : Event ) : void
			{
				if ( event is IndexChangeEvent )
				{
					dispatchEvent( new LevelsFilterPanelEvent( LevelsFilterPanelEvent.CURRENT_LEVEL_CHANGED ) );
					return;
				}

				var hasVisible : Boolean = false;

				if ( levels )
				{
					for each ( var structureLevelVO : TreeLevelVO in levels.source )
					{
						if ( structureLevelVO.visible )
						{
							hasVisible = true;
							break;
						}
					}
				}

				if ( !hasVisible && !selectAll )
					selectAll = true;
				else if ( hasVisible && selectAll )
					selectAll = false;
			}

			protected function creationComplete() : void
			{
				structureLevelsList.addEventListener( Event.CHANGE, changeHandler, true, 0, true );
			}
		]]>
	</fx:Script>

	<s:Rect width="100%"
			height="100%">
		<s:fill>
			<s:BitmapFill source="{VDOMImage.Fon_Texture}"
						  smooth="true"
						  fillMode="repeat"/>
		</s:fill>
	</s:Rect>

	<s:Rect width="100%"
			height="25">
		<s:fill>
			<s:SolidColor id="rectColor"
						  color="#3A3A3A"/>
		</s:fill>
	</s:Rect>

	<s:HGroup id="switchAllGroup"
			  height="25"
			  width="100%"
			  paddingLeft="3"
			  paddingRight="3"
			  verticalAlign="middle"
			  click="switchAll()">

		<mx:Image source="@Embed(source='/assets/treeEditor/colored_button_all_levels.png')"/>

		<s:Rect width="1"
				bottom="3"
				top="3">

			<s:fill>

				<s:SolidColor color="gray"/>
			</s:fill>
		</s:Rect>

		<s:Label text="{ selectAll ? resourceManager.getString( 'Tree_General', 'level_show_all' ) : resourceManager.getString( 'Tree_General', 'level_hide_all' ) }"
				 width="100%"
				 color="#FFFFFF"/>
	</s:HGroup>

	<s:Line top="-2"
			left="-2"
			width="100%">
		<s:stroke>
			<s:SolidColorStroke color="#FFFFFF"
								alpha="0.5"
								weight="1"/>
		</s:stroke>
	</s:Line>

	<s:Line top="27"
			left="-2"
			width="100%">
		<s:stroke>
			<s:SolidColorStroke color="#000000"
								alpha="0.5"
								weight="1"/>
		</s:stroke>
	</s:Line>


	<s:List id="structureLevelsList"
			dataProvider="{ levels }"
			height="100%"
			width="100%"
			y="25"
			change="changeHandler( event )"
			borderVisible="false"
			itemRenderer="{ new ClassFactory( StructureLevelItemRenderer ) }"
			selectedItem="@{ _currentStructuretLevel }"
			contentBackgroundAlpha="0"/>


</s:Panel>
