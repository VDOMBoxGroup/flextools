<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 minHeight="21" minWidth="21"
			 alpha.disabledStates="0.5">

	<!-- host component -->
	<fx:Metadata>
		[HostComponent("net.vdombox.ide.common.components.tabNavigatorClasses.TabBarButton")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			private var cornerRadius : Number = 4;
			
			/**
			 *  @private
			 *  The cornerRadius style is specified by the TabBar, not the button itself.
			 *
			 *  Rather than bind the corner radius properties of the s:Rect's in the markup
			 *  below to hostComponent.owner.getStyle("cornerRadius"), we reset them here,
			 *  each time a change in the value of the style is detected.  Note that each
			 *  corner radius property is explicitly initialized to the default value of
			 *  the style; the initial value of the private cornerRadius property.
			 */
			private function updateCornerRadius() : void
			{
				var cr : Number = getStyle( "cornerRadius" );
				if ( cornerRadius != cr )
				{
					cornerRadius = cr;
					fill.topLeftRadiusX = cornerRadius;
					fill.topRightRadiusX = cornerRadius;
					border.topLeftRadiusX = cornerRadius;
					border.topRightRadiusX = cornerRadius;
					highlight.topLeftRadiusX = cornerRadius;
					highlight.topRightRadiusX = cornerRadius;
				}
			}
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList( unscaledWidth : Number, unscaleHeight : Number ) : void
			{
				updateCornerRadius();
				hostComponent.mouseChildren = true;
				closeButton.visible = hostComponent.canClose;
				
				if ( !closeButton.visible )
				{
					labelDisplay.right = 8;
				}
				else
				{
					labelDisplay.right = 18;
				}
				
				super.updateDisplayList( unscaledWidth, unscaledHeight );
			}
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over" stateGroups="overStates"/>
		<s:State name="down" stateGroups="downStates"/>
		<s:State name="disabled" stateGroups="disabledStates"/>
		<s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates"/>
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates"/>
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates"/>
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates"/>
	</s:states>

	<!-- layer 1: fill -->
	<s:Rect id="fill"
			bottom="1" left="1" right="1" top="1"
			topLeftRadiusX="4" topRightRadiusX="4">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xf0f0f0" color.over="0xc4c4c4" color.selectedStates="0xeeeeee"
								 ratio="0"/>
				<s:GradientEntry color="0x999999" color.over="0x999999" color.selectedStates="0xeeeeee"
								 ratio="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 3: fill highlight -->
	<s:Rect id="highlight"
			bottom="1" left="1" right="1" top="1"
			topLeftRadiusX="4" topRightRadiusX="4">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF"
								 ratio="0.0" alpha="0.05"/>
				<s:GradientEntry color="0xFFFFFF"
								 ratio="0.06" alpha="0.09"/>
				<s:GradientEntry color="0xFFFFFF"
								 ratio="0.150" alpha="0"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<!-- layer 4: border - unselected only -->
	<s:Rect id="border"
			bottom="0" left="0" right="0" top="0"
			topLeftRadiusX="4" topRightRadiusX="4">
		<s:stroke>
			<s:SolidColorStroke color="0xeeeeee"
								weight="1" alpha="1"/>
		</s:stroke>
	</s:Rect>


	<!-- layer 8: text -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay"
			 bottom="2" left="8" right="18" textAlign="center" top="2" verticalAlign="middle" verticalCenter="1"
			 maxDisplayedLines="1">
	</s:Label>

	<s:Button id="closeButton"
			  right="2" skinClass="net.vdombox.ide.common.skins.CloseButtonSkin" verticalCenter="1"/>

</s:SparkSkin>
