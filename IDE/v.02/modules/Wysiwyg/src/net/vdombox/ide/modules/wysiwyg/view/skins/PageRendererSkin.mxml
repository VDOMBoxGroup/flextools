<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:components="net.vdombox.ide.modules.wysiwyg.view.components.*"
			 xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:mx="library://ns.adobe.com/flex/halo"
			 xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="100%" xmlns:components1="net.vdombox.components.*" xmlns:components2="net.vdombox.ide.common.view.components.*" xmlns:mx1="library://ns.adobe.com/flex/mx">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import net.vdombox.ide.common.view.components.VDOMScroller;
			import net.vdombox.ide.common.view.skins.VDOMScrollBarSkin.VDOMWorkAreaHScrollBarSkin;
			import net.vdombox.ide.common.view.skins.VDOMScrollBarSkin.VDOMWorkAreaVScrollBarSkin;
			import net.vdombox.ide.modules.wysiwyg.events.RendererEvent;
			import net.vdombox.ide.modules.wysiwyg.view.components.RendererBase;
			
			[Bindable]
			private var scale : Number = 1;
			
			private var scrollPosition : Point;
			private var _NeedSetVerticalScrollPosition : Boolean = false;
			
			protected function scroller_creationCompleteHandler(event:FlexEvent):void
			{
				scroller.verticalScrollBar.setStyle( "skinClass", VDOMWorkAreaVScrollBarSkin );
				scroller.horizontalScrollBar.setStyle( "skinClass", VDOMWorkAreaHScrollBarSkin );
				
				scroller.horizontalScrollBar.height = 12;
				
				scroller.horizontalScrollBar.thumb.height = 12;
				scroller.verticalScrollBar.thumb.width = 12;
				
				scroller.horizontalScrollBar.track.height = 12;
				scroller.verticalScrollBar.track.width = 12;
				
				addEventListener( MouseEvent.MOUSE_WHEEL, mouseWheelHandler, true, 0, true );
				addEventListener( MouseEvent.MOUSE_DOWN, mouseDownHandler, true, 0, true );
			}
			
			private function mouseDownHandler( event : MouseEvent ) : void
			{
				if ( !event.ctrlKey )
					return;
				
				scale = 1;
				
				_NeedSetVerticalScrollPosition = true;
				
				var pt:Point = new Point(event.localX, event.localY);
				pt = event.target.localToGlobal(pt);
				
				pt=scroller.globalToContent(pt);
				
				scrollPosition = pt;
			}
			
			private function mouseWheelHandler( event : MouseEvent ) : void
			{
				if ( event.ctrlKey )
				{		
					if ( event.delta > 0 && scale < 3)
						scale += 0.1;
					else if ( event.delta < 0 && scale > 0.25 )
						scale -= 0.1;
					
					
					event.stopImmediatePropagation();
				}
				
				event.delta = event.delta > 0 ? 30 : -30;
			}
			
			protected function scroller_updateCompleteHandler(event:FlexEvent):void
			{
				if ( _NeedSetVerticalScrollPosition )
				{
					_NeedSetVerticalScrollPosition = false;
					
					scroller.verticalScrollBar.viewport.verticalScrollPosition = scrollPosition.y - scroller.height / 2;
					scroller.horizontalScrollBar.viewport.horizontalScrollPosition = scrollPosition.x - scroller.width / 2;
				}
			}
		]]>
	</fx:Script>
	
	
	<s:states>

		<s:State name="normal"/>

		<s:State name="hovered"/>

		<s:State name="highlighted"/>

		<s:State name="locked"/>

		<s:State name="disabled"/>
	</s:states>

	<s:Rect id="backgroundRect"
			width="100%" height="100%">

		<s:fill>

			<s:SolidColor alpha=".0"/>
		</s:fill>

		<s:stroke>

			<s:SolidColorStroke alpha=".0"/>
		</s:stroke>
	</s:Rect>
	
	<components2:VDOMScroller id="scroller"
				focusEnabled="false"
				bottom="0" left="0" right="0" top="0"
				minViewportInset="1" creationComplete="scroller_creationCompleteHandler(event)">
				
		<s:Group id="scaleGroup" scaleX="{scale}" scaleY="{scale}">
			<s:Group id="background" width="{dataGroup.width}" height="{dataGroup.height}"
					 resize="parentApplication.dispatchEvent(new Event('resizeMainWindow'))"/> <!-- setbackground image and not set all element-->
			
			
			<s:DataGroup id="dataGroup" width="100%" height="100%"/>   <!-- set all element-->
			
			<s:Group id="linegroup" width="{dataGroup.width}" height="{dataGroup.height}" />
			
			<s:Group id="upperLayer"/>
			
			<components:TransformMarker id="transformMarker"/>
		</s:Group>
		
	</components2:VDOMScroller>
	
	
	

	<s:Group id="locker"
			 bottom="0" left="0" right="0" top="0"
			 visible="false">

		<s:Rect bottom="0" left="0" right="0" top="0">

			<s:fill>

				<s:SolidColor color="white"
							  alpha=".0"/>
			</s:fill>
		</s:Rect>
	</s:Group>

	<s:Rect bottom="0" left="0" right="0" top="0"
			includeIn="locked">

		<s:fill>
			<s:SolidColor color="gray"/>
		</s:fill>
	</s:Rect>

	<!--s:Rect bottom="0" left="0" right="0" top="0"
			includeIn="highlighted, hovered">

		<s:stroke>

			<s:SolidColorStroke color.highlighted="green" color.hovered="gray"
								weight="2"/>
		</s:stroke>
	</s:Rect-->
	
</s:SparkSkin>
