<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   click="mouseClickandler(event)"
		   creationComplete="ColorPickerInit()"
		   width="100%" height="20" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="change", type="net.vdombox.ide.modules.wysiwyg.events.ColorPickerEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.managers.PopUpManager;
			
			import net.vdombox.ide.modules.wysiwyg.events.AttributeEvent;
			import net.vdombox.ide.modules.wysiwyg.events.ColorPickerEvent;
			import net.vdombox.ide.modules.wysiwyg.view.components.windows.ColorPickerWindow;
			private var _color : String = "0";
			
			[Bindable]
			private var _colorInNumber : uint = 0;
			private var colorPicker:ColorPicker;
			
			public function ColorPickerInit():void
			{
								
				buttonMode = true;
				
				addEventListener( MouseEvent.CLICK, mouseClickandler );
				
				addEventListener( "apply", colorCompleteHandler );
				addEventListener( "cancel", colorCompleteHandler );
				
				setStyle( "borderStyle", "solid" );
				
			}
			
			[Bindable( event="valueCommit" )]
			public function get value() : String
			{
				return _color;
			}
			
			public function set value( colorValue : String ) : void
			{
				var newColor : uint = uint( ( colorValue == "" ) ? "0" : "0x" + colorValue )
				
				setStyle( 'backgroundColor', newColor );
				_color = colorValue;
				_colorInNumber = newColor;
				
				dispatchEvent( new Event( "valueCommit" ) );
			}
			
			public function mouseClickandler( event : MouseEvent ) : void
			{
				ColorPickerWindow.show_window( this, _colorInNumber, true );
			}
			
			private function change(event:ColorPickerEvent):void {
				
			}
			
			private function colorCompleteHandler( event : ColorPickerEvent ) : void
			{
				if ( event.type == 'apply' )
				{
					value = event.hexcolor;
					dispatchEvent(new ColorPickerEvent(ColorPickerEvent.CHANGE, event.color, value));
				}
			}
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="100%" verticalAlign="middle">
		<s:Rect width="100%" height="100%" id="rectColorPicker">
			<s:fill>
				<s:SolidColor color="{_colorInNumber}"/>
			</s:fill>
		</s:Rect>
		
		<mx:Image source="@Embed('icons/colorpicker.png')" smoothBitmapContent="true"/>
		
	</s:HGroup>

</mx:Canvas>
