<?xml version="1.0" encoding="utf-8"?>
<s:MXTreeItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  height="25"
					  width="100%"
					  contentBackgroundAlpha="0">

	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>

	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;

			import net.vdombox.ide.common.vo.ResourceVO;
			import net.vdombox.ide.modules.wysiwyg.events.ObjectsTreePanelEvent;

			private var _resourceID : String;

			private var _resourceVO : ResourceVO;

			private var _rendererID : String;

			private var loader : Loader;

			private var _visible : Boolean;


			public function get rendererID() : String
			{
				return _rendererID;
			}

			public function get resourceID() : String
			{
				return _resourceID;
			}

			[Embed( source = "icons/eye_1.png" )]
			public var visibleEye : Class;

			[Embed( source = "icons/eye_0.png" )]
			public var noVisibleEye : Class;

			override public function set data( value : Object ) : void
			{

				super.data = value;

				if ( value != null )
				{
					var valueXML : XML = value as XML;
					_resourceID = valueXML.@iconID;
					_rendererID = valueXML.@id;

					if ( valueXML.@visible[ 0 ] )
					{
						eyesGroup.visible = true;
						groupContent.left = 20;
						_visible = valueXML.@visible == "true";

						eyes.source = _visible ? visibleEye : noVisibleEye;
//						if ( _visible )
//							eyes.source = visibleEye;
//						else
//							eyes.source = noVisibleEye;
					}
					else
					{
						eyesGroup.visible = false;
						groupContent.left = -2;
					}
					dispatchEvent( new Event('TreeItemRendererComplete') );

				}

			}

			public function set resourceVO(value:ResourceVO) : void
			{
				_resourceVO = value;

				if ( !value.data )
				{
					BindingUtils.bindSetter( dataLoaded, value, "data" );
					return;
				}

				dataLoaded();
			}

			private function dataLoaded( object : Object = null ) : void
			{
				loader = new Loader();
				loader.contentLoaderInfo.addEventListener( Event.COMPLETE, onBytesLoaded );
				loader.contentLoaderInfo.addEventListener( IOErrorEvent.IO_ERROR, onBytesLoaded );

				try
				{
					loader.loadBytes( _resourceVO.data );
				}
				catch ( error : Error )
				{
					// FIXME Сделать обработку исключения если не грузится изображение
				}
			}

			private function onBytesLoaded( event : Event ) : void
			{
				loader = null;

				if ( event.type == IOErrorEvent.IO_ERROR )
					return;
				componentIcon.source = Bitmap( event.target.content )

			}

			private function visibleClickHandler( event : Event ) : void
			{
				_visible = !_visible;
				eyes.source = _visible ? visibleEye : noVisibleEye;
				
//				if ( _visible )
//					eyes.source = visibleEye;
//				else
//					eyes.source = noVisibleEye;
				var treePanelEvent : ObjectsTreePanelEvent = new ObjectsTreePanelEvent( ObjectsTreePanelEvent.EYE_CHANGED );
				
				treePanelEvent.visible = _visible;
				dispatchEvent( treePanelEvent );

			}
		]]>
	</fx:Script>

	<s:Rect left="-2" width="100%" top="-2" bottom="-2">
		<s:fill>
			<s:SolidColor id="rectColor"
						  color.normal="#3A3A3A"
						  color.hovered="#00000A"
						  alpha.hovered="0.8"
						  color.selected="#00000A" />
		</s:fill>
	</s:Rect>

	<s:Group id="groupContent"
			 left="20"
			 width="100%"
			 top="-2"
			 bottom="-2">

		<s:HGroup width="100%" height="100%" verticalAlign="middle">

			<s:Rect id="indentationSpacer" width="{treeListData.indent}" percentHeight="100">
				<s:fill>
					<s:SolidColor color="#585858" />
				</s:fill>
			</s:Rect>

			<s:Group id="disclosureGroup">
				<s:BitmapImage source="{treeListData.disclosureIcon}" visible="{treeListData.hasChildren}" />
			</s:Group>

			<s:BitmapImage id="componentIcon" />

			<s:TextInput id="labelField"
						 color="#FFFFFF"
						 text="{treeListData.label}"
						 paddingTop="2"
						 editable="false"
						 borderVisible="false" />

			<mx:Spacer width="100%" />

		</s:HGroup>

	</s:Group>

	<s:Group id="eyesGroup"
			 top="-2"
			 bottom="-2"
			 left="-2"
			 width="22"
			 height="100%"
			 mouseDown="{ visibleClickHandler(event); event.stopImmediatePropagation() }">

		<s:Rect width="100%" top="0" bottom="-2">
			<s:fill>
				<s:SolidColor color.normal="#585858" color.hovered="#00000A" alpha.hovered="0.8" color.selected="#00000A" />
			</s:fill>
		</s:Rect>

		<s:VGroup width="22" height="100%" verticalAlign="middle" horizontalAlign="center">
			<mx:Image id="eyes" width="16" height="14" source="@Embed('icons/eye_1.png')" />
		</s:VGroup>

	</s:Group>

	<s:Line top="-2" left="-2" width="100%">
		<s:stroke>
			<s:SolidColorStroke color="#FFFFFF" alpha="0.5" weight="1" />
		</s:stroke>
	</s:Line>

	<s:Line bottom="-2" left="-2" width="100%">
		<s:stroke>
			<s:SolidColorStroke color="#000000" alpha="0.5" weight="1" />
		</s:stroke>
	</s:Line>

</s:MXTreeItemRenderer>
