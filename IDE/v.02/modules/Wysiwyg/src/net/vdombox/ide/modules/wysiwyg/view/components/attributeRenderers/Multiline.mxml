<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  height="20" width="100%" horizontalAlign="right" verticalAlign="middle">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			
			import net.vdombox.ide.modules.wysiwyg.events.AttributeEvent;
			import net.vdombox.ide.modules.wysiwyg.events.MultilineWindowEvent;
			import net.vdombox.ide.modules.wysiwyg.events.ObjectAttributesPanelEvent;
			import net.vdombox.ide.modules.wysiwyg.view.components.windows.MultilineWindow;
			import net.vdombox.utils.WindowManager;
			
			private var _value : String;
			
			[Bindable]
			private var _toolTipValue : String;
			private var _title : String = "Multiline Window";
			public var multilineWindow : MultilineWindow;
			
			public function set title( attrValue : String ) : void
			{
				_title = attrValue;
			}
			
			[Bindable]
			public function get value() : String
			{
				return _value;
			}
			
			public function set value( value : String ) : void
			{
				_value = value;
				if ( value.length > 50 )
					_toolTipValue = value.substr( 0, 50 );
				else
					_toolTipValue = value;
			}
			
			private function openWindow() : void
			{				
				multilineWindow = new MultilineWindow();
				
				multilineWindow.attributeValue = _value;
				multilineWindow.title = resourceManager.getString( 'Wysiwyg_General', 'multiline_window_title' );
				dispatchEvent( new AttributeEvent( AttributeEvent.CHOSE_RESOURCES_IN_MULTILINE ) );				
				
				multilineWindow.addEventListener( MultilineWindowEvent.APPLY, multilineWindow_applyHandler, false, 0, true );
				multilineWindow.addEventListener( MultilineWindowEvent.CLOSE, multilineWindow_applyHandler, false, 0, true );
				
				WindowManager.getInstance().addWindow(multilineWindow, UIComponent( UIComponent(parent).parentApplication ), true);
			}
			
			private function multilineWindow_applyHandler( event : MultilineWindowEvent ) : void
			{				
				var currentTarget : Object = event.currentTarget;
				
				if ( currentTarget is MultilineWindow )
				{
					if (event.type == MultilineWindowEvent.APPLY)
					{
						if (value != event.value)
						{	
							value = event.value;
							dispatchEvent( new Event( Event.CHANGE));
						}
					}
					UIComponent( currentTarget ).removeEventListener( MultilineWindowEvent.APPLY, multilineWindow_applyHandler, false );					
				}

				WindowManager.getInstance().removeWindow(multilineWindow);
			}
			
			
			override public function validationResultHandler( event : ValidationResultEvent ) : void
			{
				super.validationResultHandler( event );
				if ( event.type == "valid" )
					setStyle( "borderColor", "white" );
				else if ( event.type == "ivalid" )
					setStyle( "borderColor", "red" );
			}
		]]>
	</fx:Script>
	<s:Group width="100%" height="20">
		
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		
		<s:TextInput id="lbl" textAlign="left"
				 text="Multiline" editable="false" width="100%" height="100%" toolTip="{_toolTipValue}"/>
		
	</s:Group>
	
	
	<mx:Button height="19" label="..." width="22"
			   cornerRadius="0" paddingLeft="2" paddingRight="2"
			   click="openWindow()" />
</s:HGroup>
