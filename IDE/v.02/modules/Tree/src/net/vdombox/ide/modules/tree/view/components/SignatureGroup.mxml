<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:components="net.vdombox.ide.modules.tree.view.components.*"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 height="27" width="27">

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.collections.Sort;
			import mx.collections.SortField;
			
			import net.vdombox.ide.modules.tree.model.vo.LinkageVO;
			
			import spark.components.Button;
			import spark.components.DropDownList;
			import spark.events.IndexChangeEvent;
			import spark.filters.DropShadowFilter;
			import spark.skins.spark.ComboBoxSkin;
			[Bindable]
			public var color : uint;

			[Bindable]
			public var number : uint;
			
			private var dropDown : DropDownList;
			
			public function openIndexList( source : Array, coordinates : Object ) : void
			{
				if ( !dropDown )
				{
					dropDown = new DropDownList();
					dropDown.width = 50;
					addElement( dropDown );
				}
				else
				{
					dropDown.visible = true;
				}
				
				stage.addEventListener( MouseEvent.MOUSE_DOWN, stage_mouseDownHandler, false, 0, true );
				
				dropDown.x = coordinates.x;
				dropDown.y = coordinates.y;
				dropDown.labelField = "index";
				
				dropDown.dataProvider = new ArrayList( source.sortOn( "index", Array.NUMERIC ) );
				
			}
			
			private function stage_mouseDownHandler( event : MouseEvent ) : void
			{
				if ( stage && event.target != this && !( event.target is Button ) )
				{
					stage.removeEventListener( MouseEvent.MOUSE_DOWN, stage_mouseDownHandler );
					
					if ( dropDown.parent == this )
					{
						dropDown.visible = false;
					}
				}
			}
			
		]]>
	</fx:Script>

	
	
	<s:Ellipse bottom="0" left="0" right="0" top="0">
		<s:fill>
			<mx:SolidColor color="{ color }"/>
		</s:fill>
	</s:Ellipse>

	<s:Label text="{ number }"
			 color="#FFFFFF" fontFamily="Verdana" fontSize="10" fontWeight="bold"
			 left="0" right="0" textAlign="center" verticalAlign="middle"
			 verticalCenter="0"
			 filters="{[new DropShadowFilter(0, 45, 0, 1, 3, 3, 2)]}"/>
</s:Group>
