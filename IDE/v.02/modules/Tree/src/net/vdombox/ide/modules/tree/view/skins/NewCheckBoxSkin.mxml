<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:mx="library://ns.adobe.com/flex/halo"
			 
			 alpha.disabledStates="0.5">

	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.CheckBox")]
		]]>
	</fx:Metadata>

	<fx:Script>
		/* Define the skin elements that should not be colorized.
		 For button, the graphics are colorized but the label is not. */
		static private const exclusions : Array = [ "labelDisplay", "check" ];

		/**
		 * @inheritDoc
		 */
		override public function get colorizeExclusions() : Array
		{
			return exclusions;
		}

		/* Define the symbol fill items that should be colored by the "symbolColor" style. */
		static private const symbols : Array = [ "overFill", "checkMarkFill" ];

		/**
		 * @inheritDoc
		 */
		override public function get symbolItems() : Array
		{
			return symbols
		}
		;

		override public function get focusSkinExclusions() : Array
		{
			return [ labelDisplay ]
		}
		;
	</fx:Script>

	<s:states>

		<s:State name="up" />

		<s:State name="over" stateGroups="overStates" />

		<s:State name="down" stateGroups="downStates" />

		<s:State name="disabled" stateGroups="disabledStates" />

		<s:State name="upAndSelected" stateGroups="selectedStates" />

		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />

		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />

		<s:State name="disabledAndSelected"
				 stateGroups="disabledStates, selectedStates" />
	</s:states>

	<s:Group height="13" width="13"
			 verticalCenter="0">
		<!-- drop shadow -->

		<s:Ellipse bottom="-1" left="-1" right="-1" top="-1">

			<s:stroke>

				<s:LinearGradientStroke rotation="90" weight="1">

					<s:GradientEntry color="0x000000"
									 color.downStates="0xFFFFFF"
									 alpha="0.011" alpha.downStates="0" />

					<s:GradientEntry color="0x000000"
									 color.downStates="0xFFFFFF"
									 alpha="0.121" alpha.downStates="0.57" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Ellipse>
		<!-- fill -->

		<s:Ellipse bottom="1" left="1" right="1" top="1">

			<s:fill>

				<s:LinearGradient rotation="90">

					<s:GradientEntry color="0xFFFFFF"
									 color.downStates="0xAAAAAA"
									 alpha="0.85" />

					<s:GradientEntry color="0xD8D8D8"
									 color.downStates="0x929496"
									 alpha="0.85" />
				</s:LinearGradient>
			</s:fill>
		</s:Ellipse>

		<s:Ellipse bottom="1" left="1" right="1" top="1">

			<s:fill>

				<s:SolidColor id="overFill"
							  color="0"
							  alpha="0" alpha.overStates="0.5" />
			</s:fill>
		</s:Ellipse>
		<!-- fill highlight -->

		<s:Path data="M 1 6 Q 2 2 6 1 Q 11 2 12 6 h -9">

			<s:fill>

				<s:SolidColor color="0xFFFFFF"
							  alpha="0.33" />
			</s:fill>
		</s:Path>
		<!-- layer 6: highlight stroke (all states except down) -->

		<s:Ellipse bottom="1" left="1" right="1" top="1">

			<s:stroke>

				<s:LinearGradientStroke rotation="90" weight="1">

					<s:GradientEntry color="0xFFFFFF"
									 color.downStates="0x939393"
									 alpha.overStates="0.22" />

					<s:GradientEntry color="0xD8D8D8"
									 color.downStates="0xB1B1B1"
									 alpha.overStates="0.22" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Ellipse>

		<s:Rect height="1"
				left="5" right="5" top="1">

			<s:fill>

				<s:SolidColor color="0xFFFFFF" color.downStates="0x939393"
							  alpha.overStates="0.22" />
			</s:fill>
		</s:Rect>
		<!-- layer 6: highlight stroke (down state only) -->
		<!--<s:Rect width="1"
			 bottom="1" left="1" top="1"
			 includeIn="downStates">

			 <s:fill>

			 <s:SolidColor color="0x000000"
			 alpha="0.07" />
			 </s:fill>
			 </s:Rect>

			 <s:Rect width="1"
			 bottom="1" right="1" top="1"
			 includeIn="downStates">

			 <s:fill>

			 <s:SolidColor color="0x000000"
			 alpha="0.07" />
			 </s:fill>
			 </s:Rect>

			 <s:Rect height="1"
			 left="1" right="1" top="1"
			 includeIn="downStates">

			 <s:fill>

			 <s:SolidColor color="0x000000"
			 alpha="0.25" />
			 </s:fill>
			 </s:Rect>

			 <s:Rect height="1"
			 left="1" right="1" top="2"
			 includeIn="downStates">

			 <s:fill>

			 <s:SolidColor color="0x000000"
			 alpha="0.09" />
			 </s:fill>
			 </s:Rect>-->
		<!-- border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
		<!--<s:Rect bottom="0" left="0" right="0" top="0">

			 <s:stroke>

			 <s:LinearGradientStroke rotation="90" weight="1">

			 <s:GradientEntry color="0x000000"
			 alpha="0.5625" alpha.downStates="0.6375" />

			 <s:GradientEntry color="0x000000"
			 alpha="0.75" alpha.downStates="0.85" />
			 </s:LinearGradientStroke>
			 </s:stroke>
			 </s:Rect>-->

		<s:Ellipse bottom="0" left="0" right="0" top="0">

			<s:stroke>

				<s:LinearGradientStroke rotation="90" weight="1">

					<s:GradientEntry color="0x000000"
									 alpha="0.5625" alpha.downStates="0.6375" />

					<s:GradientEntry color="0x000000"
									 alpha="0.75" alpha.downStates="0.85" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Ellipse>
		<!-- checkmark -->
		<!--- The checkmark in the box for this skin. To create a custom check mark, create a custom skin class. -->

		<s:Ellipse id="check"
				   bottom="1" left="1" right="1" top="1"
				   includeIn="selectedStates" itemCreationPolicy="immediate">

			<s:fill>

				<s:SolidColor id="checkMarkFill"
							  alpha="0.8" />
			</s:fill>
		</s:Ellipse>
		<!--<s:Path id="check"
			 data="M 9.2 0.1 L 4.05 6.55 L 3.15 5.0 L 0.05 5.0 L 4.6 9.7 L 12.05 0.1 L 9.2 0.1"
			 left="2" top="0"
			 includeIn="selectedStates" itemCreationPolicy="immediate">

			 <s:fill>


			 <s:SolidColor id="checkMarkFill"
			 color="0"
			 alpha="0.8" />
			 </s:fill>
			 </s:Path>-->
	</s:Group>

	<!-- Label -->

	<s:Label id="labelDisplay"
			 bottom="3" left="18" right="0" textAlign="start" top="3"
			 verticalAlign="middle" verticalCenter="2"
			 maxDisplayedLines="1" />
</s:SparkSkin>
