<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:components="net.vdombox.ide.modules.scripts.view.components.*"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/halo"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 height="300" width="400" xmlns:editors="net.vdombox.editors.*"
		 xmlns:components1="net.vdombox.components.*"
		 remove="navigatorcontent2_removeHandler(event)" xmlns:components2="net.vdombox.ide.common.components.*" xmlns:components3="net.vdombox.ide.common.view.components.*" xmlns:button="net.vdombox.ide.common.view.components.button.*" xmlns:mx1="library://ns.adobe.com/flex/mx">

	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import net.vdombox.editors.ScriptAreaComponent;
			import net.vdombox.ide.common.events.EditorEvent;
			import net.vdombox.ide.common.model._vo.ServerActionVO;
			import net.vdombox.ide.common.view.components.VDOMImage;
			import net.vdombox.ide.modules.scripts.events.EditAreaEvent;
			import net.vdombox.ide.modules.scripts.events.ScriptEditorEvent;
			
			import ro.victordramba.scriptarea.ScriptAreaEvents;
			
			private var _script : String;
			private var _objectVO : Object;
			
			[Bindable]
			private var _actionVO : Object;

			private var _syntax : String = "vscript";

			[Bindable]
			public function get script() : String
			{
				return  pythonScriptEditor ? pythonScriptEditor.scriptAreaComponent.text : "";
			}

			public function set script( value : String ) : void
			{
				_script = value;
				if ( pythonScriptEditor )
				{
					pythonScriptEditor.scriptAreaComponent.text = value;
					pythonScriptEditor.dispatchEvent( new Event ( Event.CHANGE ) );
				}
			}
			
			public function get editorID() : String
			{
				if ( actionVO )
				{
					if ( actionVO is ServerActionVO )
					{
						return  actionVO.id;
					}
					else
					{
						return actionVO.name;
					}
				}
				else
					return "";
			}
			
			public function get objectVO() : Object
			{
				return _objectVO ? _objectVO : null;
			}
			
			public function set objectVO( value : Object ) : void
			{
				_objectVO = value;
			}
			
			public function get actionVO() : Object
			{
				return _actionVO ? _actionVO : null;
			}
			
			public function set actionVO( value : Object ) : void
			{
				if ( _actionVO )
					_actionVO.script = script;
				
				_actionVO = value;
				script = value.script;
				if ( value.saved )
					currentState = "disabled";
				else
					currentState = "unsaved";
			}
			
			private function scriptEditor_saveHandler( event : MouseEvent  = null ) : void
			{
				dispatchEvent( new ScriptEditorEvent( ScriptEditorEvent.SAVE ) );
				
				if (_actionVO)
					_actionVO.saved = true;
				
				currentState = "disabled";
				
			}
			
			private function setStateInUnsave( event : Event = null ) : void
			{
				if ( !(event.target is ScriptAreaEvents) )
					return;
				
				currentState = "unsaved";
				
				if (_actionVO)
					_actionVO.saved = false;
			}
			
			private function onCtrlSDown( e : KeyboardEvent ) : void
			{
				if ( e.ctrlKey && e.keyCode == Keyboard.S )
				{
					scriptEditor_saveHandler();
				}
			}
			
			protected function pythonScriptEditor_creationCompleteHandler(event:FlexEvent):void
			{
				addEventListener(Event.CHANGE, setStateInUnsave, true, 0, true );
				pythonScriptEditor.addEventListener( KeyboardEvent.KEY_DOWN, onCtrlSDown, true, 0, true );
			}
			
			protected function navigatorcontent2_removeHandler(event:FlexEvent):void
			{
				dispatchEvent( new EditorEvent( EditorEvent.REMOVED ) );
				removeEventListener(Event.CHANGE, setStateInUnsave, true );
				pythonScriptEditor.removeEventListener( KeyboardEvent.KEY_DOWN, onCtrlSDown, true );
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		
		<s:State name="normal"/>
		<s:State name="unsaved"/>
		<s:State name="disabled"/>
	</s:states>
	
	<s:Rect left="0" width="40" height="100%">
		<s:fill>
			<s:SolidColor color="#A0A1A1"/>
		</s:fill>
	</s:Rect>
	
	<s:Rect left="40" width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	
	<s:VGroup width="100%" height="100%" gap="0" visible="{_actionVO ? true : false}">
		<s:Group width="100%" height="24">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="#FFFFFF" />
						<s:GradientEntry color="#F6F8F8" />
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			
			<s:HGroup width="100%" height="100%" horizontalAlign="left" 
					  paddingLeft="10" paddingTop="2" paddingBottom="2">
				
				<button:WorkAreaButton id="saveButton"
										   enabled.unsaved="true" enabled="false" height="20" icon="{VDOMImage.Save}"
										   label="{ resourceManager.getString( 'Scripts_General', 'save' ) }" click="scriptEditor_saveHandler( event )"
										   highlighted="false" highlighted.unsaved="true"/>
				
				<button:WorkAreaButton id="undoButton"
									   height="25" icon="{VDOMImage.Undo}"
									   label="{ resourceManager.getString( 'Scripts_General', 'work_area_undo' ) }"
									   click="{pythonScriptEditor.scriptAreaComponent.undo_fun()}"/>
				
				<button:WorkAreaButton id="redoButton"
									   height="25" icon="{VDOMImage.Redo}"
									   label="{ resourceManager.getString( 'Scripts_General', 'work_area_redo' ) }"
									   click="{pythonScriptEditor.scriptAreaComponent.redo_fun()}"/>
				
			</s:HGroup>
			
			<s:Line top="0" width="100%">
				<s:stroke>
					<s:SolidColorStroke color="#FFFFFF" alpha="0.5" weight="1"/>
				</s:stroke>
			</s:Line>
			
			<s:Line bottom="0" width="100%">
				<s:stroke>
					<s:SolidColorStroke color="#000000" alpha="0.5" weight="1"/>
				</s:stroke>
			</s:Line>
			
		</s:Group>
		
		<editors:PythonScriptEditor id="pythonScriptEditor" creationComplete="pythonScriptEditor_creationCompleteHandler(event)"
									height="100%" width="100%"
									scriptAreaComponent="{new ScriptAreaComponent()}"/>
	</s:VGroup>

	
</s:NavigatorContent>
