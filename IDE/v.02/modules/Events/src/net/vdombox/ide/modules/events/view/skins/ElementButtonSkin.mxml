<?xml version="1.0" encoding="utf-8"?>
<!--

	 ADOBE SYSTEMS INCORPORATED
	 Copyright 2008 Adobe Systems Incorporated
	 All Rights Reserved.

	 NOTICE: Adobe permits you to use, modify, and distribute this file
	 in accordance with the terms of the license agreement accompanying it.

-->
<!--- The default skin class for the Spark Button component.

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 minHeight="0"
			 minWidth="0"
			 alpha.disabled="0.5">
	<!-- host component -->

	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("net.vdombox.ide.modules.events.view.components.ElementButton")]
		]]>
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			/*
			   Define the skin elements that should not be colorized.
			   For button, the graphics are colorized but the label is not.
			 */
			static private const exclusions : Array = [ "labelDisplay" ];

			/**
			 * @copy spark.skins.SparkSkin#colorizeExclusions
			 */
			override public function get colorizeExclusions() : Array
			{
				return exclusions;
			}

			/**
			 * @private
			 */
			override protected function updateDisplayList( unscaledWidth : Number, unscaledHeight : Number ) : void
			{
				var cr : Number = getStyle( "cornerRadius" );

				if ( cornerRadius != cr )
					cornerRadius = cr;

				super.updateDisplayList( unscaledWidth, unscaledHeight );
			}

			[Bindable]
			public var cornerRadius : Number = 2;
		]]>
	</fx:Script>
	<!-- states -->

	<s:states>

		<s:State name="up"/>

		<s:State name="over"/>

		<s:State name="down"/>

		<s:State name="disabled"/>
	</s:states>
	<!-- layer 1: shadow -->

	<s:Rect bottom="-1"
			left="-1"
			right="-1"
			top="-1"
			radiusX="{cornerRadius}">

		<s:fill>

			<s:LinearGradient rotation="90">

				<s:GradientEntry color="0x000000"
								 color.down="0xFFFFFF"
								 alpha="0.01"
								 alpha.down="0"/>

				<s:GradientEntry color="0x000000"
								 color.down="0xFFFFFF"
								 alpha="0.07"
								 alpha.down="0.5"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<!-- layer 2: fill -->

	<s:Rect bottom="0"
			left="0"
			right="0"
			top="0"
			radiusX="{cornerRadius}">

		<s:fill>

			<s:LinearGradient rotation="90">

				<s:GradientEntry color="0xEAEAE8"
								 color.down="0xAAAAAA"
								 color.over="0xBBBDBD"/>

				<s:GradientEntry color="0xCCCCCC"
								 color.down="0x929496"
								 color.over="0x9FA0A1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<!-- layer 3: fill lowlight -->
	<!--<s:Rect left="1" right="1" bottom="1" height="9" radiusX="{cornerRadius}">
		 <s:fill>
		 <s:LinearGradient rotation="90">
		 <s:GradientEntry color="0x000000" alpha="0.0099" />
		 <s:GradientEntry color="0x000000" alpha="0.0627" />
		 </s:LinearGradient>
		 </s:fill>
		 </s:Rect>-->
	<!-- layer 4: fill highlight -->
	<!--<s:Rect left="1" right="1" top="1" height="9" radiusX="{cornerRadius}">
		 <s:fill>
		 <s:SolidColor color="0xFFFFFF"
		 alpha="0.33"
		 alpha.over="0.22"
		 alpha.down="0.12" />
		 </s:fill>
		 </s:Rect>-->
	<!-- layer 5: highlight stroke (all states except down) -->
	<!--<s:Rect left="1" right="1" top="1" bottom="1" radiusX="{cornerRadius}" excludeFrom="down">
		 <s:stroke>
		 <s:LinearGradientStroke rotation="90" weight="1">
		 <s:GradientEntry color="0xFFFFFF" alpha.over="0.22" />
		 <s:GradientEntry color="0xD8D8D8" alpha.over="0.22" />
		 </s:LinearGradientStroke>
		 </s:stroke>
		 </s:Rect>-->
	<!-- layer 6: highlight stroke (down state only) -->
	<!--<s:Rect left="1" top="1" bottom="1" width="1" includeIn="down">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.07" />
		 </s:fill>
		 </s:Rect>
		 <s:Rect right="1" top="1" bottom="1" width="1" includeIn="down">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.07" />
		 </s:fill>
		 </s:Rect>
		 <s:Rect left="2" top="1" right="2" height="1" includeIn="down">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.25" />
		 </s:fill>
		 </s:Rect>
		 <s:Rect left="1" top="2" right="1" height="1" includeIn="down">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.09" />
		 </s:fill>
		 </s:Rect>-->
	<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<!--<s:Rect left="0" right="0" top="0" bottom="0" width="69" height="20" radiusX="{cornerRadius}">
		 <s:stroke>
		 <s:LinearGradientStroke rotation="90" weight="1">
		 <s:GradientEntry color="0x000000"
		 alpha="0.5625"
		 alpha.down="0.6375" />
		 <s:GradientEntry color="0x000000"
		 alpha="0.75"
		 alpha.down="0.85" />
		 </s:LinearGradientStroke>
		 </s:stroke>
		 </s:Rect>-->
	<!-- layer 8: text -->
	<!---
		 @copy spark.components.supportClasses.ButtonBase#labelDisplay
	-->

	<s:HGroup paddingLeft="5"
			  verticalAlign="top"
			  verticalCenter="0"
			  gap="5"
			  width="100%">

		<mx:Image id="buttonIcon"
				  height="10"
				  source="{ hostComponent.icon }"
				  width="10"/>

		<s:Label id="labelDisplay"
				 width="100%"
				 textAlign="left"
				 maxDisplayedLines="1"/>
	</s:HGroup>
</s:SparkSkin>
