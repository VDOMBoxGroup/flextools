<?xml version="1.0" encoding="utf-8"?>
<components:BaseElement xmlns:components="net.vdombox.ide.modules.events.view.components.*"
					  xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:mx="library://ns.adobe.com/flex/halo"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  width="180"
					  skinClass="net.vdombox.ide.modules.events.view.skins.EventElementSkin"
					  creationComplete="skinnablecontainer1_creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
			import mx.controls.Image;
			import mx.events.FlexEvent;
			
			import net.vdombox.ide.common.model.vo.EventParameterVO;
			import net.vdombox.ide.common.model.vo.EventVO;
			import net.vdombox.ide.modules.events.events.ElementEvent;
			import net.vdombox.ide.modules.events.view.skins.EventElementSkin;
			import net.vdombox.ide.common.view.EyeImage;
			
			import spark.components.Group;
			import spark.components.Label;
			import spark.skins.spark.PanelSkin;

			/*[Embed( source="assets/parameter.png" )]
			private var parameterIcon : Class;*/

			[SkinPart( required="true" )]
			public var headerGroup : Group;
			
			private var mouseOffcetX : int;
			private var mouseOffcetY : int;
			
			override protected function updateDisplayList( unscaledWidth : Number, unscaledHeight : Number ) : void
			{
				super.updateDisplayList( unscaledWidth, unscaledHeight );
				
				if ( parametersContainer && isNeedUpdateParameters )
				{
					parametersContainer.removeAllElements();
				
					if ( data.parameters.length == 0 )
						return;
				
					var parameter : EventParameterVO;
					var parameterRenderer : ParameterRenderer;
					var parameterRendererFactory : ClassFactory = new ClassFactory( ParameterRenderer );
				
					parameterRendererFactory.properties = { percentWidth: 100 };
				
					for each ( parameter in data.parameters )
					{
						parameterRenderer = parameterRendererFactory.newInstance();
					
						parameterRenderer.title = parameter.name;
					
						parametersContainer.addElement( parameterRenderer );
					}
				}
				
				/*if( objectNameGroup )
				{
					objectNameGroup.visible = data is ClientActionVO;
				}*/
			}

			override protected function partAdded( partName : String, instance : Object ) : void
			{
				super.partAdded( partName, instance );

				if ( instance == headerGroup )
					headerGroup.addEventListener( MouseEvent.MOUSE_DOWN, header_mouseDownHandler );
			}

		]]>
	</fx:Script>

	<components:layout>

		<s:VerticalLayout gap="1"/>
	</components:layout>

	<s:Group height="20" width="100%">
		
		<s:Rect bottom="0" left="0" right="0" top="0">
			
			<s:fill>
				
				<s:LinearGradient rotation="90">
					
					<s:GradientEntry color="0xFFFFFF"/>
					
					<s:GradientEntry color="0xF8F8F8"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<s:Label text="{ data.objectName }" textAlign="center" verticalCenter="0" left="5" right="5" width="100%" maxDisplayedLines="1"/>
	</s:Group>

	<components:ParameterRenderer icon="@Embed('assets/event.png')" width="100%"
								  title="{ title }"/>

	<s:VGroup id="parametersContainer"
			  width="100%"
			  gap="1"/>
</components:BaseElement>
