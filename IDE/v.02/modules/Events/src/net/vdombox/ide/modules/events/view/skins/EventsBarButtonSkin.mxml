<?xml version="1.0" encoding="utf-8"?>
<!--

	 ADOBE SYSTEMS INCORPORATED
	 Copyright 2008 Adobe Systems Incorporated
	 All Rights Reserved.

	 NOTICE: Adobe permits you to use, modify, and distribute this file
	 in accordance with the terms of the license agreement accompanying it.

-->
<!--- The default skin class for the middle buttons in a Spark ButtonBar component.

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 minHeight="21"
			 minWidth="21"
			 alpha.disabledStates="0.5">
	<!-- host component -->

	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.ToggleButton")]
		]]>
	</fx:Metadata>

	<fx:Script>
		/*
		   Define the skin elements that should not be colorized.
		   For toggle button, the graphics are colorized but the label is not.
		 */
		static private const exclusions : Array = [ "labelDisplay" ];

		/**
		 * @copy spark.skins.SparkSkin#colorizeExclusions
		 */
		override public function get colorizeExclusions() : Array
		{
			return exclusions;
		}
	</fx:Script>
	<!-- states -->

	<s:states>

		<s:State name="up"/>

		<s:State name="over"
				 stateGroups="overStates"/>

		<s:State name="down"
				 stateGroups="downStates"/>

		<s:State name="disabled"
				 stateGroups="disabledStates"/>

		<s:State name="upAndSelected"
				 stateGroups="selectedStates, selectedUpStates"/>

		<s:State name="overAndSelected"
				 stateGroups="overStates, selectedStates"/>

		<s:State name="downAndSelected"
				 stateGroups="downStates, selectedStates"/>

		<s:State name="disabledAndSelected"
				 stateGroups="selectedUpStates, disabledStates, selectedStates"/>
	</s:states>
	<!-- layer 1: shadow -->
	<!--<s:Rect left="0" right="0" bottom="-1" height="1">
		 <s:fill>
		 <s:SolidColor color="0x000000"
		 color.downStates="0xFFFFFF"
		 alpha="0.07"
		 alpha.downStates="0.5" />
		 </s:fill>
		 </s:Rect>-->
	<!-- layer 2: fill -->

	<s:Rect bottom="0"
			left="1"
			right="1"
			top="1"
			top.selectedStates="-1"
			topLeftRadiusX="5"
			topLeftRadiusY="5"
			topRightRadiusX="5"
			topRightRadiusY="5">

		<s:fill>

			<s:LinearGradient rotation="90">

				<s:GradientEntry color="0x707175"
								 color.downStates="0x707175"
								 color.overStates="0x707175"
								 color.selectedUpStates="0xCDCDCD"
								 alpha="0.85"
								 alpha.selectedStates="1"/>

				<s:GradientEntry color="0x161616"
								 color.downStates="0x161616"
								 color.over="0x161616"
								 color.overAndSelected="0xCDCDCD"
								 color.selectedUpStates="0xCDCDCD"
								 alpha="0.85"
								 alpha.selectedStates="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<!-- layer 3: fill lowlight -->
	<!--<s:Rect left="1" right="1" bottom="1" height="9">
		 <s:fill>
		 <s:LinearGradient rotation="90">
		 <s:GradientEntry color="0x000000" alpha="0.0099" />
		 <s:GradientEntry color="0x000000" alpha="0.0627" />
		 </s:LinearGradient>
		 </s:fill>
		 </s:Rect>-->
	<!-- layer 4: fill highlight -->
	<!--<s:Rect left="1" right="1" top="1" height="9">
		 <s:fill>
		 <s:SolidColor color="0xFFFFFF"
		 alpha="0.33"
		 alpha.selectedUpStates="0.22"
		 alpha.overStates="0.22"
		 alpha.downStates="0.12" />
		 </s:fill>
		 </s:Rect>-->
	<!-- layer 5: highlight stroke (all states except down) -->
	<!--<s:Rect left="1" right="1" top="1" bottom="1" excludeFrom="downStates">
		 <s:stroke>
		 <s:LinearGradientStroke rotation="90" weight="1">
		 <s:GradientEntry color="0xFFFFFF" alpha.overStates="0.22" alpha.selectedUpStates="0.33" />
		 <s:GradientEntry color="0xD8D8D8" alpha.overStates="0.22" alpha.selectedUpStates="0.33" />
		 </s:LinearGradientStroke>
		 </s:stroke>
		 </s:Rect>-->
	<!-- layer 6: highlight stroke (down state only) -->
	<!--<s:Rect left="1" top="1" bottom="1" width="1" includeIn="downStates, selectedUpStates, overAndSelected">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.07" />
		 </s:fill>
		 </s:Rect>
		 <s:Rect right="1" top="1" bottom="1" width="1" includeIn="downStates, selectedUpStates, overAndSelected">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.07" />
		 </s:fill>
		 </s:Rect>
		 <s:Rect left="1" top="1" right="1" height="1" includeIn="downStates, selectedUpStates, overAndSelected">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.25" />
		 </s:fill>
		 </s:Rect>
		 <s:Rect left="1" top="2" right="1" height="1" includeIn="downStates, selectedUpStates, overAndSelected">
		 <s:fill>
		 <s:SolidColor color="0x000000" alpha="0.09" />
		 </s:fill>
		 </s:Rect>-->
	<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<!--<s:Rect height="20" width="69"
		 bottom="0" left="0" right="0" top="0"
		 topLeftRadiusX="5" topLeftRadiusY="5" topRightRadiusX="5"
		 topRightRadiusY="5">

		 <s:stroke>

		 <s:LinearGradientStroke rotation="90" weight="1">

		 <s:GradientEntry color="0x58595B"
		 alpha="0.5625" alpha.down="0.6375"
		 alpha.selectedStates="0" />

		 <s:GradientEntry color="0x58595B"
		 alpha="0.75" alpha.down="0.85"
		 alpha.selectedStates="0" />
		 </s:LinearGradientStroke>
		 </s:stroke>
		 </s:Rect>-->
	<!-- layer 8: text -->
	<!--- Defines the appearance of the label(s) for the middle button(s) in the ButtonBar component. -->

	<s:Label id="labelDisplay"
			 bottom="2"
			 color="0xD3D3D5"
			 color.down="black"
			 color.over="white"
			 color.selectedStates="black"
			 horizontalCenter="0"
			 left="10"
			 right="10"
			 textAlign="center"
			 top="2"
			 verticalAlign="middle"
			 verticalCenter="1"
			 maxDisplayedLines="1">
	</s:Label>
</s:SparkSkin>
