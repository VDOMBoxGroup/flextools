<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:components="net.vdombox.ide.modules.events.view.components.*"
			 xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:mx="library://ns.adobe.com/flex/halo"
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx1="library://ns.adobe.com/flex/mx" 
			 creationComplete="sparkskin1_creationCompleteHandler(event)"
			 remove="sparkskin1_removeHandler(event)" xmlns:button="net.vdombox.ide.common.view.components.button.*" xmlns:components1="net.vdombox.ide.common.view.components.*">

	<fx:Metadata>
		<![CDATA[ 
		[HostComponent("net.vdombox.ide.modules.events.view.components.WorkArea")]
		]]>
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import net.vdombox.ide.common.view.components.VDOMImage;
			import net.vdombox.ide.common.view.skins.VDOMScrollBarSkin.VDOMWorkAreaHScrollBarSkin;
			import net.vdombox.ide.common.view.skins.VDOMScrollBarSkin.VDOMWorkAreaVScrollBarSkin;
			import net.vdombox.ide.modules.events.events.WorkAreaEvent;
			
			import spark.events.IndexChangeEvent;
			
			protected function scroller_creationCompleteHandler( event : FlexEvent ) : void
			{
				// TODO Auto-generated method stub
				scroller.verticalScrollBar.setStyle( "skinClass", VDOMWorkAreaVScrollBarSkin );
				scroller.horizontalScrollBar.setStyle( "skinClass", VDOMWorkAreaHScrollBarSkin );
				addEventListener(MouseEvent.MOUSE_WHEEL, mouseWheelHandler, true, 0, true );
			}
			
			protected function showElementsView_creationCompleteHandler( event : FlexEvent ) : void
			{
				// TODO Auto-generated method stub
				var sourceDropDownList : ArrayCollection = new ArrayCollection();
				sourceDropDownList.addItem( 'Full View' );
				sourceDropDownList.addItem( 'Active + Embedded' );
				sourceDropDownList.addItem( 'Active' );
				_showElementsView.dataProvider = sourceDropDownList;
			}
			
			protected function _showElementsView_changeHandler( event : IndexChangeEvent ) : void
			{
				// TODO Auto-generated method stub
				dispatchEvent( new WorkAreaEvent ( WorkAreaEvent.SHOW_ELEMENTS_STATE_CHANGED ) );
			}
			
			private function mouseWheelHandler( event : MouseEvent ) : void
			{
				event.delta = event.delta > 0 ? 20 : -20;
			}
			
			protected function sparkskin1_creationCompleteHandler(event:FlexEvent):void
			{
				addEventListener( MouseEvent.MOUSE_DOWN, setFocusOnWorkArea, true, 0 , true );
			}
			
			private function setFocusOnWorkArea( event : MouseEvent ) : void
			{
				setFocus();
			}
			
			protected function sparkskin1_removeHandler(event:FlexEvent):void
			{
				removeEventListener( MouseEvent.MOUSE_DOWN, setFocusOnWorkArea,true );
			}
			
		]]>
	</fx:Script>

	<s:states>

		<s:State name="normal"/>
		<s:State name="unsaved"/>
		<s:State name="disabled"/>
	</s:states>

	<s:Rect id="backgroundRect"
			bottom="0" left="0" right="0" top="0">

		<s:fill>

			<s:SolidColor color="gray"
						  alpha=".5"/>
		</s:fill>

		<s:stroke>

			<s:SolidColorStroke/>
		</s:stroke>
	</s:Rect>

	<s:Rect height="20"
			left="1" right="1" top="1">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xCDCDCD"/>
				<s:GradientEntry color="0xE8E8E8"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<s:HGroup height="20"
			  left="1" right="1" top="1"
			  gap="0" paddingRight="20" verticalAlign="middle">
		<button:WorkAreaButton id="saveButton"
								   enabled="true" enabled.disabled="false" height="20" icon="{VDOMImage.Save}"
								   label="{ resourceManager.getString( 'Events_General', 'work_area_save' ) }"
								   highlighted="false" highlighted.unsaved="true"/>
		
		<button:WorkAreaButton id="undoButton"
							   height="20" icon="{VDOMImage.Undo}"
							   label="{ resourceManager.getString( 'Events_General', 'work_area_undo' ) }"/>
		
		<button:WorkAreaButton id="redoButton"
								   height="20" icon="{VDOMImage.Redo}"
								   label="{ resourceManager.getString( 'Events_General', 'work_area_redo' ) }"/>
		
		
		<s:HGroup width="100%" horizontalAlign="center" gap="3" paddingLeft="10" paddingRight="10">
			
			<s:Label text="{ resourceManager.getString( 'Events_General', 'work_area_page' ) }" width="100%" textAlign="right" height="100%" verticalAlign="middle" color="#6215D6"/>
			
			<s:TextInput id="pageName" editable="false" selectable="false" contentBackgroundAlpha="0" borderVisible="false"  width="100%" color="#6215D6"/>
			
		</s:HGroup>
		
		<s:Label text="{ resourceManager.getString( 'Events_General', 'work_area_show_current' ) }" />
		
		<mx1:Spacer width="5" />
		
		<s:DropDownList id="_showElementsView" width="140" height="20" creationComplete="showElementsView_creationCompleteHandler(event)" change="_showElementsView_changeHandler(event)"/>
		
	</s:HGroup>

	<s:Group id="workLayers"
			 bottom="0" left="0" right="0" top="22">
		<s:Rect height="100%" width="100%">
			<s:fill>
				<s:BitmapFill source = "{VDOMImage.BG_WorkArea}" smooth="true" fillMode="repeat"/>
			</s:fill>
		</s:Rect>

		<components1:VDOMScroller id="scroller" height="100%" width="100%" creationComplete="scroller_creationCompleteHandler(event)">
			<s:Group>
				<s:Group id="linkagesLayer"/>
				<s:Group id="contentGroup"/>
			</s:Group>
		</components1:VDOMScroller>
	</s:Group>
</s:SparkSkin>
