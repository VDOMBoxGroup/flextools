<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true"
				doubleClickEnabled="true"
				doubleClick="doubleClickHandler(event)" height="55" >
	<s:states>
		<s:State name="normal" />
		<s:State name="selected" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import net.vdombox.ide.common.vo.ApplicationVO;
			import net.vdombox.ide.common.vo.ResourceVO;
			
			public static const RENDERER_CHANGED : String = "rendererChanged";
			public static const RENDERER_DOUBLE_CLICK : String = "rendererDoubleClick";
			public static const ICON_REQUEST : String = "iconRequest1";
			
			private var _resourceVO : ResourceVO;
			
			public function get resourceVO():ResourceVO
			{
				return _resourceVO;
			}
			
			public function validateResourceVO():void
			{
				if (!applicationVO.iconID)
					return;
				
				if ( _resourceVO && _resourceVO.id != applicationVO.iconID )
					createResourse();
				
				if (!_resourceVO || !_resourceVO.data )
					createResourse();
			}

			public function set resourceVO( value : ResourceVO ) : void
			{
				_resourceVO = value;
			}

			override public function set data( value : Object ) : void
			{
					super.data = value;
					
					if (!value)
						return;
					
					nameLabel.text = applicationVO ?  applicationVO.name : "";
					
					validateResourceVO();
			}
			
			private function createResourse():void
			{
				_resourceVO = new ResourceVO( applicationVO.id ); 
				_resourceVO.setID( applicationVO.iconID );
				
				BindingUtils.bindSetter( setIcon, _resourceVO, "data", false );
			}
			
			public function get applicationVO(): ApplicationVO
			{
				return data as ApplicationVO;
			}
			
			private var loader : Loader;
			private function setIcon( value : Object ) : void
			{
				if (!value)
				{
					imageHolder.source = null;
					dispatchEvent( new Event( ICON_REQUEST ));
				}
				else
				{
					imageHolder.source = ObjectUtil.copy(value);
				}
			}
			
			private function setIconLoaded( event : Event ) : void
			{
				loader = null;
				if ( event.type == IOErrorEvent.IO_ERROR )
					return;
				
				imageHolder.source = event.target.content;
			}
			
			protected function doubleClickHandler(event:MouseEvent):void
			{
				dispatchEvent( new Event( RENDERER_DOUBLE_CLICK ) );
			}
			
		]]>
	</fx:Script>
	<s:Rect id="fill"
			bottom="0" left="0" right="0" top="0">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color.normal="#424242" color.selected="#FFFFFF" />
				<s:GradientEntry color.normal="#191919" color.selected="#C6C6C6" />
			</s:LinearGradient>
		</s:fill>
		
	</s:Rect>
	
	<s:HGroup width="100%" height="100%" verticalAlign="middle" x="10">
		<mx:Image id="imageHolder"
				  width="40" height="40"/>
		
		<s:Label id="nameLabel" 
				 fontSize="15" color.normal="#FFFFFF" color.selected="#000000"/>
	</s:HGroup>
	
	
	
</s:ItemRenderer>
