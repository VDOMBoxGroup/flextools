<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:components="net.vdombox.ide.core.view.components.*"
		 creationComplete="group1_creationCompleteHandler(event)"
		 show="group1_showHandler(event)" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:skins="net.vdombox.ide.core.view.skins.*"
		 >

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			
			import net.vdombox.ide.core.events.LoginViewEvent;
			import net.vdombox.ide.core.model.vo.LocaleVO;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;

			[Bindable]
			public var languages : ArrayList;

			[Bindable]
			private var _selectedLanguage : *;

			[Bindable]
			public var username : String;

			[Bindable]
			public var password : String;

			[Bindable]
			public var hostname : String;

			public function get selectedLanguage() : LocaleVO
			{
				return _selectedLanguage as LocaleVO;
			}

			public function set selectedLanguage( value : LocaleVO ) : void
			{
				_selectedLanguage = value;
			}

			private function selectLang_changeHandler() : void
			{
				dispatchEvent( new LoginViewEvent( LoginViewEvent.LANGUAGE_CHANGED ) );
			}
			
			override protected function keyDownHandler( event : KeyboardEvent ) : void
			{
				if ( event.keyCode != 13 )
					return;
				
				if( host.textInput.text == "" )
				{
					host.setFocus();
					return;
				}
					
				if( username == "" )
				{
					user.setFocus();
					return;
				}
					
				if( password == "" )
				{
					pass.setFocus();
					return;
				}
					
				dispatchEvent( new LoginViewEvent( LoginViewEvent.SUBMIT ) );
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				host.setFocus();
				
			}


			protected function group1_showHandler(event:FlexEvent):void
			{
				host.setFocus();
			}
			
			protected function saveButton_clickHandler(event:MouseEvent):void
			{
				if ( saveButton.currentState == "save" )
					saveButton.currentState = "notsave";
				else
					saveButton.currentState = "save";
			}
			
		]]>
	</fx:Script>
	
	
		<s:VGroup gap="20" styleName="loginForm"
				  height="100%" left="180" right="40" top="34">
			<s:VGroup gap="3" width="100%">
				
				<s:Label text="{ resourceManager.getString( 'LoginForm', 'hostname' ) }" width="100%"
						 color="white" fontFamily="Arial" fontSize="14" textAlign="left"/>

				<components:ComboBoxLogin id="host" openOnInput="false" labelField="host" width="100%" height="31"
								fontSize="18" fontFamily="Arial"
								keyDown="{keyDownHandler(event)}"/>
	
			</s:VGroup>
			
			<s:VGroup gap="3" width="100%">
				
				<s:Label text="{ resourceManager.getString( 'LoginForm', 'username' ) }" width="100%"
						 color="white" fontFamily="Arial" fontSize="14" textAlign="left"/>
				
				<s:TextInput id="user" text="@{ username }" skinClass="net.vdombox.ide.core.view.skins.TextInputCornerSkin"
							 width="100%" height="31"
							 fontSize="18" fontFamily="Arial" 
							 keyDown="{keyDownHandler(event)}"/>
				
			</s:VGroup>
			
			<s:VGroup gap="3" width="100%">
				
				<s:Label text="{ resourceManager.getString( 'LoginForm', 'password' ) }" width="100%"
						 color="white" fontFamily="Arial" fontSize="14" textAlign="left"/>
				 
				<s:HGroup width="100%" gap="4">
					<s:TextInput id="pass" text="@{ password }" skinClass="net.vdombox.ide.core.view.skins.TextInputCornerSkin"
								 width="100%" height="31" displayAsPassword="true" 
								 fontSize="18" fontFamily="Arial" 
								 keyDown="{keyDownHandler(event)}"/>
					
					<components:SaveButton id="saveButton" height="31" width="58" 
										   click="saveButton_clickHandler(event)"/>
					
				</s:HGroup>
				
				
			</s:VGroup>
			
			
			
			<s:VGroup gap="3" width="100%">
				
				<s:Label text="{ resourceManager.getString( 'LoginForm', 'language' ) }" width="100%"
						 color="white" fontFamily="Arial" fontSize="14" textAlign="left"/>
				
				<components:ComboBoxLogin id="selectLang" editable="false" selecteble="false"
							dataProvider="{ languages }" labelField="description" width="100%" height="31"
							change="selectLang_changeHandler()" 
							fontSize="18" fontFamily="Arial"
							selectedItem="@{ _selectedLanguage }"/>
				
			</s:VGroup>
			
		</s:VGroup>
		
	
	
</s:Group>


