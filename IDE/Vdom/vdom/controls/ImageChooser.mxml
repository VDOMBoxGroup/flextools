<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:controls="vdom.controls.*"
	
	styleName="imageChooser"
	
	title="Change Application Icon"
	
	 width="350" showCloseButton="true"
	
	close="closeHandler(false);"
	add="addedHandler();" borderColor="#000000" titleStyleName="titleStyle">

<mx:Style>
	.titleStyle {
		color: #FFFFFF;
	}
	.imageChooser {
		backgroundColor:#FFFFFF;
		cornerRadius:0px;
		borderAlpha:1;
	}
</mx:Style>
<mx:Script>
	<![CDATA[
		import mx.controls.Alert;
		import mx.events.FlexEvent;
		import mx.graphics.codec.PNGEncoder;
		import mx.managers.PopUpManager;
		import mx.core.BitmapAsset;
		import vdom.events.ImageChooserEvent;
		import mx.core.Application;
		import mx.events.ListEvent;
		
		[Bindable]
		private var listArray:Array = [
			{source:'appIconPersonalPages', imageName:'personalpages'}, {source:'appIconAssociation', imageName:'association'},
			{source:'appIconBuild', imageName:'build'}, {source:'appIconComputer', imageName:'computer'},
			{source:'appIconCulture', imageName:'culture'}, {source:'appIconEducation', imageName:'education'},
			{source:'appIconElectronic', imageName:'electronic'}, {source:'appIconFashion', imageName:'fashion'},
			{source:'appIconHealth', imageName:'health'}, {source:'appIconHotels', imageName:'hotels'},
			{source:'appIconHousing', imageName:'housing'}, {source:'appIconRestaurant', imageName:'restaurant'},
			{source:'appIconSport', imageName:'sport'}, {source:'appIconStoreShop', imageName:'storeshop'},
			{source:'appIconTransportation', imageName:'transportation'}
		]
		
		private var _selectedImage:ByteArray;
		
		private var loader:Loader;
		private var tempName:String;
		
		[Bindable (event='imageChanged')]
		private function get selectedImage():Object
		{	
			return _selectedImage;
		}
		
		private function changeHandler(event:ListEvent):void
		{	
			_selectedImage = MyImage(event.itemRenderer).source;
			dispatchEvent(new Event('imageChanged'));
		}
		
		private function addedHandler():void 
		{
			var iconClass:Class = Application.application.getStyle('appIconPersonalPages');
			var ba:BitmapAsset = new iconClass();
			var pnge:PNGEncoder = new PNGEncoder();
			_selectedImage = pnge.encode(ba.bitmapData);
			 
		}
		
		private function closeHandler(saveSelection:Boolean):void
		{
			if(saveSelection) {
				
				var byteArray:ByteArray;
				
				if(selectedImage is ByteArray) {
				
					byteArray = ByteArray(selectedImage);
				}
				else if(selectedImage is Class) {
					
					var bitmap:BitmapAsset = new selectedImage();
					byteArray = bitmap.bitmapData.getPixels(bitmap.bitmapData.rect);
				}
				else if(selectedImage is Bitmap) {
					
					byteArray = Bitmap(selectedImage).bitmapData.getPixels(Bitmap(selectedImage).bitmapData.rect);
				}
				
				var ice:ImageChooserEvent = new ImageChooserEvent(ImageChooserEvent.APPLY);
				ice.resource = byteArray;
				dispatchEvent(ice);
			}
			
			PopUpManager.removePopUp(this);
		}
		
		private function loadFile():void
		{
			var file:File = new File();
			var fileFilter:FileFilter = new FileFilter('Image', "*.jpg;*.jpeg;*.gif;*.png");
			file.addEventListener(Event.SELECT, selectFileHandler);
			file.browseForOpen('Load image', [fileFilter]);
		}
		
		private function selectFileHandler(event:Event):void
		{
			if(event.currentTarget is File && event.currentTarget.exists) {
				
				var file:File = File(event.currentTarget);
				var fileStream:FileStream = new FileStream();
				var byteArray:ByteArray = new ByteArray();
				
				try {
					
					fileStream.open(file, FileMode.READ);				
					fileStream.readBytes(byteArray);
					
				} catch(error:Error) {
					
					Alert.show("Can't open file");
					return;
				}
				
				if(byteArray.length > 0) {
					
					if(file.name)
						tempName = file.name.substring(-1, file.name.lastIndexOf('.')); 
									
					loader = new Loader();
				
					loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loader_completeHandler);
					loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, loader_progressHandler);
					loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loader_ioErrorHandler);
					
					loader.loadBytes(byteArray);
				}
			}
		}
		
		private function loader_completeHandler(event:Event):void
		{
			var image:Bitmap = Bitmap(loader.content);
			var m:Matrix = new Matrix();
			var sx:Number = 50/image.width;
			var sy:Number = 50/image.height;

			m.scale(sx, sy);
			var scaledImage:Bitmap = 
				new Bitmap(
					new BitmapData(50, 50, true, 0x00ffffff), 
					PixelSnapping.AUTO,
					true
				); 
			scaledImage.bitmapData.draw(image.bitmapData, m);
			
			var pnge:PNGEncoder = new PNGEncoder();
			var iconByteArray:ByteArray = pnge.encode(scaledImage.bitmapData);
			
			_selectedImage = iconByteArray;
			
			dispatchEvent(new Event('imageChanged'));
				
		}
			
		private function loader_progressHandler(event:ProgressEvent):void
		{
			
		}
		
		private function loader_ioErrorHandler(event:IOErrorEvent):void
		{
			Alert.show('Wrong format!');
			return;
		}
	]]>
</mx:Script>

<mx:VBox width="100%" horizontalAlign="center" borderStyle="solid" paddingTop="5" paddingBottom="5">
	<controls:BorderImage width="50" height="50" source="{selectedImage}" borderThickness="1"/>
</mx:VBox>

<mx:HBox width="100%" verticalAlign="middle" horizontalAlign="left" paddingLeft="5" paddingRight="5">
	<mx:Spacer width="100%"/>
	<mx:Label text="Load from computer"/>
	<mx:Button label="..." cornerRadius="0" click="loadFile();"/>
</mx:HBox>

<mx:HorizontalList 
	id="hl"
	width="100%" height="75" columnCount="4" selectedIndex="0" paddingTop="5"
	dataProvider="{listArray}" itemRenderer="vdom.controls.MyImage"
	change="changeHandler(event);">
</mx:HorizontalList>
	<mx:HBox width="100%" horizontalAlign="right">
		<mx:Button label="OK" cornerRadius="0" click="closeHandler(true);"/>
		<mx:Button label="Chancel" cornerRadius="0" click="closeHandler(false);"/>
	</mx:HBox>
</mx:TitleWindow>