<?xml version="1.0" encoding="utf-8"?>
<panels:PanelBase xmlns:components="net.vdombox.ide.modules.wysiwyg.view.components.*"
				  xmlns:panels="net.vdombox.ide.modules.wysiwyg.view.components.panels.*"
				  xmlns:fx="http://ns.adobe.com/mxml/2009"
				  xmlns:mx="library://ns.adobe.com/flex/mx"
				  xmlns:s="library://ns.adobe.com/flex/spark"
				  creationComplete="creationCompleteHandler(event)">


	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import net.vdombox.ide.common.model._vo.AttributeDescriptionVO;
			import net.vdombox.ide.common.model._vo.AttributeVO;
			import net.vdombox.ide.common.model._vo.TypeVO;
			import net.vdombox.ide.common.model._vo.VdomObjectAttributesVO;
			import net.vdombox.ide.common.view.components.VDOMImage;
			import net.vdombox.ide.common.view.skins.VDOMScrollBarSkin.VDOMScrollBarSkin.VDOMVScrollBarSkin;
			import net.vdombox.ide.modules.wysiwyg.events.ObjectAttributesPanelEvent;
			import net.vdombox.ide.modules.wysiwyg.model.business.AttributeItemRendererManager;
			import net.vdombox.ide.modules.wysiwyg.model.business.AttributeItemsManager;
			import net.vdombox.ide.modules.wysiwyg.model.vo.AttributeItemVO;
			import net.vdombox.ide.modules.wysiwyg.view.components.attributeRenderers.AttributeBase;
			import net.vdombox.ide.modules.wysiwyg.view.components.attributeRenderers.ComboBoxAttribute;
			import net.vdombox.ide.modules.wysiwyg.view.components.attributeRenderers.ComboBoxObjectAttribute;

			import org.apache.flex.collections.VectorCollection;

			private var _attributesVO : VdomObjectAttributesVO;

			private var _typeVO : TypeVO;

			private var attributes : ArrayCollection;

			private var codeInterfaceRE : RegExp = /^(\w*)\((.*)\)/;
			
			private var attributeItemsManager : AttributeItemsManager = AttributeItemsManager.getInstance();
			
			[Bindable]
			private var attributesArray : VectorCollection;


			public function get attributesVO() : VdomObjectAttributesVO
			{
				return _attributesVO;
			}

			public function set attributesVO( value : VdomObjectAttributesVO ) : void
			{
				if ( !value )
				{
					_attributesVO = value;
					typeNameLabel.text = "";
					attributesArray = null;
					return;
				}
				
				var oneObject : Boolean = false;
				if ( _attributesVO && _attributesVO.vdomObjectVO == value.vdomObjectVO )
					oneObject = true;

				_typeVO = value.vdomObjectVO.typeVO;

				typeNameLabel.text = _typeVO.displayName;
				
				var attributeDescriptionVO : AttributeDescriptionVO;
				
				if ( !oneObject )
				{
					setAttributesArray( value );
				}
				else
				{
					var attribute : AttributeVO;
					var objectTemp : AttributeItemVO;
					var attributes : Vector.<AttributeVO> = value.attributes;
					var attributeItemVO : AttributeItemVO;

					for each ( var attributeVO : AttributeVO in attributes )
					{
						objectTemp = findAttribute( attributeVO );

						if ( !objectTemp )
						{
							continue;
						}
						else
						{

							attribute = objectTemp.attributeVO;
							if ( attributeVO.value != attribute.value || attributeVO.defaultValue != attribute.defaultValue )
							{
								for each ( attributeItemVO in attributesArray )  
								{
									if ( attributeItemVO.attributeVO && attributeItemVO.attributeVO.name == attributeVO.name )
									{
										attributeItemVO.attributeVO.value = attributeVO.value;
										attributeItemVO.attributeVO.defaultValue = attributeVO.defaultValue;
										
										var itemRenderer : Object = attributeItemVO.attributeVO.itemRenderer;
										
										if( itemRenderer && ( itemRenderer is ComboBoxAttribute || itemRenderer is ComboBoxObjectAttribute ))
											itemRenderer.refresh();
										break;
									}
								}
								
							}
						}
					}
				}

			}
			
			private function setAttributesArray( value : VdomObjectAttributesVO ) : void
			{
				attributesList.scroller.verticalScrollBar.viewport.verticalScrollPosition = 0;
				
				if ( !attributesArray )
					attributesArray = new VectorCollection();
				
				var attributeItemRendererManager : AttributeItemRendererManager = AttributeItemRendererManager.getInstance();
				attributeItemRendererManager.resetIndexes();
				
				var attributesCount : int = attributesArray.length;
				
				attributeItemsManager.resetIndex();
				
				var attributeItemVO : AttributeItemVO = attributeItemsManager.getAttributeItemVO( 0, "id", "id", value.vdomObjectVO, null, null, null, null );
				if (attributesCount > 0)
					attributesArray[0] = attributeItemVO;
				else
					attributesArray.addItem( attributeItemVO );
				
				attributeItemVO = attributeItemsManager.getAttributeItemVO( 0, resourceManager.getString( 'Wysiwyg_General', 'attribut_name' ), "name", value.vdomObjectVO, null, null, null, null );
				if (attributesCount > 1)
					attributesArray[1] = attributeItemVO;
				else
					attributesArray.addItem( attributeItemVO );
				
				var i : int = 0;
				var attributeDescriptions : Array = _typeVO.attributeDescriptions;
				for each ( var attrDescrVO : AttributeDescriptionVO in attributeDescriptions )
				{
					if ( !attrDescrVO.visible )
						continue;
					
					var attributeVO : AttributeVO = value.getAttributeVOByName( attrDescrVO.name );
					
					attributeItemVO = attributeItemsManager.getAttributeItemVO( attrDescrVO.colorGroup, attrDescrVO.name, attrDescrVO.displayName, null, attributeVO, attrDescrVO, value.objectsList, value.pageLinks );
					
					if (attributesCount > i + 2)
						attributesArray[i + 2] = attributeItemVO;
					else
						attributesArray.addItem( attributeItemVO );
					
					i++;
				}
				
				i += 2;
				
				while (attributesArray.length > i)
				{
					attributesArray.removeItemAt( i );
				}
				
				_attributesVO = value;
			}

			private function findAttribute( attribute : AttributeVO ) : AttributeItemVO
			{
				var attributesArraySource : Vector.<*> = attributesArray.source;
				for each ( var attributeItemVO : AttributeItemVO in attributesArraySource )
				{
					if ( !attributeItemVO.attributeVO )
						continue;

					if ( attributeItemVO.attributeVO.name == attribute.name )
						return attributeItemVO;
				}

				return null;
			}

			private function getAttributeDesctriptionVOByName( name : String ) : AttributeDescriptionVO
			{
				var result : AttributeDescriptionVO;
				var attributeDescriptionVO : AttributeDescriptionVO;

				for each ( attributeDescriptionVO in _typeVO.attributeDescriptions )
				{
					if ( attributeDescriptionVO.name == name )
					{
						result = attributeDescriptionVO;
						break;
					}
				}

				return result;
			}

			protected function creationCompleteHandler( event : FlexEvent ) : void
			{
				tbFill.minHeight = 41;
				addEventListener( ObjectAttributesPanelEvent.SELECTED_ATTRIBUTE_CHANGED, changeSelectedAttributeHandler, true, 0, true );
			}

			private function changeSelectedAttributeHandler( event : ObjectAttributesPanelEvent ) : void
			{
				attributesList.selectedIndex++;
				//var index : int = attributesList.selectedIndex;
			}

			protected function attributesList_creationCompleteHandler( event : FlexEvent ) : void
			{
				addEventListener( MouseEvent.MOUSE_WHEEL, mouseWheelHandler, true, 0, true );
				attributesList.scroller.verticalScrollBar.setStyle( "skinClass", VDOMVScrollBarSkin );
			}

			private function mouseWheelHandler( event : MouseEvent ) : void
			{
				event.delta = event.delta > 0 ? 1 : -1;
			}
		]]>
	</fx:Script>

	<s:Label id="typeNameLabel"
			 y="-18"
			 left="9"
			 right="1"
			 fontSize="8"
			 color="#FFFFFF"
			 paddingLeft="3"
			 paddingTop="3"
			 textAlign="left"
			 verticalAlign="bottom"/>

	<s:Rect width="100%"
			height="100%">
		<s:fill>
			<s:BitmapFill source="{VDOMImage.Fon_Texture}"
						  smooth="true"
						  fillMode="repeat"/>
		</s:fill>
	</s:Rect>

	<s:HGroup height="100%"
			  width="100%"
			  gap="0">
		<s:List id="attributesList"
				height="100%"
				width="100%"
				dataProvider="{ attributesArray }"
				borderVisible="false"
				useVirtualLayout="false"
				itemRenderer="net.vdombox.ide.modules.wysiwyg.view.components.attributeRenderers.AttributeBase"
				contentBackgroundAlpha="0"
				creationComplete="attributesList_creationCompleteHandler(event)"
				hasFocusableChildren="true">

			<s:layout>
				<s:VerticalLayout gap="0"
								  variableRowHeight="true"/>
			</s:layout>
		</s:List>
	</s:HGroup>

</panels:PanelBase>
