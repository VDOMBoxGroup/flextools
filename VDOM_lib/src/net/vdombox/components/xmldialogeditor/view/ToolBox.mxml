<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%"
		 creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.DragSource;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			import net.vdombox.components.xmldialogeditor.model.ComponentsFactory;
			import net.vdombox.components.xmldialogeditor.model.vo.components.ItemVO;
			import net.vdombox.components.xmldialogeditor.model.vo.components.base.ComponentBase;
			
			[Bindable]
			private var _types : ArrayCollection = new ArrayCollection();
			
			private var usingTypes : Array;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				//, "Upload"
				
				// список доступных типов
				var sourceTypeList : Vector.<String> = new <String>[ "Container", "Label", "TextBox", "Password", "TextArea", "DropDown", "ListBox", "RadioButton", "CheckBox", "RadioButtonGroup", "CheckBoxGroup", "Button", "Hypertext" ];
								
				for each( var typeName : String in sourceTypeList )
				{
					var itemVO : ItemVO = new ItemVO();
					itemVO.component = ComponentsFactory.getComponentByName( typeName );
					itemVO.name = typeName;
					_types.addItem( itemVO );
				}
			}
			
			protected function tipesList_dragStartHandler(event:DragEvent):void
			{
				// TODO Auto-generated method stub
				event.preventDefault();
				
				var dragSource : DragSource = new DragSource();
				typesList.addDragData( dragSource );
				
				var selectedItem : ItemVO = typesList.selectedItem as ItemVO;
				
				dragSource.addData( selectedItem, "ComponentBase" );
				
				DragManager.doDrag( typesList, dragSource, event );
			}
			
			public function reBuildComponent( componentBase : ComponentBase ) : void
			{
				var lengthList : int = _types.length;
								
				for ( var i : int = 0; i < lengthList; i++ )
				{
					if ( _types[i].name == componentBase.name )
					{						
						_types.removeItemAt( i );
						
						var itemVO : ItemVO = new ItemVO();
						itemVO.component = ComponentsFactory.getComponentByName( componentBase.name );
						itemVO.name = componentBase.name;
						_types.addItemAt( itemVO, i );
						
						break;
					}
				}
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:List id="typesList" height="100%" width="100%"  borderVisible="false"
			useVirtualLayout="false" contentBackgroundAlpha="0"	hasFocusableChildren="true"
			dataProvider="{ _types }"
			dragEnabled="true"
			dragStart="tipesList_dragStartHandler(event)" itemRenderer="net.vdombox.components.xmldialogeditor.view.itemrenderers.TypeItemRenderer">
		
		<s:layout>
			<s:VerticalLayout gap="0"
							  variableRowHeight="true"/>
		</s:layout>	
	</s:List>
	
</s:Group>
