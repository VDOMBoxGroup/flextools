<?xml version="1.0" encoding="utf-8"?>
<SuperWindow xmlns="ExtendedAPI.com.containers.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300"
	titleIcon="@Embed(source='assets/icons/icon_16.png')"  
	startPosition="centerParent" 
	alwaysInFront="false"
	modal="true"
	parentWindow="{Application.application.nativeWindow}"
	showStatusBar="false"
	minimizable="false"
	resizable="false">
	 
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import PowerPack.com.managers.LanguageManager;
			import mx.controls.Button;
			import mx.containers.ControlBar;
			import mx.core.Container;
			import mx.events.CloseEvent;
			
			public static const YES:uint = 0x0001;
			public static const NO:uint = 0x0002;
			public static const OK:uint = 0x0004;
			public static const CANCEL:uint= 0x0008;
			
			public static var yesLabel:String = "Yes";
			public static var noLabel:String = "No";
			public static var okLabel:String = "OK";
			public static var cancelLabel:String = "Cancel";
			
			private var closeEvent:CloseEvent = new CloseEvent(CloseEvent.CLOSE);

		 	public function show(
                                flags:uint = 0x4 /* Alert.OK */, 
                                closeHandler:Function = null, 
                                iconClass:Class = null, 
                                defaultButtonFlag:uint = 0x4 /* Alert.OK */):void
         	{

         		buttonFlags = flags;
         		
         		var btnContainer:Object;
         		
         		for(var i:int=numChildren-1; i>=0; i--)
         		{         			
         			if(getChildAt(i) is ControlBar)
         				btnContainer = getChildAt(i); 
         		}         			
         		
         		if(!btnContainer)
         			btnContainer = this;
         		
         		var button:Button;
         		
         		if (buttonFlags & OK)
				{
					button = createButton(okLabel, "OK", btnContainer as Container);					
					
					button.visible = true;
					button.includeInLayout = true;
					
					if (defaultButtonFlag == OK)
						defaultButton = button;
				}

         		if (buttonFlags & YES)
				{
					button = createButton(yesLabel, "YES", btnContainer as Container);					
					
					button.visible = true;
					button.includeInLayout = true;
					
					if (defaultButtonFlag == YES)
						defaultButton = button;
				}

         		if (buttonFlags & NO)
				{
					button = createButton(noLabel, "NO", btnContainer as Container);					
					
					button.visible = true;
					button.includeInLayout = true;
					
					if (defaultButtonFlag == NO)
						defaultButton = button;
				}
         		
         		if (buttonFlags & CANCEL)
				{
					button = createButton(cancelLabel, "CANCEL", btnContainer as Container);					
					
					button.visible = true;
					button.includeInLayout = true;
					
					if (defaultButtonFlag == CANCEL)
						defaultButton = button;
				}
				
				if(iconClass)
					titleIcon = iconClass;
         		
           		addEventListener(Event.CLOSING, onClosing);

         		if (closeHandler != null)
            		addEventListener(CloseEvent.CLOSE, closeHandler);
         	}
         	
         	private var buttonFlags:uint;
         	
         	private function createButton(label:String, name:String, bar:Container):Button
         	{
         		var button:Button = new Button();
         		button.label = label;
         		button.visible = false;
         		button.includeInLayout = false;
         		button.name = name;
         		button.addEventListener(MouseEvent.CLICK, onClick);
         		button.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);
         		bar.addChild(button);
         		
         		return button;
         	}
         	
			override protected function keyDownHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ESCAPE)
				{
					if ((buttonFlags & CANCEL) || !(buttonFlags & NO))
						removeDialog("CANCEL");
					else if (buttonFlags & NO)
						removeDialog("NO");
				}
			}         	
			
			private function onClick(event:MouseEvent):void
			{
				var name:String = Button(event.currentTarget).name;
				removeDialog(name);
			}
			
			private function removeDialog(buttonPressed:String):void
			{
				if (buttonPressed == "YES")
					closeEvent.detail = YES;
				else if (buttonPressed == "NO")
					closeEvent.detail = NO;
				else if (buttonPressed == "OK")
					closeEvent.detail = OK;
				else if (buttonPressed == "CANCEL")
					closeEvent.detail = CANCEL;
				else
					closeEvent.detail = 0;
				
				close();		
			}
			
			private function onClosing(event:Event):void
			{
				dispatchEvent(closeEvent);
			}
			
		]]>
	</mx:Script>
		
</SuperWindow>