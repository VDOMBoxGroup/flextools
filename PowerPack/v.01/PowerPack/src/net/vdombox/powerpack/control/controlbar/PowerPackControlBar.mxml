<?xml version="1.0" encoding="utf-8"?>
<mx:ControlBar xmlns:mx="http://www.adobe.com/2006/mxml" 
			   horizontalGap="7" verticalAlign="middle" 
			   height="35"
			   creationComplete="creationCompleteHandler(event)" 
			   xmlns:controlbar="net.vdombox.powerpack.control.controlbar.*">
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import net.vdombox.powerpack.dialog.AirBuildProperties;
			import net.vdombox.powerpack.dialog.ProjectsSettingsDialog;
			import net.vdombox.powerpack.lib.extendedapi.utils.FileUtils;
			import net.vdombox.powerpack.lib.player.managers.ContextManager;
			import net.vdombox.powerpack.lib.player.template.Template;
			import net.vdombox.powerpack.lib.player.template.TemplateProject;
			import net.vdombox.powerpack.managers.BuilderContextManager;
			import net.vdombox.powerpack.menu.MenuGeneralEvent;
			import net.vdombox.powerpack.menu.MenuManager;
			import net.vdombox.powerpack.panel.Graphs;
			import net.vdombox.powerpack.template.BuilderTemplate;
			import net.vdombox.powerpack.template.BuilderTemplateProject;
			
			public static const ITEM_TYPE_NEW_TEMPLATE		: String = "new_template";
			public static const ITEM_TYPE_SAVE_TEMPLATE		: String = "save";
			public static const ITEM_TYPE_EXPORT_TEMPLATE	: String = "export_xml";
			public static const ITEM_TYPE_OPEN_TEMPLATE		: String = "open_file";
			
			public static const ITEM_TYPE_APP_PROPERIES		: String = "properties";
			public static const ITEM_TYPE_BUILD_INSTALLER	: String = "air_builder";
			
			public static const ITEM_TYPE_RUN				: String = "run";
			public static const ITEM_TYPE_DEBUG				: String = "debug";
			public static const ITEM_TYPE_STEP_BY_STEP		: String = "step_by_step";
			
			public static const ITEM_TYPE_STEP_INTO			: String = "step_into";
			public static const ITEM_TYPE_STEP_OVER			: String = "step_over";
			public static const ITEM_TYPE_STEP_RETURN		: String = "step_return";
			public static const ITEM_TYPE_RESUME			: String = "resume";
			public static const ITEM_TYPE_BREAK				: String = "break";
			
			private function cbApplicationsChangeHandler( event : Event ) : void
			{
				currentTemplate.selectedProject = appsComboBox.selectedItem as TemplateProject;
				
				appsComboBox.selectedItem = currentTemplate.selectedProject;
			}
			
			private function get currentTemplate() : BuilderTemplate
			{
				return BuilderContextManager.currentTemplate;
			}
			
			protected function menuItem_clickHandler(event:MouseEvent, itemType : String):void
			{
				var evt : ControlBarEvent = new ControlBarEvent(ControlBarEvent.EVENT_ITEM_CLICK);
				evt.targetItemType = itemType;
				
				dispatchEvent(evt);
			}
			
			public function menuRunStateChangedHandler (event : MenuGeneralEvent) : void
			{
				if (!MenuManager.getInstance().menu)
					return;
				
				var runMenuItem : NativeMenuItem = MenuManager.getInstance().menu.nativeMenu.getItemByName( MenuManager.MENU_RUN );
				
				menuBtnRun.enabled = runMenuItem.submenu.getItemByName( "run" ).enabled;
				menuBtnStepByStep.enabled = runMenuItem.submenu.getItemByName( "step_by_step" ).enabled;
				menuBtnDebug.enabled = runMenuItem.submenu.getItemByName( "debug" ).enabled;
				
				menuBtnBreak.enabled = runMenuItem.submenu.getItemByName( "break" ).enabled;
				menuBtnResume.enabled = runMenuItem.submenu.getItemByName( "resume" ).enabled;
				
				menuBtnStepInto.enabled = runMenuItem.submenu.getItemByName( "step_into" ).enabled;
				menuBtnStepOver.enabled = runMenuItem.submenu.getItemByName( "step_over" ).enabled;
				menuBtnStepReturn.enabled = runMenuItem.submenu.getItemByName( "step_return" ).enabled;
			}
		
			public function menuTemplateStateChangedHandler (event : MenuGeneralEvent) : void
			{
				if (!MenuManager.getInstance().menu)
					return;
				
				var templateMenuItem : NativeMenuItem = MenuManager.getInstance().menu.nativeMenu.getItemByName( MenuManager.MENU_TEMPLATE );
				
				menuAppSettings.enabled = menuBuild.enabled = templateMenuItem.enabled;
				
			}
			
			public function menuFileStateChangedHandler (event : MenuGeneralEvent) : void
			{
				if (!MenuManager.getInstance().menu)
					return;
				
				var fileMenuItem : NativeMenuItem = MenuManager.getInstance().menu.nativeMenu.getItemByName( MenuManager.MENU_FILE );
				
				menuBtnNewTemplate.enabled = fileMenuItem.submenu.getItemByName( "new_template" ).enabled;
				menuBtnOpenTemplate.enabled = fileMenuItem.submenu.getItemByName( "open_file" ).enabled;
				menuBtnSaveTemplate.enabled = fileMenuItem.submenu.getItemByName( "save" ).enabled;
				menuBtnExportTemplate.enabled = fileMenuItem.submenu.getItemByName( "export_xml" ).enabled;
				
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				MenuManager.getInstance().addEventListener(MenuGeneralEvent.MENU_RUN_STATE_CHANGED, menuRunStateChangedHandler);
				MenuManager.getInstance().addEventListener(MenuGeneralEvent.MENU_TEMPLATE_STATE_CHANGED, menuTemplateStateChangedHandler);
				
				MenuManager.getInstance().addEventListener(MenuGeneralEvent.MENU_FILE_STATE_CHANGED, menuFileStateChangedHandler);
			}
			
			private function get ctrlString () : String
			{
				return isMac ? String.fromCharCode(8984) : "Ctrl";
			}
			
			private function get altString () : String
			{
				return isMac ? String.fromCharCode(8997) : "Alt";
			}
			
			private function get separator () : String
			{
				return isMac ? "" : " + ";
			}
			
			private function get isMac () : Boolean
			{
				return FileUtils.OS == FileUtils.OS_MAC;;
			}
			
			private function get ctrlAndAltString () : String
			{
				return isMac ? altString + ctrlString : ctrlString + separator + altString;
			}
		]]>
	</mx:Script>
	
	<controlbar:ControlBarButton id="menuBtnNewTemplate"
							   sourceEnabled="@Embed('/assets/icons/newTemplateEnabled.png')"
							   sourceDisabled="@Embed('/assets/icons/newTemplateDisabled.png')"
							   click="menuItem_clickHandler(event, ITEM_TYPE_NEW_TEMPLATE)" 
							   toolTip="New template ({ctrlString}{separator}N)"/>
	
	<controlbar:ControlBarButton id="menuBtnOpenTemplate"
							   sourceEnabled="@Embed('/assets/icons/OpenTemplateEnabled.png')"
							   sourceDisabled="@Embed('/assets/icons/OpenTemplateDisabled.png')"
							   click="menuItem_clickHandler(event, ITEM_TYPE_OPEN_TEMPLATE)"
							   toolTip="Open file"/>
	
	<controlbar:ControlBarButton id="menuBtnSaveTemplate"
							   sourceEnabled="@Embed('/assets/icons/SaveTemplateEnabled.png')"
							   sourceDisabled="@Embed('/assets/icons/SaveTemplateDisabled.png')"
							   click="menuItem_clickHandler(event, ITEM_TYPE_SAVE_TEMPLATE)" 
							   toolTip="Save template ({ctrlString}{separator}S)"/>
	
	<controlbar:ControlBarButton id="menuBtnExportTemplate"
								 sourceEnabled="@Embed('/assets/icons/exportXMLEnabled.png')"
								 sourceDisabled="@Embed('/assets/icons/exportXMLDisabled.png')"
								 click="menuItem_clickHandler(event, ITEM_TYPE_EXPORT_TEMPLATE)" 
								 toolTip="Export template ({ctrlString}{separator}E)"/>
	
	<mx:VRule height="20"/>
	
	<mx:Label text="Projects:" />
	
	<mx:ComboBox id="appsComboBox"
				 width="200" height="20"
				 dataProvider="{ContextManager.templates.getItemAt( 0 ).projects}" 
				 labelField="name"
				 selectedIndex="{ContextManager.templates.getItemAt( 0 ).selectedProjectIndex}"
				 change="cbApplicationsChangeHandler(event)"/>
	
	<controlbar:ControlBarButton id="menuAppSettings" 
							 sourceEnabled="@Embed('/assets/icons/settingsEnabled.png')" 
							 sourceDisabled="@Embed('/assets/icons/settingsDisabled.png')"
							 toolTip="Template properties"
							 click="menuItem_clickHandler(event, ITEM_TYPE_APP_PROPERIES)"/>
	
	<mx:VRule height="20"/>
	
	<controlbar:ControlBarButton id="menuBtnRun"
							 sourceEnabled="@Embed('/assets/icons/runEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/runDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_RUN)"
							 toolTip="Run ({ctrlString}{separator}R)"/>
	
	<controlbar:ControlBarButton id="menuBtnDebug"
							 sourceEnabled="@Embed('/assets/icons/debugEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/debugDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_DEBUG)" 
							 toolTip="Debug ({ctrlString}{separator}D)"/>
	
	<controlbar:ControlBarButton id="menuBtnStepByStep"
							 sourceEnabled="@Embed('/assets/icons/stepByStepEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/stepByStepDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_STEP_BY_STEP)" 
							 toolTip="Step by step ({ctrlAndAltString}{separator}D)"/>

	<mx:VRule height="20"/>
	
	<controlbar:ControlBarButton id="menuBtnResume"
							 sourceEnabled="@Embed('/assets/icons/ResumeEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/ResumeDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_RESUME)" 
							 toolTip="Resume ({ctrlString}{separator}M)"/>
	
	<controlbar:ControlBarButton id="menuBtnStepInto"
							 sourceEnabled="@Embed('/assets/icons/StepIntoEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/StepIntoDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_STEP_INTO)" 
							 toolTip="Step Into ({ctrlString}{separator}I)"/>
	
	<controlbar:ControlBarButton id="menuBtnStepOver"
							 sourceEnabled="@Embed('/assets/icons/StepOverEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/StepOverDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_STEP_OVER)" 
							 toolTip="Step Over ({ctrlString}{separator}O)"/>

	<controlbar:ControlBarButton id="menuBtnStepReturn"
							 sourceEnabled="@Embed('/assets/icons/StepReturnEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/StepReturnDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_STEP_RETURN)" 
							 toolTip="Step Return ({ctrlString}{separator}E)"/>
	
	<controlbar:ControlBarButton id="menuBtnBreak"
							 sourceEnabled="@Embed('/assets/icons/BreakEnabled.png')"
							 sourceDisabled="@Embed('/assets/icons/BreakDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_BREAK)" 
							 toolTip="Break ({ctrlString}{separator}B)"/>
	
	<mx:VRule height="20"/>
	
	<controlbar:ControlBarButton id="menuBuild"
							 sourceEnabled="@Embed('/assets/icons/exportBuildEnabled.png')" 
							 sourceDisabled="@Embed('/assets/icons/exportBuildDisabled.png')"
							 click="menuItem_clickHandler(event, ITEM_TYPE_BUILD_INSTALLER)" 
							 toolTip="Export project build (Adobe AIR or native file)"/>
	
	
</mx:ControlBar>
