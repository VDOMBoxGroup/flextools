<?xml version="1.0" encoding="utf-8"?>
<ModalDialog
	xmlns="net.vdombox.powerpack.dialog.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	minWidth="700" minHeight="670"
	width="700" height="670"
	title="{LanguageManager.sentences.template_properties}"
	xmlns:controls="net.vdombox.powerpack.lib.extendedapi.controls.*" 
	xmlns:customize="net.vdombox.powerpack.customize.*"
	resizable="false"
	verticalScrollPolicy="off" horizontalScrollPolicy="off">
	
	<customize:TemplateDefaultLogo id="defaultLogo" />
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.utils.StringUtil;
			
			import net.vdombox.powerpack.control.ProjectProperties;
			import net.vdombox.powerpack.lib.extendedapi.utils.FileToBase64;
			import net.vdombox.powerpack.lib.extendedapi.utils.FileUtils;
			import net.vdombox.powerpack.lib.player.managers.ContextManager;
			import net.vdombox.powerpack.lib.player.managers.LanguageManager;
			import net.vdombox.powerpack.lib.player.template.Template;
			import net.vdombox.powerpack.lib.player.template.TemplateProject;
			import net.vdombox.powerpack.managers.BuilderContextManager;
			import net.vdombox.powerpack.template.BuilderTemplate;
			import net.vdombox.powerpack.template.BuilderTemplateProject;
			
			private static var _dialog	: ProjectsSettingsDialog;
			
			[Bindable]
			public var graphs : ArrayCollection;
			
			static public function show( templateGraphs : ArrayCollection, closeHandler : Function = null ) : ProjectsSettingsDialog
			{
				
				if ( !_dialog || _dialog.closed )
				{
					_dialog = new ProjectsSettingsDialog();
					_dialog.graphs = templateGraphs;
					
					_dialog.open();
					_dialog.show( OK | CANCEL, closeHandler, null, OK );
					
					var defaultCaptions : Object = {
						template_properties : "Properties"
					};
					
					LanguageManager.setSentences( defaultCaptions );
				}
				else
				{
					_dialog.activate();
				}
				
				return _dialog;
			}
			
			protected override function removeDialog( buttonPressed : String ) : void
			{
				switch ( buttonPressed )
				{
					
					case BUTTON_NAME_OK:
					{
						saveSettings();
												
						_dialog.closeDetail = ModalDialog.OK;
						_dialog.close();
						
						break;
					}
					case BUTTON_NAME_CANCEL:
					{
						_dialog.closeDetail = ModalDialog.CANCEL;
						_dialog.close();
						break;
					}
					default:
					{
						_dialog.closeDetail = ModalDialog.CANCEL;
						_dialog.close();
						break;
					}
				}
			}
			
			protected function projectsList_creationCompleteHandler(event:FlexEvent):void
			{
				for each (var project : BuilderTemplateProject in projects)
				{
					addNewProjectProperties(project);
				}
				
				updatePropertiesView ();
			}
			
			protected function projectsList_changeHandler(event:ListEvent):void
			{
				updatePropertiesView ();
			}
			
			protected function buttonNewProject_clickHandler(event:MouseEvent):void
			{
				currentTemplate.createNewProject();
				
				var newProjectIndex : Number = projects.length-1;
				
				addNewProjectProperties(projects[newProjectIndex] as BuilderTemplateProject);
			}
			
			protected function buttonRemoveProject_clickHandler(event:MouseEvent):void
			{
				if (projectsList.selectedIndex < 0 || projects.length <= 1)
					return;
				
				removeProjectPropertiesAt (projectsList.selectedIndex);
				
				currentTemplate.deleteProject ( projectsList.selectedItem as BuilderTemplateProject );
				
				projectsList.selectedIndex = currentTemplate.selectedProjectIndex;
			}
			
			private function updatePropertiesView () : void
			{
				vsProperties.selectedIndex = projectsList.selectedIndex;
			}
			
			private function saveSettings () : void
			{
				for each (var projectProperties : ProjectProperties in vsProperties.getChildren())
				{
					projectProperties.saveSettings();
				}
			}
			
			private function get currentTemplate () : BuilderTemplate
			{
				return BuilderContextManager.currentTemplate;
			}
			
			private function get projects () : Array
			{
				return ArrayCollection(projectsList.dataProvider).source;
			}
			
			private function addNewProjectProperties (project : BuilderTemplateProject) : void
			{
				var projectPropertiesControl : ProjectProperties;
				
				projectPropertiesControl = new ProjectProperties();
				projectPropertiesControl.project = project;
				projectPropertiesControl.graphs = graphs;
				
				vsProperties.addChild(projectPropertiesControl);
			}
			
			private function removeProjectPropertiesAt (index : int) : void
			{
				vsProperties.removeChildAt(index);
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox styleName="dlgHeader" width="100%">
		<mx:Label text="{LanguageManager.sentences.template_properties}" styleName="headerLabel" />
	</mx:VBox>
	
	<mx:HRule width="100%" />
	
	<mx:Spacer height="10"/>
	
	
		
	<mx:HBox verticalScrollPolicy="off" horizontalScrollPolicy="off"
			 width="100%" height="100%"
			 paddingLeft="10" paddingRight="10">

		<mx:Panel height="100%" layout="absolute" title="Projects"
				  verticalScrollPolicy="off" horizontalScrollPolicy="off"
				  backgroundAlpha="0"
				  borderAlpha="0"
				  fontFamily="Tahoma">
		
			<mx:VBox height="100%">
				
				<mx:HBox width="100%">
					<mx:Button id="newProject" 
							   icon="{ContextManager.addClass}"
							   toolTip="Add new project"
							   click="buttonNewProject_clickHandler(event)"/>
					<mx:Button id="removeProject" 
							   icon="{ContextManager.deleteClass}"
							   toolTip="Remove project"
							   click="buttonRemoveProject_clickHandler(event)"/>
				</mx:HBox>
				
				<mx:List id="projectsList"
						 width="200" height="100%"
						 dataProvider="{currentTemplate.projects}"
						 labelField="name"
						 selectedIndex="{currentTemplate.selectedProjectIndex}"
						 change="projectsList_changeHandler(event)"
						 creationComplete="projectsList_creationCompleteHandler(event)"
						 borderStyle="solid"/>
				
			</mx:VBox>
		</mx:Panel>
		
		<mx:Panel width="100%" height="100%" layout="absolute"
				  verticalScrollPolicy="off" horizontalScrollPolicy="off"
				  title="Project properties"
				  backgroundAlpha="0"
				  borderAlpha="0"
				  fontFamily="Tahoma">
			
			<mx:ViewStack	id="vsProperties" 
							width="100%" height="100%"/>
		</mx:Panel>
		
	</mx:HBox>
	
	<mx:Spacer height="10"/>
	
	<mx:HRule width="100%" />
	
	<mx:ControlBar width="100%" styleName="dlgFooter">
	</mx:ControlBar>
	
</ModalDialog>
