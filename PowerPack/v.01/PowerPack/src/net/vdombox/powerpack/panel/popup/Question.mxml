<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
				xmlns:popup="net.vdombox.powerpack.panel.popup.*" 
				xmlns:control="net.vdombox.powerpack.control.*"
				creationComplete="completeHandler(event)" 
				initialize="popupbox1_initializeHandler(event)">
	<mx:Script>
		<![CDATA[
			import mx.containers.Canvas;
			import mx.controls.Image;
			import mx.controls.Text;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import net.vdombox.powerpack.control.BrowseButton;
			import net.vdombox.powerpack.customize.skins.PopupBackgroundSkin;
			
			public static const QT_INPUT	: int = 0;
			public static const QT_SELECT	: int = 1;
			public static const QT_BROWSE	: int = 2;
			
			[Bindable]
			private var question : String = "";
			
			public var strAnswer : String = "";
			
			private var dSize : Boolean = false;
			
			private var fCloseHandler : Function;
			
			public function setDefaultProperties(question : String, closeHandler : Function = null):void
			{
				this.question = question;
				fCloseHandler = closeHandler;
			}
			
			protected function btnOkClickHandler(evt:MouseEvent) : void
			{
				btnOk.removeEventListener(MouseEvent.CLICK, btnOkClickHandler);
				
				closeDialog();
			}
			
			protected function closeDialog() : void
			{
				if ( fCloseHandler != null )
				{
					addEventListener( CloseEvent.CLOSE, fCloseHandler );
					
				}
				
				dispatchEvent( new CloseEvent( CloseEvent.CLOSE ) );
				PopUpManager.removePopUp(this);
			}
			
			protected function completeHandler(event:FlexEvent):void
			{
				width = 400;
				//height = 300;
				PopUpManager.centerPopUp(this);
			}
			
			protected function popupbox1_initializeHandler(event:FlexEvent):void
			{
				if (className == "Question")
				{
					throw new IllegalOperationError("Abstract class did not receive reference to self. MyAbstractType cannot be instantiated directly.");
				}
			}
			
			private function get borderThickness () : Number
			{
				return getStyle("borderThickness");
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" id="mainBox" 
			 left="{borderThickness}" right="{borderThickness}" 
			 top="{borderThickness}" bottom="{borderThickness}">
		
		<mx:Canvas width="100%" id="topPart">
			<mx:HBox width="100%"
					 paddingLeft="16" paddingTop="16" paddingRight="16" paddingBottom="16"
					 horizontalGap="10" id="topH">
				<mx:Image source="@Embed('/assets/images/question.png')" autoLoad="true" id="qImg"/>
				<mx:Text width="100%" maxHeight="188"
						 paddingTop="5" paddingBottom="5"
						 styleName="infoTextStyle"
						 text="{question}"
						 selectable="false"
						 id="qText"/>
			</mx:HBox>
		</mx:Canvas>
		
		<popup:PopupBottomPart width="100%" id="bottomPart">
			<mx:VBox  verticalGap="12" id="t1" width="100%"
					  paddingLeft="16" paddingTop="16" paddingRight="16" paddingBottom="16">
				<mx:HBox width="100%" height="100%" id="t2">
 					<mx:Image source="@Embed('/assets/images/user.png')" autoLoad="true" id="t3"/>
					<mx:Canvas width="100%"  id="answerCanvas"  maxHeight="200" />
					
				</mx:HBox>
				<mx:Canvas width="100%">
					<control:RoundButton label="Ok" id="btnOk" 
							   							bottom="0" right="0"
														click="btnOkClickHandler(event)"/>
				</mx:Canvas>
			</mx:VBox>
		</popup:PopupBottomPart>
		
	</mx:VBox>
	
</mx:Canvas>
