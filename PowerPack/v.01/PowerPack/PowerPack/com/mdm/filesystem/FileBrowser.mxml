<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="436" height="352" 
	creationComplete="showBrowse();" 
	initialize="init();" 
	title="{langXML.filebrowse.select.title}" xmlns:ns1="http://code.google.com/p/flexlib/" currentState="mdm">
	<mx:states>
		<mx:State name="mdm"/>
		<mx:State name="simple">
			<mx:SetProperty name="width" value="502"/>
			<mx:SetProperty name="height" value="382"/>
			<mx:RemoveChild target="{canvasListView}"/>
			<mx:RemoveChild target="{btnConfirm}"/>
			<mx:RemoveChild target="{btnCancel}"/>
			<mx:RemoveChild target="{txtFile}"/>
			<mx:RemoveChild target="{lblFileName}"/>
			<mx:AddChild position="lastChild">
				<mx:Grid width="100%" height="100%" paddingTop="5" paddingRight="5" paddingLeft="5" paddingBottom="5">
					<mx:GridRow width="100%">
						<mx:GridItem width="100%" height="100%" verticalAlign="middle" horizontalAlign="right">
							<mx:Label text="Folder:"/>
						</mx:GridItem>
						<mx:GridItem width="100%" height="100%">
							<mx:ControlBar verticalAlign="middle" horizontalAlign="left" width="100%" paddingTop="0" paddingBottom="0" paddingRight="0" paddingLeft="0" horizontalGap="0">
								<mx:ComboBox></mx:ComboBox>
								<mx:Spacer width="10"/>
								<mx:Button label="x"/>
								<mx:Button label="x"/>
								<mx:Button label="x" toggle="false"/>
								<mx:PopUpMenuButton label="x"/>
							</mx:ControlBar>
						</mx:GridItem>
					</mx:GridRow>
					<mx:GridRow width="100%" height="100%">
						<mx:GridItem width="100%" height="100%">
							<mx:List height="100%" width="100%"></mx:List>
						</mx:GridItem>
						<mx:GridItem width="100%" height="100%">
							<mx:VBox width="100%" height="100%">
								<mx:ViewStack id="viewstack1" width="100%" height="100%">
									<mx:Canvas label="View 1" width="100%" height="100%" borderStyle="inset">
									</mx:Canvas>
								</mx:ViewStack>
								<mx:Grid width="100%">
									<mx:GridRow width="100%" height="100%">
										<mx:GridItem width="100%" height="100%">
											<mx:Label text="File name:"/>
										</mx:GridItem>
										<mx:GridItem width="100%" height="100%">
											<mx:ComboBox editable="true"></mx:ComboBox>
										</mx:GridItem>
										<mx:GridItem width="100%" height="100%" horizontalAlign="right">
											<mx:Button label="Select"/>
										</mx:GridItem>
									</mx:GridRow>
									<mx:GridRow width="100%" height="100%">
										<mx:GridItem width="100%" height="100%">
											<mx:Label text="File type:"/>
										</mx:GridItem>
										<mx:GridItem width="100%" height="100%">
											<mx:ComboBox></mx:ComboBox>
										</mx:GridItem>
										<mx:GridItem width="100%" height="100%" horizontalAlign="right">
											<mx:Button label="Cancel"/>
										</mx:GridItem>
									</mx:GridRow>
								</mx:Grid>
							</mx:VBox>
						</mx:GridItem>
					</mx:GridRow>
				</mx:Grid>
			</mx:AddChild>
			<mx:SetProperty name="showCloseButton" value="true"/>
			<mx:SetStyle name="borderThickness" value="12"/>
		</mx:State>
	</mx:states>
	
	<mx:Script>
		<![CDATA[
			import PowerPack.com.Utils;
			import mx.utils.StringUtil;
			import mx.events.FlexEvent;
			import mx.events.CloseEvent;
			import mx.events.MoveEvent;
			import mdm.*;
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
            import mx.events.ValidationResultEvent;
            import mx.validators.*;
			
			private var bMoved:Boolean = false;
			private var strPath:String = "";
			private var strStyle:String = "smallicon";
			private var validFileName:Boolean = false;

			public var selectedItem:Object;

			[Bindable]
            public var langXML:XML;
			
			private function init():void
			{												
				defaultButton = btnConfirm;
				showCloseButton = true;
				selectedItem = new Object();
				selectedItem.type = null; // file, dir
				selectedItem.path = null;
				
				mdm.FileExplorer.ListView.dblClickExecutes(true);				

   	        	mdm.FileExplorer.onFileListViewDblClick = function(myObject:Object):void{
					mdm.Dialogs.Prompt(myObject.type) ;
					mdm.Dialogs.Prompt(myObject.name) ;
					mdm.Dialogs.Prompt(myObject.association) ;
				} 
					
				mdm.FileExplorer.ListView.setViewStyle(strStyle);
				
				strPath = FileUtils.currentDir;
				
				txtFile.text = strPath;	
								
				addEventListener(MoveEvent.MOVE, moveWindowHandler);
				addEventListener(CloseEvent.CLOSE, closeWindowHandler);
				addEventListener(FlexEvent.UPDATE_COMPLETE, updateCompleteHandler);
			}
			
			private function showBrowse():void
			{				
				var point:Point = contentToGlobal(new Point(canvasListView.x, canvasListView.y));
				
				mdm.FileExplorer.ListView.show(
					int(point.x+1), int(point.y+1), 
					int(canvasListView.width-2), int(canvasListView.height-2), 
					strPath); 
			}
			
			private function close():void
			{
				mdm.FileExplorer.ListView.hide();
				PopUpManager.removePopUp(this);
				
				dispatchEvent(new Event("closeBrowse"));
			}	
			
			private function moveUp():Boolean
			{
				if(!strPath)
					return false;
				
				var exists:Boolean = FileUtils.isFolderExists(strPath);
				
				if(!exists)
					return false;
	    		
		    	var rePattern:RegExp;
		    	rePattern = /[^\\\/]+[\\\/]*$/;
		    	
		        var index:int = strPath.search(rePattern);
		        
		        if(index<0)
		        	return false;
		        	
		        var newStrPath:String = strPath.substring(0, index);
		        
		        exists = FileUtils.isFolderExists(newStrPath);
				
				if(!exists)
					return false;
					
				strPath = newStrPath;
				
				moveWindowHandler(new MoveEvent("move"));
									
		        return true;			
			}
			
			//--------------------------------------------------------------------------
	    	//
	    	//  Event handlers
	    	//
	    	//--------------------------------------------------------------------------
	    			
			private function updateCompleteHandler(event:FlexEvent):void
			{				
				if(bMoved)
				{
					bMoved = false;		
					showBrowse();
				}			
			}
			
			private function moveWindowHandler(event:MoveEvent):void
			{
				bMoved = true;
				mdm.FileExplorer.ListView.hide();
				invalidateDisplayList();
			}
						
			private function selectHandler(event:Event):void
			{
				var strSelectedItem:String;	
		    	var rePattern:RegExp;
		    	var fullPath:Object;

		    	fullPath = validateFullPath();
				
				strSelectedItem = mdm.FileExplorer.ListView.getSelected();
				
		    	if(strSelectedItem.length==0)
		    	{
		    		strSelectedItem = null;
		    	}
		    	
		    	if(strSelectedItem)
		    	{
		    		rePattern = /^[^:]+:/gi;		    	
		        	selectedItem.path = strSelectedItem.replace(rePattern, "");
		        	rePattern = /:.*/gi;
		        	selectedItem.type = strSelectedItem.replace(rePattern, "");				
		     	}
		     	else if(validFileName)
				{
					selectedItem.type = "file";
					selectedItem.path = txtFile.text;
				}
				else if(fullPath.path)
				{
					strPath = fullPath.path;
					moveWindowHandler(new MoveEvent("move"));
					return;
				}
				else
				{
					return;
				}	
										
				close();
			}	
				
			private function closeWindowHandler(event:Object):void
			{
				close(); 
			}  
  			   			  			
  			private function validateFullPath():Object 
  			{  
  				var retObject:Object = new Object();
  				retObject.path = null;
  				retObject.file = null;
				
				retObject.path = FileUtils.getPath(txtFile.text);
				retObject.file = FileUtils.getFileName(txtFile.text);
				
  				if(!retObject.path && !retObject.file)
  				{
  					txtFile.errorString = "The filename is invalid.";
  					validFileName = false;
  				}
  				else if(retObject.path && retObject.file)
  				{
  					txtFile.errorString = null;
  					validFileName = true;
  				}
  				else
  				{
  					txtFile.errorString = null;
  					validFileName = false;  				
  				}
  				
  				return retObject;
  			}

		]]>
	</mx:Script>
						
	<mx:Button label="{langXML.filebrowse.select.btncancel}" width="65" id="btnCancel" click="closeWindowHandler(event);" bottom="10" right="10"/>
	<mx:Button label="{langXML.filebrowse.select.btnselect}" width="65" id="btnConfirm" click="selectHandler(event);" right="10" bottom="40"/>
	<mx:Canvas id="canvasListView" left="10" right="10" bottom="70" top="10" borderStyle="solid">
	</mx:Canvas>
	<mx:TextInput x="83" y="250" editable="true" width="250" id="txtFile" enabled="true" enter="selectHandler(event);"/>
	<mx:Label x="10" y="252" text="{langXML.filebrowse.lblfilename}" id="lblFileName" width="65"/>
</mx:TitleWindow>
