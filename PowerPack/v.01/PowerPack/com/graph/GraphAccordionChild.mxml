<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
		label="{langXML.navigatorpanel.graphs.title}"
		width="100%" height="100%">

	<mx:XML id="langXML"></mx:XML>
	<mx:XML id="templateXML"></mx:XML>

	<mx:Script>
		<![CDATA[
			import PowerPack.com.parse.NodeParser;
			import mx.events.ListEventReason;
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			
			[Bindable]
			public var graphs:ArrayCollection = new ArrayCollection();	
            
            private function beginEdit(event:ListEvent):void 
            { 
            	event.preventDefault();
            	
            	var list:List = List(event.currentTarget);
            	
            	list.createItemEditor(0, list.selectedIndex); 

            	var editInst:GraphThumb = GraphThumb(list.itemEditorInstance);
            	
				editInst.lblThumb.visible = false;            	
				editInst.txtThumb.visible = true;
				editInst.txtThumb.setFocus();
				editInst.data = list.selectedItem;
				editInst.txtThumb.setSelection(0, editInst.txtThumb.text.length);
           	}
            
            private function endEdit(event:ListEvent):void 
            {    
                event.preventDefault();	
                
            	var list:List = List(event.currentTarget);
            	var editInst:GraphThumb = GraphThumb(list.itemEditorInstance);                

                var newData:String = editInst.txtThumb.text;
                
                if(NodeParser.SubgraphNodeParse(newData).result==false)
                {	                
                	editInst.lblThumb.errorString =
	                	"Enter a valid graph name.";
                }                
                
                if (event.reason == ListEventReason.CANCELLED)
                {
                    // Do not update item.
	                // Close the cell editor.
	                list.destroyItemEditor();
	                list.editable = false; 
                	return;
                }
            	
            	// Disable copying data back to the control.
                if(NodeParser.SubgraphNodeParse(newData).result==false)
                {	      
                	list.destroyItemEditor();
	               	//list.editedItemPosition = list.editedItemPosition;
            	}            	
            	else
				{				
	                // Get new label from editor.
	                list.editedItemRenderer.data.name =
						newData;
	
	                // Close the cell editor.
	                list.destroyItemEditor();
	                    
	                // Notify the list control to update its display.
	        		list.dataProvider.notifyItemUpdate(list.editedItemRenderer);
	        		
	        		var evnt:ListEvent = new ListEvent(
	        			"completeEdit", 
	        			event.bubbles, 
	        			event.cancelable, 
	        			event.columnIndex,
	        			event.rowIndex, 
	        			null,
	        			event.itemRenderer);
	        		
	        		list.dispatchEvent(evnt);
	   			}
	   			list.editable = false;
            }

            private function BeginningEdit(event:ListEvent):void 
            {
            	event.preventDefault();
            }               
		]]>
	</mx:Script>
			
	<mx:List width="100%" height="100%" allowMultipleSelection="false" textAlign="center" borderStyle="none"
		id="lstGraphs" 
		dataProvider="{graphs}"
		labelField="name"
		dragEnabled="true"
		alternatingItemColors="[#FFFFFF, #f6f6f6]"
		doubleClickEnabled="true"
		itemRenderer="PowerPack.com.graph.GraphThumb"
		itemEditor="PowerPack.com.graph.GraphThumb"
		editorDataField="returnText"
		itemEditBeginning="BeginningEdit(event);"
		itemEditBegin="beginEdit(event);"
		itemEditEnd="endEdit(event);"></mx:List>

</mx:VBox>
