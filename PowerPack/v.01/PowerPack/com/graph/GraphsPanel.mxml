<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		initialize="init();"
		height="100%">
	
	<mx:XML id="langXML"></mx:XML>
	<mx:XML id="templateXML"></mx:XML>
	
	<mx:Script>
		<![CDATA[
			import mx.managers.FocusManager;
			import mx.controls.List;
            import PowerPack.com.graph.GraphThumb;
			import mx.events.DropdownEvent;
            import mx.events.ListEvent;
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.ComboBox;
			import mx.binding.utils.*;
            import mx.utils.ObjectProxy;
		    
		    //--------------------------------------------------------------------------
		    //
		    //  Variables and properties
		    //
		    //--------------------------------------------------------------------------			
			
			public var vsViewStack:ViewStack;	
			
			public var curAccordionChild:GraphsAccordionChild;
			
			[Bindable]
			private var initGraphs:ArrayCollection = new ArrayCollection();	
			
			//--------------------------------------------------------------------------
			//
			//  Class methods
			//
			//--------------------------------------------------------------------------
					
			private function init():void
			{
				initGraphs.addItem({id: "", name: "none", initial: "false"});	
				
				// Binding to first initial combobox element label
				BindingUtils.bindSetter(
					function(xml:XML):void 
					{
						if(!xml || !initGraphs)
							return;
						initGraphs[0].name = xml.none;
						cbInitGraph.selectedIndex = cbInitGraph.selectedIndex;
					}, this, "langXML");
				
				// We need to repopulate graphs if templateXML has been changed
				BindingUtils.bindSetter(populateGraphs, this, "templateXML");
				
				btnNew.addEventListener(MouseEvent.CLICK, btnNewClickHandler);	
				btnRename.addEventListener(MouseEvent.CLICK, btnRenameClickHandler);	
				btnDelete.addEventListener(MouseEvent.CLICK, btnDeleteClickHandler);	
				btnHelp.addEventListener(MouseEvent.CLICK, btnHelpClickHandler);	
				
				cbInitGraph.addEventListener(DropdownEvent.CLOSE, cbInitGraphCloseHandler);	
			}
			
			/** 
			 *	Fill in viewstack, list and combobox with graphs
			 */	 
			public function populateGraphs(xml:XML):void
			{	
				var initialId:String = "";
				
				if(!xml)
					return;

				clear();				
				
				for each (var graphXML:XML in templateXML.elements("graph"))
				{					
					if(graphXML.@initial.toString().toLowerCase() == "true")
						initialId = graphXML.@id;
					
					var newGraph:GraphCanvas = new GraphCanvas();
					newGraph.langXML = langXML;
					BindingUtils.bindProperty(newGraph, "langXML", this, "langXML");				

					initGraphs.addItem( {	id: graphXML.@id, 
											name: graphXML.@name, 
											initial: graphXML.@initial,
											data: newGraph	} );

					vsViewStack.addChild(newGraph);

					newGraph.fromXML(graphXML.toXMLString());

					var graphAccordionChild:GraphsAccordionChild = null;

					for(var i:int=0; i<graphsAccordion.numChildren; i++)
					{
						if(GraphsAccordionChild(graphsAccordion.getChildAt(i)).label==newGraph.category)
						{
							graphAccordionChild = graphsAccordion.getChildAt(i) as GraphsAccordionChild;
							break;
						}
					}
					
					if(!graphAccordionChild)
					{
						graphAccordionChild = new GraphsAccordionChild();
						graphAccordionChild.label = newGraph.category;
						graphsAccordion.addChild(graphAccordionChild);

						graphAccordionChild.lstGraphs.addEventListener(ListEvent.CHANGE, changeLstGraphsHandler);
						graphAccordionChild.lstGraphs.addEventListener("doubleClick", btnRenameClickHandler);
						graphAccordionChild.lstGraphs.addEventListener("completeEdit", completeEditLstGraphsHandler);
					
					}

					graphAccordionChild.graphs.addItem( new ObjectProxy({	id: graphXML.@id, 
										name: graphXML.@name, 
										initial: graphXML.@initial,
										data:newGraph	}) );

				}	
				
				cbInitGraph.labelField = "name";
				cbInitGraph.dataProvider = initGraphs;
				
				graphsAccordion.selectedIndex = 0;
				GraphsAccordionChild(graphsAccordion.getChildAt(0)).lstGraphs.selectedIndex=0;
				curAccordionChild = GraphsAccordionChild(graphsAccordion.getChildAt(0));
				vsViewStack.selectedIndex=0;
				
				// set initial graph in combobox
				cbInitGraph.selectedIndex=0;
				for(i=0; i<initGraphs.length; i++)
				{
					if(initGraphs[i].id==initialId)
					{
						cbInitGraph.selectedIndex=i;
						break;
					}
				}
			}
			
			private function changeLstGraphsHandler(event:Event):void
			{
				if(graphsAccordion.selectedChild != curAccordionChild)
				{
					curAccordionChild.lstGraphs.selectedIndex = -1;
					curAccordionChild = GraphsAccordionChild(graphsAccordion.selectedChild);
				}
				
				vsViewStack.selectedChild = List(event.target).selectedItem.data;
			}
			
			private function completeEditLstGraphsHandler(event:ListEvent):void
			{        	
				var item:Object = List(event.target).dataProvider[event.rowIndex];				
				
				for(var i:int=0; i<initGraphs.length; i++)
				{
					if(item.data == initGraphs.getItemAt(i).data)
					{
						initGraphs[i].name = List(event.target).dataProvider[event.rowIndex].name;
						break;
					}
				}
								
				for(i=0; i<vsViewStack.numChildren; i++)
				{
					if(	vsViewStack.getChildAt(i) is GraphCanvas && 
						item.data == vsViewStack.getChildAt(i) )
					{
						GraphCanvas(vsViewStack.getChildAt(event.rowIndex)).label = List(event.target).dataProvider[event.rowIndex].name;
						break;
					}
				}

        		cbInitGraph.selectedIndex = cbInitGraph.selectedIndex;				
			}
						
			/** 
			 *	Gen XML that represents template
			 */	
			public function toXML():XML
			{
				var tmplXML:XML = new XML(<template></template>);
				
				for each (var child:DisplayObject in vsViewStack.getChildren())
				{
					if(child is GraphCanvas)
					{
						var graphXML:XML = GraphCanvas(child).toXML();		
						tmplXML.appendChild(graphXML);
					}
				}
				
				return tmplXML;
			}
			
			public function clear():void
			{
				// remove all except first 'none' position
				while(initGraphs.length>1)
					initGraphs.removeItemAt(1);				
				
				graphsAccordion.removeAllChildren();
				
				for each (var child:DisplayObject in vsViewStack.getChildren())
				{
					if(child is GraphCanvas)
						GraphCanvas(child).destroy();
				}
			}
		
			//--------------------------------------------------------------------------
		    //
		    //  Event handlers
		    //
		    //--------------------------------------------------------------------------		
	    			
	    	// Change initial graph
			private function cbInitGraphCloseHandler(event:DropdownEvent):void
			{
				var selectedIndex:int = ComboBox(event.target).selectedIndex;
				
				for each (var child:DisplayObject in vsViewStack)
				{
					if(child is GraphCanvas)
						GraphCanvas(child).initial = false;
				}
				
				if(selectedIndex>0)
					GraphCanvas(vsViewStack.getChildAt(selectedIndex-1)).initial = true;
			}
			
			private function btnNewClickHandler(event:MouseEvent):void
			{
				var newGraph:GraphCanvas = new GraphCanvas();
				newGraph.langXML = langXML;
				BindingUtils.bindProperty(newGraph, "langXML", this, "langXML");
									
				newGraph.label = newGraph.name;

				initGraphs.addItem( {	id: newGraph.name, 
										name: newGraph.label, 
										initial: newGraph.initial.toString(),
										data: newGraph } );

				var child:GraphsAccordionChild = GraphsAccordionChild(graphsAccordion.selectedChild);

				child.graphs.addItem(  new ObjectProxy({	
									id: newGraph.name, 
									name: newGraph.label, 
									initial: newGraph.initial.toString(),
									data: newGraph }) );
										
				vsViewStack.addChild(newGraph);

				curAccordionChild.lstGraphs.selectedIndex = -1;
				curAccordionChild = GraphsAccordionChild(graphsAccordion.selectedChild);				
				
				child.lstGraphs.selectedIndex = child.graphs.length-1;	
				vsViewStack.selectedIndex = vsViewStack.numChildren-1;
				
				child.lstGraphs.validateNow();
				child.lstGraphs.verticalScrollPosition = child.lstGraphs.maxVerticalScrollPosition;
				
				child.lstGraphs.editable=true; 
				child.lstGraphs.editedItemPosition = {rowIndex: child.lstGraphs.selectedIndex, columnIndex: 0};				
			}
				
			private function btnRenameClickHandler(event:Object):void
			{
				graphsAccordion.selectedChild = curAccordionChild;
				
				var child:GraphsAccordionChild = curAccordionChild;				
				
				if(!child.lstGraphs.selectedItem)
					return;
					
				child.lstGraphs.editable=true;
				child.lstGraphs.editedItemPosition = {rowIndex: child.lstGraphs.selectedIndex, columnIndex: 0};
			}	
					
			private function btnDeleteClickHandler(event:MouseEvent):void
			{
				graphsAccordion.selectedChild = curAccordionChild;

				var child:GraphsAccordionChild = curAccordionChild;

				if(child.lstGraphs.selectedIndex < 0 || child.graphs.length==0)
					return;
					
				var selectedItem:Object = child.lstGraphs.selectedItem;
				
				if(cbInitGraph.selectedItem.data == selectedItem.data)
					cbInitGraph.selectedIndex = 0;
				
				for(var i:int=0; i<initGraphs.length; i++)
				{
					if(selectedItem.data == initGraphs.getItemAt(i).data)
					{
						initGraphs.removeItemAt(i);
						break;
					}
				}
				child.graphs.removeItemAt(child.lstGraphs.selectedIndex);
				GraphCanvas(vsViewStack.selectedChild).destroy();
				
				child.lstGraphs.validateNow();
				vsViewStack.validateNow();
				
				//if(selectedIndex>=graphs.length)
				//{
					//lstGraphs.selectedIndex=graphs.length-1;
					//vsViewStack.selectedIndex=graphs.length-1;			
				//}
				//else
				//{
					//lstGraphs.selectedIndex=selectedIndex;
					//vsViewStack.selectedIndex=selectedIndex;
				//}
			}	
						    		
			private function btnHelpClickHandler(event:MouseEvent):void
			{
				// TODO
			}			
								
		]]>
	</mx:Script>
	
	<mx:Panel width="100%" height="100%" layout="absolute" title="{langXML.navigatorpanel.title}">
				
		<mx:VBox width="100%" height="100%" verticalGap="0">
		
			<mx:ControlBar paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" horizontalGap="0" width="100%" horizontalAlign="center" id="ctrlBar">
				<mx:Button label="{langXML.navigatorpanel.graphs.btnnew}" labelPlacement="bottom" fontFamily="Arial" textAlign="center" cornerRadius="0" alpha="0.5" id="btnNew" width="100%" paddingRight="0" paddingLeft="0" fontSize="9" icon="@Embed('../../../resources/Button.png')" paddingBottom="3" horizontalGap="0" verticalGap="0" paddingTop="0"/>
				<mx:Button label="{langXML.navigatorpanel.graphs.btnrename}" labelPlacement="bottom" fontFamily="Arial" cornerRadius="0" alpha="0.5" id="btnRename" width="100%" textAlign="center" paddingLeft="0" paddingRight="0" fontSize="9" icon="@Embed('../../../resources/Button.png')" paddingBottom="3" horizontalGap="0" verticalGap="0" paddingTop="0"/>
				<mx:Button label="{langXML.navigatorpanel.graphs.btndelete}" fontFamily="Arial" cornerRadius="0" labelPlacement="bottom" alpha="0.5" id="btnDelete" width="100%" paddingLeft="0" paddingRight="0" textAlign="center" fontSize="9" icon="@Embed('../../../resources/Button.png')" paddingBottom="3" horizontalGap="0" verticalGap="0" paddingTop="0"/>
				<mx:Button label="{langXML.navigatorpanel.graphs.btnhelp}" fontFamily="Arial" cornerRadius="0" labelPlacement="bottom" alpha="0.5" id="btnHelp" width="100%" paddingLeft="0" paddingRight="0" textAlign="center" fontSize="9" icon="@Embed('../../../resources/Button.png')" paddingBottom="3" horizontalGap="0" verticalGap="0" paddingTop="0"/>
			</mx:ControlBar>
			
			<mx:Accordion id="graphsAccordion" fontFamily="Verdana" borderStyle="solid" height="100%" width="100%">		
			</mx:Accordion>
			
		</mx:VBox>

	</mx:Panel>
	
	<mx:Panel width="100%" layout="absolute" title="{langXML.initialgraphpanel.title}">
		<mx:ComboBox width="100%" id="cbInitGraph"></mx:ComboBox>
	</mx:Panel>
	
</mx:VBox>