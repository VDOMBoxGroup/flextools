<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:ns1="http://www.adobe.com/2006/fc"   
	initialize="init()" xmlns:ns3="PowerPack.com.*" xmlns:ns4="PowerPack.com.graph.*" xmlns:ns5="*">
	<mx:Script>
		<![CDATA[
			import mdm.*;

			import PowerPack.com.*;
			import PowerPack.com.graph.PowerPackClass;
			import PowerPack.com.graph.GraphCanvas;
			import PowerPack.com.graph.GraphNode;			
			import PowerPack.com.graph.GraphArrow;

			import mx.events.MenuEvent;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
 		    import flash.errors.*;
		    import flash.events.*;
		    import flash.net.URLLoader;
		    import flash.net.URLRequest;
		
		    //--------------------------------------------------------------------------
		    //
		    //  Variables and properties
		    //
		    //--------------------------------------------------------------------------
	          		
           	private var settingsRequest:URLRequest;
            private var settingsLoader:URLLoader;

            private var langRequest:URLRequest;
            private var langLoader:URLLoader;
            
            private var tmplRequest:URLRequest;
            private var tmplLoader:URLLoader;

            [Bindable]
            public var settingsXML:XML = new XML(<settings></settings>);
            
            [Bindable]
            public var langXML:XML;
            
            [Bindable]
            public var templateXML:XML;
            
            public var curOpenFile:String;            
 		
			//--------------------------------------------------------------------------
			//
			//  Class methods
			//
			//--------------------------------------------------------------------------  	
						
			private function init():void 
			{ 
				var bExists:Boolean = true;
				
				mdm.Application.init(this, mdmInit); 	
				mdm.FileExplorer.init();
				
				appCtrlBar.height = 0;
				appCtrlBar.visible = false;			
				
				// Load application settings
	            settingsRequest = new URLRequest("settings.xml");
	            settingsRequest.method = URLRequestMethod.POST;
    	        settingsLoader = new URLLoader();
        	    settingsLoader.addEventListener(Event.COMPLETE, completeSettingsHandler);
				
				// Load language file
	            langRequest = new URLRequest("lang/english.xml");
	            langRequest.method = URLRequestMethod.POST;
    	        langLoader = new URLLoader();
        	    langLoader.addEventListener(Event.COMPLETE, completeLangHandler);
	                    	  
	            // Create loader for template  
	            tmplRequest = new URLRequest();
	            tmplRequest.method = URLRequestMethod.POST;
    	        tmplLoader = new URLLoader();
        	    tmplLoader.addEventListener(Event.COMPLETE, completeTemplateHandler);
       	    
				// for MDM Zinc context menu				
				addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);

        	    //bExists = mdm.FileSystem.fileExistsUnicode(settingsRequest.url);        	    
        	    if(bExists)
	               	settingsLoader.load(settingsRequest);

        	    //bExists = mdm.FileSystem.fileExistsUnicode(langRequest.url);
          	    if(bExists)
       	   			langLoader.load(langRequest);
		    }
		    
		   	private function mdmInit():void
	       	{
	       		mdm.Application.enableExitHandler()
	       		
				mdm.Application.onAppExit = function():void{
	       			exitApplication();
				}

		       	mdm.Menu.Context.menuType = "function";
		       	GraphCanvas.generateContextMenu();
		       	GraphNode.generateContextMenu();
		    	GraphArrow.generateContextMenu();
	       	}
	       	
	       	public function saveSettings():void
	       	{
	       		if(settingsXML.name() != "settings");
		       		settingsXML = new XML(<settings></settings>);
	       		
	       		settingsXML.lastopenfile = curOpenFile?curOpenFile:"";
	       		
   	        	var fileData:String = settingsXML.toXMLString();
            	mdm.FileSystem.saveFileUnicode(settingsRequest.url, fileData);					
	       	}
	       	
	       	public function exitApplication():void
	       	{
				// Save settings
				saveSettings();

            	mdm.Application.exit("ask","Are you sure you want to Exit?");	       		
	       	}
	    	    
			//--------------------------------------------------------------------------
		    //
		    //  Event handlers
		    //
		    //--------------------------------------------------------------------------
		    
	        private function completeSettingsHandler(event:Event):void
	        {
	            settingsXML = XML(event.target.data);
				
				// Open last opened file	            
	            curOpenFile = settingsXML.lastopenfile.toString().length>0 ? settingsXML.lastopenfile : null;

            	var exists:Boolean = true;
            	//exists = mdm.FileSystem.fileExistsUnicode(curOpenFile);
            	if(curOpenFile && exists)
            	{
	            	tmplRequest.url = curOpenFile;
    	    	    tmplLoader.load(tmplRequest); 	            
            	}
	        }		    
	        private function completeLangHandler(event:Event):void
	        {
	            langXML = XML(event.target.data);
	            
        	    Alert.yesLabel = langXML.yes;
                Alert.noLabel = langXML.no;	 
                Alert.cancelLabel = langXML.cancel;         
	        }
	        private function completeTemplateHandler(event:Event):void
	        {
	            templateXML = XML(event.target.data);         
	        }	        
	    	    	
	    	private function mouseOverHandler(event:MouseEvent):void
	   		{	    	
	    		PowerPackClass.refreshMenu(this);
	    		event.stopPropagation();
	    	}

            // Event handler for the MenuBar control's itemClick event.
            private function menuHandler(event:MenuEvent):void  
            {
                var fileBrowser:FileBrowser;
                var fileData:String;
                
                if(event.item.@id == "new")
                {
                	curOpenFile = null;
	                graphsAccordionChild.clear();
                }
                else if(event.item.@id == "open_file")
                {		
                	fileBrowser = new FileBrowser();
	            	fileBrowser.langXML = langXML;
                	
                	PopUpManager.addPopUp(fileBrowser, this, true);
                	PopUpManager.centerPopUp(fileBrowser);               	
                	fileBrowser.addEventListener("closeBrowse", openBrowseHandler);
                }
                else if(event.item.@id == "close")
                {		
              		curOpenFile = null;
	                graphsAccordionChild.clear();
                }                
    	        else if(event.item.@id == "save")
    	        {
    	        	if(!curOpenFile)
    	        	{
                		fileBrowser = new FileBrowser();
	            		fileBrowser.langXML = langXML;
                	
                		PopUpManager.addPopUp(fileBrowser, this, true);
                		PopUpManager.centerPopUp(fileBrowser);
                		fileBrowser.addEventListener("closeBrowse", saveBrowseHandler); 
              		} 
              		else
              		{		            		
		            	fileData = graphsAccordionChild.toXML().toXMLString();
		            	mdm.FileSystem.saveFileUnicode(curOpenFile, fileData);             		
              		}	        
    	        }
				else if(event.item.@id == "save_as")
				{
            		fileBrowser = new FileBrowser();
	            	fileBrowser.langXML = langXML;
            	
            		PopUpManager.addPopUp(fileBrowser, this, true);
            		PopUpManager.centerPopUp(fileBrowser); 
            		fileBrowser.addEventListener("closeBrowse", saveBrowseHandler); 				
				}
				else if(event.item.@id == "language")
				{
	            	langRequest.url = "lang/"+event.item.@data;
        	    	langLoader.load(langRequest);					
				}
				else if(event.item.@id == "exit")
				{
					exitApplication();
				}     
            }
            	
            private function openBrowseHandler(event:Event):void
            {
            	if(event.target.selectedItem.type != "file")
            		return;
            		
            	var exists:Boolean = mdm.FileSystem.fileExistsUnicode(event.target.selectedItem.path);

            	if(!exists)
            		return;
            		
            	tmplRequest.url = event.target.selectedItem.path;
        	    tmplLoader.load(tmplRequest);  
            	
            	//var fileData:String = mdm.FileSystem.loadFileUnicode(event.target.selectedItem.path);
            	//templateXML = new XML(fileData);

            	curOpenFile = event.target.selectedItem.path;
            }
            
            private function saveBrowseHandler(event:Event):void
            {
            	var fileData:String = graphsAccordionChild.toXML().toXMLString();
            	mdm.FileSystem.saveFileUnicode(event.target.selectedItem.path, fileData);
            	
            	curOpenFile = event.target.selectedItem.path;
            }

		]]>
	</mx:Script>
        
	<mx:VBox top="10" left="10" bottom="10" right="10">
		
		<mx:MenuBar labelField="@label" itemClick="menuHandler(event);" 
		        dataProvider="{langXML.mainmenu.menuitem}" width="100%"></mx:MenuBar>
		
		<mx:ApplicationControlBar width="100%" height="69" id="appCtrlBar">
			<mx:TabNavigator height="100%" width="100%">
				
				<mx:Canvas label="File" width="100%" height="100%">
				</mx:Canvas>
				
				<mx:Canvas label="Import" width="100%" height="92">
				</mx:Canvas>
				
				<mx:Canvas label="VDOM Box" width="100%" height="100%">
				</mx:Canvas>
				
			</mx:TabNavigator>
		</mx:ApplicationControlBar>
		
		<mx:Spacer width="100%"/>
		
		<mx:HDividedBox height="100%" width="100%">
			<mx:VBox height="100%">
			
				<mx:Panel width="100%" height="100%" layout="absolute" title="{langXML.navigatorpanel.title}">
					<mx:Accordion fontFamily="Verdana" borderStyle="solid" height="100%" width="100%">
						
						<ns4:GraphsAccordionChild 
							id="graphsAccordionChild"
							name="application"	
							langXML="{langXML}" 
							templateXML="{templateXML}" 
							cbInitialGraph="{cbInitGraph}"
							vsViewStack="{viewstack}">
						</ns4:GraphsAccordionChild>

						<mx:Canvas label="Container" width="100%" height="100%">
						</mx:Canvas>
						
						<mx:Canvas label="Resources" width="100%" height="100%">
						</mx:Canvas>
						
					</mx:Accordion>
				</mx:Panel>
				
				<mx:Panel width="100%" layout="absolute" title="{langXML.initialgraphpanel.title}">
					<mx:ComboBox width="100%" id="cbInitGraph"></mx:ComboBox>
				</mx:Panel>
				
			</mx:VBox>
			
			<mx:Panel width="100%" height="100%" layout="absolute" title="{langXML.designpanel.title}">
				<mx:ViewStack id="viewstack" width="100%" height="100%">
				</mx:ViewStack>
			</mx:Panel>
			
		</mx:HDividedBox>
	</mx:VBox>
</mx:Application>
