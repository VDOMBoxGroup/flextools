<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
	borderAlpha="0.95" cornerRadius="1" width="400" height="300"
	shadowDirection="right"	borderColor="#636363" titleStyleName="title"
	borderThicknessLeft="1" borderThicknessRight="1"
	title="DropDown values editor" verticalGap="15">
	
	<mx:Style>
		.title {
			color:#FFFFFF;
			fontWeight:bold;
		}
	</mx:Style>
	
	<mx:Script>
		<![CDATA[
			import mx.messaging.management.Attribute;
			import mx.controls.Alert;
			import mx.utils.StringUtil;
			import mx.events.DataGridEvent;
			import mx.managers.PopUpManager;
			
			private const EMPTY_STR:String = '[[ empty ]]';
		
			private var _currentAttrObj:Object;
			
			public var editableLang:String = '';
			public var exampleLang:String = '';
			
			private var rowsProvider:Array = []; /* of { label:langStr } */

			[Bindable] private var _langsProvider:Array = [];
			
			public function set currentAttrObj(value:Object):void {
				_currentAttrObj = {};
				_currentAttrObj = value;
			}
			
			public function get currentAttrObj():Object {
				return _currentAttrObj;
			}
			
			/* This function must be executed "by hand" after object initializitaion  */
			public function onShow():void
			{
				loadValues();
				
				/* set languageBoxes to actual information */
				var i:int = 0;
				for each (var langObj:Object in _langsProvider) {
					if (langObj.label == editableLang)
						__editableLang.selectedIndex = i;
					if (langObj.label == exampleLang)
						__exampleLang.selectedIndex = i;
					i++;
				}
			}

			private function loadValues():void
			{
				/* attach values for editing */
				
				if (!_currentAttrObj.dropDownStrings[exampleLang])
					_currentAttrObj.dropDownStrings[exampleLang] = [];
				
				if (!_currentAttrObj.dropDownStrings[editableLang])
					_currentAttrObj.dropDownStrings[editableLang] = [];
				
				rowsProvider = [];
								
				for (var i:int = 0; i < _currentAttrObj.dropDownValues.length; i++) {
					var value:String = _currentAttrObj.dropDownValues[i];
					var edValue:String;
					var exValue:String
					
					if (!_currentAttrObj.dropDownStrings[editableLang][i])
						edValue = EMPTY_STR;
					else
						edValue = _currentAttrObj.dropDownStrings[editableLang][i];
					
					if (!_currentAttrObj.dropDownStrings[exampleLang][i])
						exValue = EMPTY_STR;
					else
						exValue = _currentAttrObj.dropDownStrings[exampleLang][i];
					
					rowsProvider.push( {editable:edValue, example:exValue, value:value} );
				}
				
				__dg.dataProvider = rowsProvider;
			}
			
			
			private function writeValues():void
			{
				_currentAttrObj.dropDownValues = [];
				_currentAttrObj.dropDownStrings[editableLang] = [];
				for (var i:int = 0; i < rowsProvider.length; i++) {
					_currentAttrObj.dropDownValues[i] = rowsProvider[i].value;
					_currentAttrObj.dropDownStrings[editableLang][i] = rowsProvider[i].editable;
				}
			}

			
			public function set langsProvider(lp:Array):void
			{
				_langsProvider = lp;
			}
			
			private function addNewRowBtnClickHandler():void
			{
				var row:Object = { editable:EMPTY_STR, example:EMPTY_STR, value:0 };
				rowsProvider.push(row);
				
				__dg.dataProvider = rowsProvider;
			}
			
			private function removeRowBtnClickHandler():void
			{
				var newRowsProvider:Array = [];
				var si:int = __dg.selectedIndex;
				if (si < 0)
					return;
				
				var i:int;
				for (i = 0; i < rowsProvider.length; i++) {
					if (i != si)
						newRowsProvider.push(rowsProvider[i]);
				}
				
				rowsProvider = newRowsProvider;
				var vsp:int = __dg.verticalScrollPosition;
				__dg.dataProvider = rowsProvider;
				__dg.verticalScrollPosition = vsp;
				
			}
			
			private function changeLanguagesHandler():void
			{
				writeValues();
				editableLang = __editableLang.text;
				exampleLang = __exampleLang.text;
				loadValues();
			}
			
			
			private function okBtnClickHandler():void
			{
				/* Save unsaved data: Editable Strings, Values */
				writeValues();
								
				this.dispatchEvent(new Event(Event.COMPLETE));
			}
			
			private function itemEditEndHandler(event:DataGridEvent):void
			{
				if (StringUtil.trim(event.currentTarget.itemEditorInstance.text) == '') {
					event.currentTarget.itemEditorInstance.text = EMPTY_STR;
				}
			}
			
		]]>
	</mx:Script>
	
	
	<mx:HBox width="100%" horizontalGap="4">
		<mx:VBox width="148" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="Editable language" />
			<mx:ComboBox id="__editableLang" cornerRadius="1" width="148" dataProvider="{_langsProvider}" change="{changeLanguagesHandler();}" />
		</mx:VBox>
		<mx:VBox width="148" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Label text="Example language" />
			<mx:ComboBox id="__exampleLang" cornerRadius="1" width="148" dataProvider="{_langsProvider}" change="{changeLanguagesHandler();}" />
		</mx:VBox>
	</mx:HBox>	
	
	<mx:DataGrid id="__dg" itemEditEnd="{itemEditEndHandler(event);}"
		width="100%" height="100%" draggableColumns="false" sortableColumns="false" resizableColumns="false" editable="true">
		
		<mx:columns>
			<mx:DataGridColumn dataField="editable" width="150" headerText="Text" />
			<mx:DataGridColumn dataField="example" width="150" headerText="Text" editable="false" />
			<mx:DataGridColumn dataField="value" headerText="Value" />	
		</mx:columns>
	</mx:DataGrid>
	
	<mx:HBox width="100%" horizontalGap="4" horizontalAlign="center">
		<mx:Button label="Add" click="{addNewRowBtnClickHandler();}" />
		<mx:Button label="Remove" click="{removeRowBtnClickHandler();}" />
		<mx:Spacer width="100%" />
		<mx:Button label="Ok" click="{okBtnClickHandler();}" />
		<mx:Button label="Cancel" click="{PopUpManager.removePopUp(this);}" />
	</mx:HBox>
	
	
</mx:TitleWindow>