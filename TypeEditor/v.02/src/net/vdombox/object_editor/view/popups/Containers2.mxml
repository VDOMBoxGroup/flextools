<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   preinitialize="creationComplete()" title="Change word"
			   >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import org.puremvc.as3.patterns.facade.Facade;
			
			import spark.events.TextOperationEvent;			
			
			[Bindable]
			private var arContainers:ArrayCollection = new ArrayCollection();			
			public  var container:Object = "";
			
			private function creationComplete():void 
			{				
				addEventListener(CloseEvent.CLOSE, closeHandler); 
				//PopUpManager.centerPopUp(this);
				this.x = 200;
				this.y = 200;			
				
				dispatchEvent( new FlexEvent( FlexEvent.CREATION_COMPLETE ));								
			}
			
			public function showContainersList( avalibleContainers:ArrayCollection, enUsedContainers:Array):void 
			{
				// TODO: may be necessary to optimize
				var contLisrDataProv : ArrayCollection = new ArrayCollection();
				for each (var avCont:Object in avalibleContainers)
				{
					contLisrDataProv.addItem( avCont)
				}
				
				for each (var enUsCont:String in enUsedContainers)
				{
					var inList : Boolean = false;
					enUsCont = enUsCont.replace(" ","");
					for each ( avCont in contLisrDataProv)
						if (avCont["label"] == enUsCont || avCont["data"] == enUsCont)
						{
							var itemIndex: int = contLisrDataProv.getItemIndex(avCont);
							contLisrDataProv.removeItemAt(itemIndex);
							
							inUsedList.dataProvider.addItem(avCont);
							
							inList = true;
							continue;
						}
					if (!inList)	
						inUsedList.dataProvider.addItem({label:enUsCont, data:enUsCont });
				}
				contList.dataProvider = contLisrDataProv;	
			}
			
			public function getContainers():String
			{
				var contArt:Array = new Array();
				
				for each (var avCont:Object in inUsedList.dataProvider)
					contArt.push(avCont["label"]);
				return contArt.join(); //7' ale
			}
			
			private function closeHandler(cEvent:CloseEvent):void 
			{
				PopUpManager.removePopUp(this);
			}
			
			private function button1_clickHandler():void
			{
				container = contList.selectedItem;
				dispatchEvent( new CloseEvent( CloseEvent.CLOSE ));
			}
			
			private function cancel():void
			{
				dispatchEvent( new CloseEvent( CloseEvent.CLOSE ));
			}			
		]]>
	</fx:Script>
	
	<s:VGroup paddingLeft="10" paddingBottom="10" paddingRight="10" paddingTop="10">
		<s:Label text="Drag and drop:"/>
			<s:HGroup>
				<s:VGroup>
					<s:Label text="Avalible:" />			
					<s:List  id="contList" dataProvider="{arContainers}" doubleClick="button1_clickHandler()"
							 dragMoveEnabled="true" dragEnabled="true" dropEnabled="true"
							 width="200" height="200"/>
				</s:VGroup>
				
				<s:VGroup>
					<s:Label text="In used:" />
					<s:List  id="inUsedList"  dataProvider="{arContainers}" doubleClick="button1_clickHandler()"
							 dragMoveEnabled="true" dragEnabled="true" dropEnabled="true"
							 width="200" height="200"/>
				</s:VGroup>
			</s:HGroup>
			<s:HGroup right="0" >
				<s:Group width="100%"/>
				<s:Button label="Ok" click="button1_clickHandler()" />
			</s:HGroup>		
	</s:VGroup>	
</s:TitleWindow>