<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 xmlns:OEComponents="OEComponents.*" xmlns:ns="net.vdombox.object_editor.model.*"
		 label="Events" xmlns:ns1="net.vdombox.object_editor.view.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
						
			[Bindable]
			public var currentEvent:Object;
			
			[Bindable]
			public var currentParameter:Object;
						
			public function clearEventFields():void
			{
				eventName.text				= null;				
				parametersList.dataProvider = null;
				clearParameterFields();
			}
			
			public function clearParameterFields():void
			{
				parHelp.text	= null;
				parName.text	= null;
				parOrder.text	= null;
				parVbType.text	= null;
			}
			
			/*private var _data : XML
			
			[Bindable]
			public var arEvent:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var arParameters:ArrayCollection = new ArrayCollection();*/
			
			/*public function set  dataProvader(xml:XML):void
			{
				this.enabled = true;
//				arLibraries.removeAll();
//				libCode.text = "";
				
//				_data =  net.vdombox.object_editor.view.essence.Events.Userinterfaceevents[0];
//				if (!_data) _data = new XML("<Userinterfaceevents/>");
				
				for each(var child:XML in _data.children())
				{
					arEvent.addItem({label:child.@Name, data:child.@Name});
				}
				
				events.selectedIndex = 0;
				changeEvent();
			}*/
			
			/*private function changeEvent():void
			{
				arParameters.removeAll();				
				var eventXML:XML = getCurentEvent();
				tiEventName.text = eventXML.@Name;				
				for each(var child:XML in eventXML.Parameters.children())
				{
					arParameters.addItem({label:child.@Name, data:child.@Name});
				}				
				parameters.selectedIndex = 0;
				changeParameter();
			}*/
			
			/*private function addEvent():void
			{
				var newName: String = "name_" + arEvent.length.toString();
				arEvent.addItem({label:newName, data:newName});
				
				_data.appendChild(new XML( "<Event Name='"+newName+"'><Parameters/></Event>"));
				
				events.selectedIndex = arEvent.length -1 ;
				changeEvent();
			}
			
			private function deleteEvent():void
			{
				delete _data.Event.(@Name == tiEventName.text )[0]; 
				
				var selectedIndex:int  = events.selectedIndex;
				arEvent.removeItemAt(events.selectedIndex);
				
				if (arEvent.length)
				{
					if (selectedIndex == arEvent.length )
						events.selectedIndex = selectedIndex - 1;
					else
						events.selectedIndex = selectedIndex;
					
					changeEvent();
				}
				else
					cleareEvent();
			}
			
			private function cleareEvent():void
			{
				tiEventName.text = "";
			 	arParameters.removeAll();
				cleareParametr();
				
			}
			
			private function changeParameter():void
			{
				if (parameters.selectedItem)
					validateParametr();
			}
				
			private function addParameter():void
			{
				var newName: String = "name_" + arParameters.length.toString();
				arParameters.addItem({label:newName, data:newName});
				
				var xmlEvent : XML = getCurentEvent();
				
				xmlEvent.Parameters.appendChild(new XML( "<Parameter Name='"+ newName +"' />"));
				
				parameters.selectedIndex = arParameters.length -1;
				changeParameter();
			}
			
			private function deleteParameter():void
			{
				var xmlEvent:XML = getCurentEvent();
				delete xmlEvent.Parameters.Parameter.(@Name == fname.text )[0]; 
				
				var selectedIndex:int  = parameters.selectedIndex;
				arParameters.removeItemAt(selectedIndex);
				
				if (arParameters.length)
				{
					if (selectedIndex ==  arParameters.length )
						parameters.selectedIndex = selectedIndex - 1;
					else
						parameters.selectedIndex = selectedIndex;
					
					validateParametr();
				}
				else
					cleareParametr();
			}
			
			private function validateParametr():void
			{
				var parameter:XML = getCurentParameter(); 
				
				fname.text = parameter.@Name;
				fOrder.text = parameter.@Order;
				fVbType.text = parameter.@VbType;
//				fHelp.text = parameter.@Help;
			}
			
			private function cleareParametr():void
			{
				fname.text = "";
				fOrder.text = "";
				fVbType.text = "";
//				fHelp.text = "";
			}
			
			private function getCurentEvent():XML
			{
				var eventName:String = events.selectedItem.data;
				return _data.Event.(@Name == eventName)[0];
			}
			
			private function getCurentParameter():XML
			{
				var eventXML:XML = getCurentEvent();
				var parameterName:String = parameters.selectedItem.data;
				return  eventXML.Parameters.Parameter.(@Name == parameterName)[0];
			}
			
			
			private function changeEventName():void
			{
				var index:int = events.selectedIndex;
				var objEvent:Object = arEvent[arEvent.getItemIndex(events.selectedItem)];
				
				var xmlEvent:XML = getCurentEvent();
				xmlEvent.@Name = tiEventName.text;
				
				objEvent["label"] = objEvent["data"] = tiEventName.text;
				
				events.dataProvider = null;
				events.dataProvider = arEvent;
				events.validateNow();
				
				events.selectedIndex = index;
			}
			
			
			private function changeParametrsValues():void
			{
				var index:int = parameters.selectedIndex;
				var objParameter:Object = arParameters[arParameters.getItemIndex(parameters.selectedItem)];
				
				var xmlParameter:XML = getCurentParameter();
				xmlParameter.@Name = fname.text;
				xmlParameter.@Order = fOrder.text;
				xmlParameter.@VbType = fVbType.text;
//				xmlParameter.@Help = fHelp.text;
				
				objParameter["label"] = objParameter["data"] = fname.text;
				
				parameters.dataProvider = null;
				parameters.dataProvider = arParameters;
				parameters.validateNow();
				
				parameters.selectedIndex = index;
			}*/
					
			private function changeField():void
			{
				dispatchEvent(new Event( Event.CHANGE ));
			}
			
		]]>
	</fx:Script>
	
<s:HGroup>
	<mx:Form  width="100%" height="100%" paddingTop="0">
		<mx:FormHeading fontSize="10"  label="Select Event:" paddingTop="0" />
		<s:List id="eventsList" width="200" height="{height- 60}" change="this.currentEvent=List(event.target).selectedItem"/>
		<s:HGroup width="100%">
			<s:HGroup width="100%"/>
			<s:Button id="addEvent" label="Add"/>
			<s:Button id="deleteEvent" label="Delete" enabled="{eventsList.selectedIndex != -1}"/>
		</s:HGroup>
	</mx:Form >
	<mx:Form  width="100%" height="100%" paddingTop="0" >
		<mx:FormHeading fontSize="10"  label="Events details:" paddingTop="0" />
		<mx:FormItem label="Name:" toolTip="Name">
			<mx:TextInput id="eventName" width="150" change="{changeField()}" />
		</mx:FormItem>
		
		<s:HGroup width="100%"/>
		<s:Label text="Select parameter:" />
		<s:List id="parametersList" width="100%" height="{height- 115}" change="this.currentParameter=List(event.target).selectedItem" /><!--dataProvider="{arParameters}"   change="{changeParameter()}"/-->
		<s:HGroup width="100%" >
			<s:HGroup width="100%"/>
			<s:Button id="addParameter" label="Add" />
			<s:Button id="deleteParameter" label="Delete" enabled="{parametersList.selectedIndex != -1}"/>
		</s:HGroup>
	</mx:Form>
	<mx:Form width="100%" color="0x323232" paddingTop="0">
		<mx:FormHeading fontSize="10"  label="Parameters detais:" paddingTop="0" />
		
		<mx:FormItem label="Name:" toolTip="Имя объекта">
			<mx:TextInput id="parName" width="200" change="{changeField()}"/>
		</mx:FormItem>
		
		<mx:FormItem label="Order:" toolTip="Это ордер">
			<mx:TextInput id="parOrder" width="200" change="{changeField()}"/>
		</mx:FormItem>
		
		<mx:FormItem label="VbType:" toolTip="Это VbType">
			<mx:TextInput id="parVbType" width="200" change="{changeField()}" />
		</mx:FormItem>
		
		<mx:FormItem label="Help:" toolTip="Это Help">
			<s:HGroup>
				<ns1:LangTextInput id="parHelp" width="200" change="{changeField()}"/>
			</s:HGroup>
		</mx:FormItem>
	</mx:Form>
	</s:HGroup>
</s:NavigatorContent>
