<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 label="Libraries">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
		/*	import mx.collections.ArrayCollection;
			private var _data : XML;
			
			[Bindable]
			public var arLibraries:ArrayCollection = new ArrayCollection();
			
			public function set  dataProvader(xml:XML):void
			{
				this.enabled = true;
				arLibraries.removeAll();
				libCode.text = "";
				
				_data =  xml.descendants("Libraries")[0];
				if (!_data) _data = new XML("<Libraries/>");
				
				for each(var child:XML in _data.children())
				{
					if (child.name() == "Library")
						arLibraries.addItem({label:child.name(), data:child[0]});
					
					if (arLibraries.length > 0)
					{
						librariesList.selectedIndex = 0;
						libCode.text = librariesList.selectedItem["data"];
					}
				}
			}
			
			private function changeLibrary(event:Event):void
			{
				libCode.text = List(event.target).selectedItem.data; // ["data"];
			}
 			
			private function saveChange():void
			{
//				_data = XML("<Libraries/>");
				for (var i:String in _data.children())
				{
					delete _data.Library[0];
				}
				
				if (arLibraries.length > 0)
					arLibraries[librariesList.selectedIndex]["data"] = libCode.text;
				
//				delete _data.Library[libraries.selectedIndex] //= XML("<![CDATA[" +libCode.text +"]" +"]" +">");
				for (i in arLibraries)
				{
					var library :XML = new XML("<Library Target='Html'/>");
					library.appendChild(XML("<![CDATA[" + arLibraries[i]["data"] +"]" +"]" +">"));
					_data.appendChild(library);
				}
			}
			
			
			private function addLibrary():void
			{
				arLibraries.addItem({label:"Library", data:""});
				libCode.text = "";
				librariesList.selectedIndex = arLibraries.length - 1;
				saveChange();
			}
			
			private function deleteLibrary():void
			{
				if (librariesList.selectedIndex != -1)
				{
					arLibraries.removeItemAt(librariesList.selectedIndex);
					
					if (arLibraries.length)
					{
						librariesList.selectedIndex = 0;
						libCode.text = arLibraries[0]["data"]
					}
					else
						libCode.text = "";
					
					saveChange();
				}
			}*/
			[Bindable]
			public var currentLibrary:Object;
			
			/*private function libTarget():String
			{
				if( currentLibrary.target )
				{
					return currentLibrary.target;
				}
				else
				{
					return "";
				}
			}*/
			public function clearLibraryFields():void
			{
				target.text	= null;				
				clearCodeField();
			}
			
			public function clearCodeField():void
			{
				code.text	= null;				
			}

			public function saveChange():void
			{
				dispatchEvent(new Event( Event.CHANGE ));
			}						
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" height="100%">
		<s:VGroup width="200" height="100%">
			<s:List id="librariesList" width="100%"  height="100%"   
					change="this.currentLibrary=List(event.target).selectedItem" 
					skinClass="spark.skins.spark.ListSkin"/>
			
			<s:HGroup right="0" >
				<s:Button id="addLibraryButton" label="Add"/>
				<s:Button id="deleteLibraryButton" label="Delete" enabled="{librariesList.selectedIndex != -1}"/>
			</s:HGroup>
		</s:VGroup>
		<s:VGroup width="100%" height="100%">	
			<s:HGroup  right="0">
				<s:Label text="Target:"/>
				<s:TextInput id="target" change="saveChange()" />
				<!--s:Label text="Target: 'HTML'"/-->
			</s:HGroup>
			<mx:TextArea  id="code"  width="100%" height="100%" change="{saveChange()}"/>
		</s:VGroup>	
	</s:HGroup>
</s:NavigatorContent>
