<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:editors="net.vdombox.editors.*"
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:view="view.*"
		addedToStage="addedToStageHandler()">

	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.events.ResizeEvent;


			private var hcw : ChangeWatcher;
			private var vcw : ChangeWatcher;

			private function updateScrollBar() : void
			{
				vsb.maximum = scriptAreaComponent.maxScrollV;
				vsb.value = scriptAreaComponent.scrollV;

				hsb.maximum = scriptAreaComponent.maxScrollH / 8;
				hsb.value = scriptAreaComponent.scrollH / 8;
			}

			override protected function updateDisplayList( unscaledWidth : Number, unscaledHeight : Number ) : void
			{
				super.updateDisplayList( unscaledWidth, unscaledHeight );
			}

			private function addedToStageHandler() : void
			{
				addEventListener( Event.REMOVED_FROM_STAGE, removedFromStageHandler, false, 0, true );
				addEventListener( Event.RESIZE, resizeHandler, false, 0, true );
				addEventListener( MouseEvent.MOUSE_DOWN, mouseDownHandler, false, 0, true );

				if ( scriptAreaComponent )
				{
					scriptAreaComponent.addEventListener( Event.SCROLL, scriptAreaComponent_scrollHandler, false, 0, true );
					scriptAreaComponent.addEventListener( Event.CHANGE, scriptAreaComponent_changeHandler, false, 0, true );
					scriptAreaComponent.addEventListener( KeyboardEvent.KEY_DOWN, scriptAreaComponent_keyDownHandler, false, 0, true );
				}

				if ( hsb )
					hsb.addEventListener( Event.CHANGE, hsb_changeHandler, false, 0, true );

				if ( vsb )
					vsb.addEventListener( Event.CHANGE, vsb_changeHandler, false, 0, true );

				updateScrollBar();
			}

			private function removedFromStageHandler( event : Event ) : void
			{
				removeEventListener( Event.REMOVED_FROM_STAGE, removedFromStageHandler );
				removeEventListener( Event.RESIZE, resizeHandler );
				removeEventListener( MouseEvent.MOUSE_DOWN, mouseDownHandler );

				if ( scriptAreaComponent )
					scriptAreaComponent.removeEventListener( Event.SCROLL, scriptAreaComponent_scrollHandler );

				if ( hsb )
					hsb.removeEventListener( Event.CHANGE, hsb_changeHandler );

				if ( vsb )
					vsb.removeEventListener( Event.CHANGE, vsb_changeHandler );
			}

			private function resizeHandler( event : ResizeEvent ) : void
			{
				updateScrollBar();
			}

			private function mouseDownHandler( event : MouseEvent ) : void
			{
				if ( stage )
					stage.focus = scriptAreaComponent;
			}

			private function scriptAreaComponent_scrollHandler( event : Event ) : void
			{
				updateScrollBar();
			}

			private function scriptAreaComponent_changeHandler( event : Event ) : void
			{
				updateScrollBar();
			}
			
			private function scriptAreaComponent_keyDownHandler( event : KeyboardEvent ) : void
			{
				updateScrollBar();
			}

			private function hsb_changeHandler( event : Event ) : void
			{
				scriptAreaComponent.scrollH = hsb.value * 8;
			}

			private function vsb_changeHandler( event : Event ) : void
			{
				scriptAreaComponent.scrollV = vsb.value;
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"/>
	</s:states>


	<editors:ScriptAreaComponent id="scriptAreaComponent"
								 bottom="15" left="0" right="15" top="0"/>

	<s:HScrollBar id="hsb"
				  minimum="0"
				  bottom="0" left="40" right="{ vsb.width }"
				  change="hsb_changeHandler(event)"/>

	<s:VScrollBar id="vsb"
				  minimum="1"
				  bottom="{ hsb.height }" right="0" top="0"
				  change="vsb_changeHandler(event)"/>
</s:Skin>
