<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" click="save()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.managers.PopUpManager;
			
			private var _data : XML;
			private var prentXML :XML;
			
			[Bindable]
			public var arLanguages:ArrayCollection = new ArrayCollection();
			
			public function set  dataProvader(xml:XML):void
			{
				this.enabled = true;
				prentXML = xml;
//				arLanguages = new ArrayCollection();
				
				var cols:Array = new Array();
				var dataGridColumn: DataGridColumn = new DataGridColumn("ID");
				dataGridColumn.width = 50;
//				dataGridColumn.editable = true;
				dataGridColumn.setStyle("fontWeight", "bold");
				cols.push(dataGridColumn);
				
				_data =  xml.Languages[0];
				if (!_data) _data = new XML("<Languages/>");
				
				for each(var child:XML in _data.children())
				{	
					if (child.name() == "Language")
					{
						dataGridColumn = new DataGridColumn(child[0].@Code);
						cols.push(dataGridColumn);
					}
				}
				
				languages.columns = cols;
				
				arLanguages.removeAll();
				
				//arLanguages.addItem({label:child.name(), data:child[0]});
				
				var countLanguages:int = _data.children().length();
				var	langEN:XML = _data.Language.(@Code == "en_US")[0];
				for each (var word:XML in langEN.children())
				{
					var item:Object = {};
					var id:String = word.@ID;
					
					item["ID"] = id;
//					item["en_US"] = word.toString();
					
					for(var i:int = 0; i < countLanguages; i++)
					{
						var lang:XML = _data.Language[i];
						item[lang.@Code] = lang.Sentence.(@ID == id )[0].toString();
					}
					arLanguages.addItem(item);
				}
			}
			
			private var dataChanged:Boolean;
			protected function languages_itemEditEndHandler(event:DataGridEvent):void
			{
				// TODO Auto-generated method stub
//				languages.validateNow();
//				save();
				dataChanged = true;
				
			}
			
			private function save():void
			{
				if (dataChanged)
				{	
					dataChanged = false;
					
					var newLangs:XML = new XML("<Languages/>");
					for(var i:int=0; i < languages.columns.length; i++)
					{
						var dtGridCol:DataGridColumn = languages.columns[i] as DataGridColumn;
						if (dtGridCol.dataField == "ID") continue;
						
						var lanItem:XML = new XML("<Language/>");
						lanItem.@Code = dtGridCol.dataField;
						newLangs.appendChild(lanItem);
					}
					for (var item:String in arLanguages)
					{
						var word:Object = arLanguages[item];
						var id:String = word["ID"];
						for each(var lang:XML in newLangs.children())
						{
							var sentence: XML = new XML("<Sentence/>");
							sentence.@ID = id;
							sentence.appendChild(word[lang.@Code]);
							
							lang.appendChild(sentence);
						}
					}
					
					delete prentXML.Languages[0] ;
					prentXML.appendChild(newLangs);
				}
			}
			
			private function addWord():void
			{
				var num:int = Math.round(Math.random()*1000);
				arLanguages.addItem({"ID":num, "en_US":"New word"});
				languages.selectedIndex = arLanguages.length - 1;
				languages.validateNow();
				languages.scrollToIndex(languages.selectedIndex);
			}
			
			private function deleteWord():void
			{
//				languages.
				var obj:Object = [];
//				obj["ID"] = languages.selectedItem.ID;
				arLanguages.removeItemAt(arLanguages.getItemIndex(languages.selectedItem));
			}
			
			private function addLaguage():void
			{
				var popup:NewLanguage = NewLanguage(PopUpManager.createPopUp(this, NewLanguage, true));
				popup.addEventListener(CloseEvent.CLOSE, closeHandler);
				
				function closeHandler(event:CloseEvent):void
				{
					var lan:String = event.target.languageName;
					
					if(lan == "")return;
					
					var cols:Array = languages.columns;
					var dataGridColumn: DataGridColumn = new DataGridColumn(lan);
	
					cols.push(dataGridColumn);
					languages.columns = cols;
					
					for (var i:String in arLanguages)
					{
						var word:Object = arLanguages[i];
						word[lan] = word["en_US"];
					}
				}
			}
			
			

		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		<s:HGroup paddingLeft="10">
			<s:Button label="Add Language" click="{addLaguage()}" />	
		</s:HGroup>
	<mx:DataGrid id="languages" color="0x323232" width="100%" height="100%" rowCount="3"   itemEditEnd="languages_itemEditEndHandler(event)"
				 editable="true" dataProvider="{arLanguages}"/>
	<s:HGroup textAlign="right" width="100%"   paddingBottom="10" paddingRight="10">
		<s:HGroup width="100%"/>
		<s:Button label="Add" click="{addWord();}" />
		
		<s:Button label="Delete"  enabled="{languages.selectedIndex != -1}"
				  click="{deleteWord()}"/>
	</s:HGroup>
	</s:VGroup>
</s:Group>
